// MaterialX LiteGraph Functional Definitions
//
// MaterialX Version: 1.39.0
// Generated on: Mon Jul 15 2024 16:21:26 GMT-0400 (Eastern Daylight Time)
//

/**
  * @function mtlx_input_input_float
  * @description Library: mtlx. Category: input. Type: float
  *   LiteGraph id: mtlx/input/input_float
  */
function mtlx_input_input_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_input_float';
  this.nodedef_node = 'input';
  this.nodedef_type = 'float';
  this.nodedef_group = 'input';
  this.addInput('in', 'float');
  this.addProperty('in', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":""});
  this.addOutput('out', 'float');
  this.title = 'input_float';
  this.desc = "MaterialX:mtlx/input/input_float";
  this.onNodeCreated = function() {
    //console.log('Node created:', this);
  }
  this.onRemoved = function() {
    //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#161';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
    console.log('Executing node: ', this);
  }
}
LiteGraph.registerNodeType('mtlx/input/input_float', mtlx_input_input_float);

/**
  * @function mtlx_input_input_color3
  * @description Library: mtlx. Category: input. Type: color3
  *   LiteGraph id: mtlx/input/input_color3
  */
function mtlx_input_input_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_input_color3';
  this.nodedef_node = 'input';
  this.nodedef_type = 'color3';
  this.nodedef_group = 'input';
  this.addInput('in', 'color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":""});
  this.addOutput('out', 'color3');
  this.title = 'input_color3';
  this.desc = "MaterialX:mtlx/input/input_color3";
  this.onNodeCreated = function() {
    //console.log('Node created:', this);
  }
  this.onRemoved = function() {
    //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#37A';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
    console.log('Executing node: ', this);
  }
}
LiteGraph.registerNodeType('mtlx/input/input_color3', mtlx_input_input_color3);

/**
  * @function mtlx_input_input_color4
  * @description Library: mtlx. Category: input. Type: color4
  *   LiteGraph id: mtlx/input/input_color4
  */
function mtlx_input_input_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_input_color4';
  this.nodedef_node = 'input';
  this.nodedef_type = 'color4';
  this.nodedef_group = 'input';
  this.addInput('in', 'color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":""});
  this.addOutput('out', 'color4');
  this.title = 'input_color4';
  this.desc = "MaterialX:mtlx/input/input_color4";
  this.onNodeCreated = function() {
    //console.log('Node created:', this);
  }
  this.onRemoved = function() {
    //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#69A';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
    console.log('Executing node: ', this);
  }
}
LiteGraph.registerNodeType('mtlx/input/input_color4', mtlx_input_input_color4);

/**
  * @function mtlx_input_input_vector2
  * @description Library: mtlx. Category: input. Type: vector2
  *   LiteGraph id: mtlx/input/input_vector2
  */
function mtlx_input_input_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_input_vector2';
  this.nodedef_node = 'input';
  this.nodedef_type = 'vector2';
  this.nodedef_group = 'input';
  this.addInput('in', 'vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":""});
  this.addOutput('out', 'vector2');
  this.title = 'input_vector2';
  this.desc = "MaterialX:mtlx/input/input_vector2";
  this.onNodeCreated = function() {
    //console.log('Node created:', this);
  }
  this.onRemoved = function() {
    //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#265';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
    console.log('Executing node: ', this);
  }
}
LiteGraph.registerNodeType('mtlx/input/input_vector2', mtlx_input_input_vector2);

/**
  * @function mtlx_input_input_vector3
  * @description Library: mtlx. Category: input. Type: vector3
  *   LiteGraph id: mtlx/input/input_vector3
  */
function mtlx_input_input_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_input_vector3';
  this.nodedef_node = 'input';
  this.nodedef_type = 'vector3';
  this.nodedef_group = 'input';
  this.addInput('in', 'vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":""});
  this.addOutput('out', 'vector3');
  this.title = 'input_vector3';
  this.desc = "MaterialX:mtlx/input/input_vector3";
  this.onNodeCreated = function() {
    //console.log('Node created:', this);
  }
  this.onRemoved = function() {
    //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#465';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
    console.log('Executing node: ', this);
  }
}
LiteGraph.registerNodeType('mtlx/input/input_vector3', mtlx_input_input_vector3);

/**
  * @function mtlx_input_input_vector4
  * @description Library: mtlx. Category: input. Type: vector4
  *   LiteGraph id: mtlx/input/input_vector4
  */
function mtlx_input_input_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_input_vector4';
  this.nodedef_node = 'input';
  this.nodedef_type = 'vector4';
  this.nodedef_group = 'input';
  this.addInput('in', 'vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":""});
  this.addOutput('out', 'vector4');
  this.title = 'input_vector4';
  this.desc = "MaterialX:mtlx/input/input_vector4";
  this.onNodeCreated = function() {
    //console.log('Node created:', this);
  }
  this.onRemoved = function() {
    //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#275';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
    console.log('Executing node: ', this);
  }
}
LiteGraph.registerNodeType('mtlx/input/input_vector4', mtlx_input_input_vector4);

/**
  * @function mtlx_input_input_matrix33
  * @description Library: mtlx. Category: input. Type: matrix33
  *   LiteGraph id: mtlx/input/input_matrix33
  */
function mtlx_input_input_matrix33() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_input_matrix33';
  this.nodedef_node = 'input';
  this.nodedef_type = 'matrix33';
  this.nodedef_group = 'input';
  this.addInput('in', 'matrix33');
  this.addProperty('in', [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":""});
  this.addOutput('out', 'matrix33');
  this.title = 'input_matrix33';
  this.desc = "MaterialX:mtlx/input/input_matrix33";
  this.onNodeCreated = function() {
    //console.log('Node created:', this);
  }
  this.onRemoved = function() {
    //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#333';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
    console.log('Executing node: ', this);
  }
}
LiteGraph.registerNodeType('mtlx/input/input_matrix33', mtlx_input_input_matrix33);

/**
  * @function mtlx_input_input_matrix44
  * @description Library: mtlx. Category: input. Type: matrix44
  *   LiteGraph id: mtlx/input/input_matrix44
  */
function mtlx_input_input_matrix44() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_input_matrix44';
  this.nodedef_node = 'input';
  this.nodedef_type = 'matrix44';
  this.nodedef_group = 'input';
  this.addInput('in', 'matrix44');
  this.addProperty('in', [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":""});
  this.addOutput('out', 'matrix44');
  this.title = 'input_matrix44';
  this.desc = "MaterialX:mtlx/input/input_matrix44";
  this.onNodeCreated = function() {
    //console.log('Node created:', this);
  }
  this.onRemoved = function() {
    //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#444';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
    console.log('Executing node: ', this);
  }
}
LiteGraph.registerNodeType('mtlx/input/input_matrix44', mtlx_input_input_matrix44);

/**
  * @function mtlx_input_input_integer
  * @description Library: mtlx. Category: input. Type: integer
  *   LiteGraph id: mtlx/input/input_integer
  */
function mtlx_input_input_integer() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_input_integer';
  this.nodedef_node = 'input';
  this.nodedef_type = 'integer';
  this.nodedef_group = 'input';
  this.addInput('in', 'integer');
  this.addProperty('in', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":""});
  this.addOutput('out', 'integer');
  this.title = 'input_integer';
  this.desc = "MaterialX:mtlx/input/input_integer";
  this.onNodeCreated = function() {
    //console.log('Node created:', this);
  }
  this.onRemoved = function() {
    //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#A32';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
    console.log('Executing node: ', this);
  }
}
LiteGraph.registerNodeType('mtlx/input/input_integer', mtlx_input_input_integer);

/**
  * @function mtlx_input_input_string
  * @description Library: mtlx. Category: input. Type: string
  *   LiteGraph id: mtlx/input/input_string
  */
function mtlx_input_input_string() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_input_string';
  this.nodedef_node = 'input';
  this.nodedef_type = 'string';
  this.nodedef_group = 'input';
  this.addInput('in', 'string');
  this.addProperty('in', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":""});
  this.addOutput('out', 'string');
  this.title = 'input_string';
  this.desc = "MaterialX:mtlx/input/input_string";
  this.onNodeCreated = function() {
    //console.log('Node created:', this);
  }
  this.onRemoved = function() {
    //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#395';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
    console.log('Executing node: ', this);
  }
}
LiteGraph.registerNodeType('mtlx/input/input_string', mtlx_input_input_string);

/**
  * @function mtlx_input_input_boolean
  * @description Library: mtlx. Category: input. Type: boolean
  *   LiteGraph id: mtlx/input/input_boolean
  */
function mtlx_input_input_boolean() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_input_boolean';
  this.nodedef_node = 'input';
  this.nodedef_type = 'boolean';
  this.nodedef_group = 'input';
  this.addInput('in', 'boolean');
  this.addProperty('in', false, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":""});
  this.addOutput('out', 'boolean');
  this.title = 'input_boolean';
  this.desc = "MaterialX:mtlx/input/input_boolean";
  this.onNodeCreated = function() {
    //console.log('Node created:', this);
  }
  this.onRemoved = function() {
    //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#060';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
    console.log('Executing node: ', this);
  }
}
LiteGraph.registerNodeType('mtlx/input/input_boolean', mtlx_input_input_boolean);

/**
  * @function mtlx_input_input_filename
  * @description Library: mtlx. Category: input. Type: filename
  *   LiteGraph id: mtlx/input/input_filename
  */
function mtlx_input_input_filename() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_input_filename';
  this.nodedef_node = 'input';
  this.nodedef_type = 'filename';
  this.nodedef_group = 'input';
  this.addInput('in', 'filename');
  this.addProperty('in', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":""});
  this.addOutput('out', 'filename');
  this.title = 'input_filename';
  this.desc = "MaterialX:mtlx/input/input_filename";
  this.onNodeCreated = function() {
    //console.log('Node created:', this);
  }
  this.onRemoved = function() {
    //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#888';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
    console.log('Executing node: ', this);
  }
}
LiteGraph.registerNodeType('mtlx/input/input_filename', mtlx_input_input_filename);

/**
  * @function mtlx_input_input_BSDF
  * @description Library: mtlx. Category: input. Type: BSDF
  *   LiteGraph id: mtlx/input/input_BSDF
  */
function mtlx_input_input_BSDF() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_input_BSDF';
  this.nodedef_node = 'input';
  this.nodedef_type = 'BSDF';
  this.nodedef_group = 'input';
  this.addInput('in', 'BSDF');
  this.addProperty('in', '', 'BSDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":""});
  this.addOutput('out', 'BSDF');
  this.title = 'input_BSDF';
  this.desc = "MaterialX:mtlx/input/input_BSDF";
  this.onNodeCreated = function() {
    //console.log('Node created:', this);
  }
  this.onRemoved = function() {
    //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
    console.log('Executing node: ', this);
  }
}
LiteGraph.registerNodeType('mtlx/input/input_BSDF', mtlx_input_input_BSDF);

/**
  * @function mtlx_input_input_EDF
  * @description Library: mtlx. Category: input. Type: EDF
  *   LiteGraph id: mtlx/input/input_EDF
  */
function mtlx_input_input_EDF() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_input_EDF';
  this.nodedef_node = 'input';
  this.nodedef_type = 'EDF';
  this.nodedef_group = 'input';
  this.addInput('in', 'EDF');
  this.addProperty('in', '', 'EDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":""});
  this.addOutput('out', 'EDF');
  this.title = 'input_EDF';
  this.desc = "MaterialX:mtlx/input/input_EDF";
  this.onNodeCreated = function() {
    //console.log('Node created:', this);
  }
  this.onRemoved = function() {
    //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
    console.log('Executing node: ', this);
  }
}
LiteGraph.registerNodeType('mtlx/input/input_EDF', mtlx_input_input_EDF);

/**
  * @function mtlx_input_input_VDF
  * @description Library: mtlx. Category: input. Type: VDF
  *   LiteGraph id: mtlx/input/input_VDF
  */
function mtlx_input_input_VDF() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_input_VDF';
  this.nodedef_node = 'input';
  this.nodedef_type = 'VDF';
  this.nodedef_group = 'input';
  this.addInput('in', 'VDF');
  this.addProperty('in', '', 'VDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":""});
  this.addOutput('out', 'VDF');
  this.title = 'input_VDF';
  this.desc = "MaterialX:mtlx/input/input_VDF";
  this.onNodeCreated = function() {
    //console.log('Node created:', this);
  }
  this.onRemoved = function() {
    //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
    console.log('Executing node: ', this);
  }
}
LiteGraph.registerNodeType('mtlx/input/input_VDF', mtlx_input_input_VDF);

/**
  * @function mtlx_input_input_surfaceshader
  * @description Library: mtlx. Category: input. Type: surfaceshader
  *   LiteGraph id: mtlx/input/input_surfaceshader
  */
function mtlx_input_input_surfaceshader() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_input_surfaceshader';
  this.nodedef_node = 'input';
  this.nodedef_type = 'surfaceshader';
  this.nodedef_group = 'input';
  this.addInput('in', 'surfaceshader');
  this.addProperty('in', '', 'surfaceshader',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":""});
  this.addOutput('out', 'surfaceshader');
  this.title = 'input_surfaceshader';
  this.desc = "MaterialX:mtlx/input/input_surfaceshader";
  this.onNodeCreated = function() {
    //console.log('Node created:', this);
  }
  this.onRemoved = function() {
    //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
    console.log('Executing node: ', this);
  }
}
LiteGraph.registerNodeType('mtlx/input/input_surfaceshader', mtlx_input_input_surfaceshader);

/**
  * @function mtlx_input_input_volumeshader
  * @description Library: mtlx. Category: input. Type: volumeshader
  *   LiteGraph id: mtlx/input/input_volumeshader
  */
function mtlx_input_input_volumeshader() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_input_volumeshader';
  this.nodedef_node = 'input';
  this.nodedef_type = 'volumeshader';
  this.nodedef_group = 'input';
  this.addInput('in', 'volumeshader');
  this.addProperty('in', '', 'volumeshader',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":""});
  this.addOutput('out', 'volumeshader');
  this.title = 'input_volumeshader';
  this.desc = "MaterialX:mtlx/input/input_volumeshader";
  this.onNodeCreated = function() {
    //console.log('Node created:', this);
  }
  this.onRemoved = function() {
    //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
    console.log('Executing node: ', this);
  }
}
LiteGraph.registerNodeType('mtlx/input/input_volumeshader', mtlx_input_input_volumeshader);

/**
  * @function mtlx_input_input_displacementshader
  * @description Library: mtlx. Category: input. Type: displacementshader
  *   LiteGraph id: mtlx/input/input_displacementshader
  */
function mtlx_input_input_displacementshader() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_input_displacementshader';
  this.nodedef_node = 'input';
  this.nodedef_type = 'displacementshader';
  this.nodedef_group = 'input';
  this.addInput('in', 'displacementshader');
  this.addProperty('in', '', 'displacementshader',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":""});
  this.addOutput('out', 'displacementshader');
  this.title = 'input_displacementshader';
  this.desc = "MaterialX:mtlx/input/input_displacementshader";
  this.onNodeCreated = function() {
    //console.log('Node created:', this);
  }
  this.onRemoved = function() {
    //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
    console.log('Executing node: ', this);
  }
}
LiteGraph.registerNodeType('mtlx/input/input_displacementshader', mtlx_input_input_displacementshader);

/**
  * @function mtlx_input_input_lightshader
  * @description Library: mtlx. Category: input. Type: lightshader
  *   LiteGraph id: mtlx/input/input_lightshader
  */
function mtlx_input_input_lightshader() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_input_lightshader';
  this.nodedef_node = 'input';
  this.nodedef_type = 'lightshader';
  this.nodedef_group = 'input';
  this.addInput('in', 'lightshader');
  this.addProperty('in', '', 'lightshader',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":""});
  this.addOutput('out', 'lightshader');
  this.title = 'input_lightshader';
  this.desc = "MaterialX:mtlx/input/input_lightshader";
  this.onNodeCreated = function() {
    //console.log('Node created:', this);
  }
  this.onRemoved = function() {
    //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
    console.log('Executing node: ', this);
  }
}
LiteGraph.registerNodeType('mtlx/input/input_lightshader', mtlx_input_input_lightshader);

/**
  * @function mtlx_input_input_material
  * @description Library: mtlx. Category: input. Type: material
  *   LiteGraph id: mtlx/input/input_material
  */
function mtlx_input_input_material() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_input_material';
  this.nodedef_node = 'input';
  this.nodedef_type = 'material';
  this.nodedef_group = 'input';
  this.addInput('in', 'material');
  this.addProperty('in', '', 'material',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":""});
  this.addOutput('out', 'material');
  this.title = 'input_material';
  this.desc = "MaterialX:mtlx/input/input_material";
  this.onNodeCreated = function() {
    //console.log('Node created:', this);
  }
  this.onRemoved = function() {
    //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
    console.log('Executing node: ', this);
  }
}
LiteGraph.registerNodeType('mtlx/input/input_material', mtlx_input_input_material);

/**
  * @function mtlx_input_input_vector2array
  * @description Library: mtlx. Category: input. Type: vector2array
  *   LiteGraph id: mtlx/input/input_vector2array
  */
function mtlx_input_input_vector2array() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_input_vector2array';
  this.nodedef_node = 'input';
  this.nodedef_type = 'vector2array';
  this.nodedef_group = 'input';
  this.addInput('in', 'vector2array');
  this.addProperty('in', '', 'vector2array',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":""});
  this.addOutput('out', 'vector2array');
  this.title = 'input_vector2array';
  this.desc = "MaterialX:mtlx/input/input_vector2array";
  this.onNodeCreated = function() {
    //console.log('Node created:', this);
  }
  this.onRemoved = function() {
    //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
    console.log('Executing node: ', this);
  }
}
LiteGraph.registerNodeType('mtlx/input/input_vector2array', mtlx_input_input_vector2array);

/**
  * @function mtlx_output_output_float
  * @description Library: mtlx. Category: output. Type: float
  *   LiteGraph id: mtlx/output/output_float
  */
function mtlx_output_output_float() {
  this.title = 'output_float';
  this.desc = "MaterialX Node :mtlx/output/output_float";
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_output_NaN';
  this.nodedef_node = 'output';
  this.nodedef_type = 'float';
  this.nodedef_group = 'output';
  this.addInput('in', 'float');
  this.addProperty('in', 0, 'float');
  this.addOutput('out', 'float');
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
  }
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#161';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
  console.log('Executing node:', this);
  }
}
LiteGraph.registerNodeType('mtlx/output/output_float', mtlx_output_output_float);

/**
  * @function mtlx_output_output_color3
  * @description Library: mtlx. Category: output. Type: color3
  *   LiteGraph id: mtlx/output/output_color3
  */
function mtlx_output_output_color3() {
  this.title = 'output_color3';
  this.desc = "MaterialX Node :mtlx/output/output_color3";
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_output_NaN';
  this.nodedef_node = 'output';
  this.nodedef_type = 'color3';
  this.nodedef_group = 'output';
  this.addInput('in', 'color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3');
  this.addOutput('out', 'color3');
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
  }
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#37A';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
  console.log('Executing node:', this);
  }
}
LiteGraph.registerNodeType('mtlx/output/output_color3', mtlx_output_output_color3);

/**
  * @function mtlx_output_output_color4
  * @description Library: mtlx. Category: output. Type: color4
  *   LiteGraph id: mtlx/output/output_color4
  */
function mtlx_output_output_color4() {
  this.title = 'output_color4';
  this.desc = "MaterialX Node :mtlx/output/output_color4";
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_output_NaN';
  this.nodedef_node = 'output';
  this.nodedef_type = 'color4';
  this.nodedef_group = 'output';
  this.addInput('in', 'color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4');
  this.addOutput('out', 'color4');
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
  }
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#69A';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
  console.log('Executing node:', this);
  }
}
LiteGraph.registerNodeType('mtlx/output/output_color4', mtlx_output_output_color4);

/**
  * @function mtlx_output_output_vector2
  * @description Library: mtlx. Category: output. Type: vector2
  *   LiteGraph id: mtlx/output/output_vector2
  */
function mtlx_output_output_vector2() {
  this.title = 'output_vector2';
  this.desc = "MaterialX Node :mtlx/output/output_vector2";
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_output_NaN';
  this.nodedef_node = 'output';
  this.nodedef_type = 'vector2';
  this.nodedef_group = 'output';
  this.addInput('in', 'vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2');
  this.addOutput('out', 'vector2');
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
  }
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#265';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
  console.log('Executing node:', this);
  }
}
LiteGraph.registerNodeType('mtlx/output/output_vector2', mtlx_output_output_vector2);

/**
  * @function mtlx_output_output_vector3
  * @description Library: mtlx. Category: output. Type: vector3
  *   LiteGraph id: mtlx/output/output_vector3
  */
function mtlx_output_output_vector3() {
  this.title = 'output_vector3';
  this.desc = "MaterialX Node :mtlx/output/output_vector3";
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_output_NaN';
  this.nodedef_node = 'output';
  this.nodedef_type = 'vector3';
  this.nodedef_group = 'output';
  this.addInput('in', 'vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3');
  this.addOutput('out', 'vector3');
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
  }
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#465';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
  console.log('Executing node:', this);
  }
}
LiteGraph.registerNodeType('mtlx/output/output_vector3', mtlx_output_output_vector3);

/**
  * @function mtlx_output_output_vector4
  * @description Library: mtlx. Category: output. Type: vector4
  *   LiteGraph id: mtlx/output/output_vector4
  */
function mtlx_output_output_vector4() {
  this.title = 'output_vector4';
  this.desc = "MaterialX Node :mtlx/output/output_vector4";
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_output_NaN';
  this.nodedef_node = 'output';
  this.nodedef_type = 'vector4';
  this.nodedef_group = 'output';
  this.addInput('in', 'vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4');
  this.addOutput('out', 'vector4');
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
  }
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#275';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
  console.log('Executing node:', this);
  }
}
LiteGraph.registerNodeType('mtlx/output/output_vector4', mtlx_output_output_vector4);

/**
  * @function mtlx_output_output_matrix33
  * @description Library: mtlx. Category: output. Type: matrix33
  *   LiteGraph id: mtlx/output/output_matrix33
  */
function mtlx_output_output_matrix33() {
  this.title = 'output_matrix33';
  this.desc = "MaterialX Node :mtlx/output/output_matrix33";
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_output_NaN';
  this.nodedef_node = 'output';
  this.nodedef_type = 'matrix33';
  this.nodedef_group = 'output';
  this.addInput('in', 'matrix33');
  this.addProperty('in', [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0], 'matrix33');
  this.addOutput('out', 'matrix33');
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
  }
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#333';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
  console.log('Executing node:', this);
  }
}
LiteGraph.registerNodeType('mtlx/output/output_matrix33', mtlx_output_output_matrix33);

/**
  * @function mtlx_output_output_matrix44
  * @description Library: mtlx. Category: output. Type: matrix44
  *   LiteGraph id: mtlx/output/output_matrix44
  */
function mtlx_output_output_matrix44() {
  this.title = 'output_matrix44';
  this.desc = "MaterialX Node :mtlx/output/output_matrix44";
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_output_NaN';
  this.nodedef_node = 'output';
  this.nodedef_type = 'matrix44';
  this.nodedef_group = 'output';
  this.addInput('in', 'matrix44');
  this.addProperty('in', [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0], 'matrix44');
  this.addOutput('out', 'matrix44');
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
  }
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#444';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
  console.log('Executing node:', this);
  }
}
LiteGraph.registerNodeType('mtlx/output/output_matrix44', mtlx_output_output_matrix44);

/**
  * @function mtlx_output_output_integer
  * @description Library: mtlx. Category: output. Type: integer
  *   LiteGraph id: mtlx/output/output_integer
  */
function mtlx_output_output_integer() {
  this.title = 'output_integer';
  this.desc = "MaterialX Node :mtlx/output/output_integer";
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_output_NaN';
  this.nodedef_node = 'output';
  this.nodedef_type = 'integer';
  this.nodedef_group = 'output';
  this.addInput('in', 'integer');
  this.addProperty('in', 0, 'integer');
  this.addOutput('out', 'integer');
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
  }
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#A32';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
  console.log('Executing node:', this);
  }
}
LiteGraph.registerNodeType('mtlx/output/output_integer', mtlx_output_output_integer);

/**
  * @function mtlx_output_output_string
  * @description Library: mtlx. Category: output. Type: string
  *   LiteGraph id: mtlx/output/output_string
  */
function mtlx_output_output_string() {
  this.title = 'output_string';
  this.desc = "MaterialX Node :mtlx/output/output_string";
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_output_NaN';
  this.nodedef_node = 'output';
  this.nodedef_type = 'string';
  this.nodedef_group = 'output';
  this.addInput('in', 'string');
  this.addProperty('in', '', 'string');
  this.addOutput('out', 'string');
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
  }
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#395';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
  console.log('Executing node:', this);
  }
}
LiteGraph.registerNodeType('mtlx/output/output_string', mtlx_output_output_string);

/**
  * @function mtlx_output_output_boolean
  * @description Library: mtlx. Category: output. Type: boolean
  *   LiteGraph id: mtlx/output/output_boolean
  */
function mtlx_output_output_boolean() {
  this.title = 'output_boolean';
  this.desc = "MaterialX Node :mtlx/output/output_boolean";
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_output_NaN';
  this.nodedef_node = 'output';
  this.nodedef_type = 'boolean';
  this.nodedef_group = 'output';
  this.addInput('in', 'boolean');
  this.addProperty('in', false, 'boolean');
  this.addOutput('out', 'boolean');
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
  }
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#060';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
  console.log('Executing node:', this);
  }
}
LiteGraph.registerNodeType('mtlx/output/output_boolean', mtlx_output_output_boolean);

/**
  * @function mtlx_output_output_filename
  * @description Library: mtlx. Category: output. Type: filename
  *   LiteGraph id: mtlx/output/output_filename
  */
function mtlx_output_output_filename() {
  this.title = 'output_filename';
  this.desc = "MaterialX Node :mtlx/output/output_filename";
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_output_NaN';
  this.nodedef_node = 'output';
  this.nodedef_type = 'filename';
  this.nodedef_group = 'output';
  this.addInput('in', 'filename');
  this.addProperty('in', '', 'filename');
  this.addOutput('out', 'filename');
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
  }
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.boxcolor = '#888';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
  console.log('Executing node:', this);
  }
}
LiteGraph.registerNodeType('mtlx/output/output_filename', mtlx_output_output_filename);

/**
  * @function mtlx_output_output_BSDF
  * @description Library: mtlx. Category: output. Type: BSDF
  *   LiteGraph id: mtlx/output/output_BSDF
  */
function mtlx_output_output_BSDF() {
  this.title = 'output_BSDF';
  this.desc = "MaterialX Node :mtlx/output/output_BSDF";
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_output_NaN';
  this.nodedef_node = 'output';
  this.nodedef_type = 'BSDF';
  this.nodedef_group = 'output';
  this.addInput('in', 'BSDF');
  this.addProperty('in', '', 'BSDF');
  this.addOutput('out', 'BSDF');
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
  }
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
  console.log('Executing node:', this);
  }
}
LiteGraph.registerNodeType('mtlx/output/output_BSDF', mtlx_output_output_BSDF);

/**
  * @function mtlx_output_output_EDF
  * @description Library: mtlx. Category: output. Type: EDF
  *   LiteGraph id: mtlx/output/output_EDF
  */
function mtlx_output_output_EDF() {
  this.title = 'output_EDF';
  this.desc = "MaterialX Node :mtlx/output/output_EDF";
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_output_NaN';
  this.nodedef_node = 'output';
  this.nodedef_type = 'EDF';
  this.nodedef_group = 'output';
  this.addInput('in', 'EDF');
  this.addProperty('in', '', 'EDF');
  this.addOutput('out', 'EDF');
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
  }
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
  console.log('Executing node:', this);
  }
}
LiteGraph.registerNodeType('mtlx/output/output_EDF', mtlx_output_output_EDF);

/**
  * @function mtlx_output_output_VDF
  * @description Library: mtlx. Category: output. Type: VDF
  *   LiteGraph id: mtlx/output/output_VDF
  */
function mtlx_output_output_VDF() {
  this.title = 'output_VDF';
  this.desc = "MaterialX Node :mtlx/output/output_VDF";
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_output_NaN';
  this.nodedef_node = 'output';
  this.nodedef_type = 'VDF';
  this.nodedef_group = 'output';
  this.addInput('in', 'VDF');
  this.addProperty('in', '', 'VDF');
  this.addOutput('out', 'VDF');
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
  }
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
  console.log('Executing node:', this);
  }
}
LiteGraph.registerNodeType('mtlx/output/output_VDF', mtlx_output_output_VDF);

/**
  * @function mtlx_output_output_surfaceshader
  * @description Library: mtlx. Category: output. Type: surfaceshader
  *   LiteGraph id: mtlx/output/output_surfaceshader
  */
function mtlx_output_output_surfaceshader() {
  this.title = 'output_surfaceshader';
  this.desc = "MaterialX Node :mtlx/output/output_surfaceshader";
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_output_NaN';
  this.nodedef_node = 'output';
  this.nodedef_type = 'surfaceshader';
  this.nodedef_group = 'output';
  this.addInput('in', 'surfaceshader');
  this.addProperty('in', '', 'surfaceshader');
  this.addOutput('out', 'surfaceshader');
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
  }
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
  console.log('Executing node:', this);
  }
}
LiteGraph.registerNodeType('mtlx/output/output_surfaceshader', mtlx_output_output_surfaceshader);

/**
  * @function mtlx_output_output_volumeshader
  * @description Library: mtlx. Category: output. Type: volumeshader
  *   LiteGraph id: mtlx/output/output_volumeshader
  */
function mtlx_output_output_volumeshader() {
  this.title = 'output_volumeshader';
  this.desc = "MaterialX Node :mtlx/output/output_volumeshader";
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_output_NaN';
  this.nodedef_node = 'output';
  this.nodedef_type = 'volumeshader';
  this.nodedef_group = 'output';
  this.addInput('in', 'volumeshader');
  this.addProperty('in', '', 'volumeshader');
  this.addOutput('out', 'volumeshader');
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
  }
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
  console.log('Executing node:', this);
  }
}
LiteGraph.registerNodeType('mtlx/output/output_volumeshader', mtlx_output_output_volumeshader);

/**
  * @function mtlx_output_output_displacementshader
  * @description Library: mtlx. Category: output. Type: displacementshader
  *   LiteGraph id: mtlx/output/output_displacementshader
  */
function mtlx_output_output_displacementshader() {
  this.title = 'output_displacementshader';
  this.desc = "MaterialX Node :mtlx/output/output_displacementshader";
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_output_NaN';
  this.nodedef_node = 'output';
  this.nodedef_type = 'displacementshader';
  this.nodedef_group = 'output';
  this.addInput('in', 'displacementshader');
  this.addProperty('in', '', 'displacementshader');
  this.addOutput('out', 'displacementshader');
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
  }
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
  console.log('Executing node:', this);
  }
}
LiteGraph.registerNodeType('mtlx/output/output_displacementshader', mtlx_output_output_displacementshader);

/**
  * @function mtlx_output_output_lightshader
  * @description Library: mtlx. Category: output. Type: lightshader
  *   LiteGraph id: mtlx/output/output_lightshader
  */
function mtlx_output_output_lightshader() {
  this.title = 'output_lightshader';
  this.desc = "MaterialX Node :mtlx/output/output_lightshader";
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_output_NaN';
  this.nodedef_node = 'output';
  this.nodedef_type = 'lightshader';
  this.nodedef_group = 'output';
  this.addInput('in', 'lightshader');
  this.addProperty('in', '', 'lightshader');
  this.addOutput('out', 'lightshader');
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
  }
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
  console.log('Executing node:', this);
  }
}
LiteGraph.registerNodeType('mtlx/output/output_lightshader', mtlx_output_output_lightshader);

/**
  * @function mtlx_output_output_material
  * @description Library: mtlx. Category: output. Type: material
  *   LiteGraph id: mtlx/output/output_material
  */
function mtlx_output_output_material() {
  this.title = 'output_material';
  this.desc = "MaterialX Node :mtlx/output/output_material";
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_output_NaN';
  this.nodedef_node = 'output';
  this.nodedef_type = 'material';
  this.nodedef_group = 'output';
  this.addInput('in', 'material');
  this.addProperty('in', '', 'material');
  this.addOutput('out', 'material');
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
  }
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
  console.log('Executing node:', this);
  }
}
LiteGraph.registerNodeType('mtlx/output/output_material', mtlx_output_output_material);

/**
  * @function mtlx_output_output_vector2array
  * @description Library: mtlx. Category: output. Type: vector2array
  *   LiteGraph id: mtlx/output/output_vector2array
  */
function mtlx_output_output_vector2array() {
  this.title = 'output_vector2array';
  this.desc = "MaterialX Node :mtlx/output/output_vector2array";
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_output_NaN';
  this.nodedef_node = 'output';
  this.nodedef_type = 'vector2array';
  this.nodedef_group = 'output';
  this.addInput('in', 'vector2array');
  this.addProperty('in', '', 'vector2array');
  this.addOutput('out', 'vector2array');
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
  }
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.color = '#004C94';
  this.bgcolor = '#000';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.onExecute = function() {
  console.log('Executing node:', this);
  }
}
LiteGraph.registerNodeType('mtlx/output/output_vector2array', mtlx_output_output_vector2array);

/**
  * @function mtlx_material_surfacematerial
  * @description Library: mtlx. Category: undefined. Type: material
  *   LiteGraph id: mtlx/material/surfacematerial
  */
function mtlx_material_surfacematerial() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_surfacematerial';
  this.nodedef_type = 'material';
  this.nodedef_node = 'surfacematerial';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/surfacematerial.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_surfacematerial_out_genglsl.png';
  this.nodedef_group = 'material';
  this.addInput('surfaceshader','surfaceshader');
  this.addProperty('surfaceshader', '', 'surfaceshader',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('backsurfaceshader','surfaceshader');
  this.addProperty('backsurfaceshader', '', 'surfaceshader',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('displacementshader','displacementshader');
  this.addProperty('displacementshader', '', 'displacementshader',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','material');
  this.title = 'surfacematerial_material';
  this.desc = "MaterialX:mtlx/material/surfacematerial";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#151';
  this.shape = LiteGraph.BOX_SHAPE;
}
mtlx_material_surfacematerial.nodedef_name = 'ND_surfacematerial';
mtlx_material_surfacematerial.nodedef_node = 'surfacematerial';
mtlx_material_surfacematerial.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/surfacematerial.html';
LiteGraph.registerNodeType('mtlx/material/surfacematerial',mtlx_material_surfacematerial);

/**
  * @function mtlx_material_volumematerial
  * @description Library: mtlx. Category: surfacematerial. Type: material
  *   LiteGraph id: mtlx/material/volumematerial
  */
function mtlx_material_volumematerial() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_volumematerial';
  this.nodedef_type = 'material';
  this.nodedef_node = 'volumematerial';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/volumematerial.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_volumematerial_out_genglsl.png';
  this.nodedef_group = 'material';
  this.addInput('volumeshader','volumeshader');
  this.addProperty('volumeshader', '', 'volumeshader',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','material');
  this.title = 'volumematerial_material';
  this.desc = "MaterialX:mtlx/material/volumematerial";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#151';
  this.shape = LiteGraph.BOX_SHAPE;
}
mtlx_material_volumematerial.nodedef_name = 'ND_volumematerial';
mtlx_material_volumematerial.nodedef_node = 'volumematerial';
mtlx_material_volumematerial.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/volumematerial.html';
LiteGraph.registerNodeType('mtlx/material/volumematerial',mtlx_material_volumematerial);

/**
  * @function mtlx_shader_surface_unlit
  * @description Library: mtlx. Category: volumematerial. Type: surfaceshader
  *   LiteGraph id: mtlx/shader/surface_unlit
  */
function mtlx_shader_surface_unlit() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_surface_unlit';
  this.nodedef_type = 'surfaceshader';
  this.nodedef_node = 'surface_unlit';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/surface_unlit.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_surface_unlit_out_genglsl.png';
  this.nodedef_group = 'shader';
  this.addInput('emission','float');
  this.addProperty('emission', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('emission_color','color3');
  this.addProperty('emission_color', [1,1,1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('transmission','float');
  this.addProperty('transmission', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('transmission_color','color3');
  this.addProperty('transmission_color', [1,1,1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('opacity','float');
  this.addProperty('opacity', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','surfaceshader');
  this.title = 'surface_unlit_surfaceshader';
  this.desc = "MaterialX:mtlx/shader/surface_unlit";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#232';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_shader_surface_unlit.nodedef_name = 'ND_surface_unlit';
mtlx_shader_surface_unlit.nodedef_node = 'surface_unlit';
mtlx_shader_surface_unlit.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/surface_unlit.html';
LiteGraph.registerNodeType('mtlx/shader/surface_unlit',mtlx_shader_surface_unlit);

/**
  * @function mtlx_texture2d_image_float
  * @description Library: mtlx. Category: surface_unlit. Type: float
  *   LiteGraph id: mtlx/texture2d/image_float
  */
function mtlx_texture2d_image_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_image_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'image';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/image.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_image_float_out_genglsl.png';
  this.nodedef_group = 'texture2d';
  this.addInput('file','filename');
  this.addProperty('file', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"Filename","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layer','string');
  this.addProperty('layer', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Layer","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','float');
  this.addProperty('default', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Default Color","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"Texture Coordinates","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('uaddressmode','string');
  this.addProperty('uaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Address Mode U","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('vaddressmode','string');
  this.addProperty('vaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Address Mode V","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Filter Type","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addInput('framerange','string');
  this.addProperty('framerange', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Frame Range","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameoffset','integer');
  this.addProperty('frameoffset', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Frame Offset","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameendaction','string');
  this.addProperty('frameendaction', 'constant', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Frame End Action","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addOutput('out','float');
  this.title = 'image_float';
  this.desc = "MaterialX:mtlx/texture2d/image_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_texture2d_image_float.nodedef_name = 'ND_image_float';
mtlx_texture2d_image_float.nodedef_node = 'image';
mtlx_texture2d_image_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/image.html';
LiteGraph.registerNodeType('mtlx/texture2d/image_float',mtlx_texture2d_image_float);

/**
  * @function mtlx_texture2d_image_color3
  * @description Library: mtlx. Category: image. Type: color3
  *   LiteGraph id: mtlx/texture2d/image_color3
  */
function mtlx_texture2d_image_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_image_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'image';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/image.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_image_color3_out_genglsl.png';
  this.nodedef_group = 'texture2d';
  this.addInput('file','filename');
  this.addProperty('file', '', 'filename',{"colorspace":"none","unit":"","unittype":"","uiname":"Filename","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layer','string');
  this.addProperty('layer', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Layer","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','color3');
  this.addProperty('default', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Default Color","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"Texture Coordinates","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('uaddressmode','string');
  this.addProperty('uaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Address Mode U","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('vaddressmode','string');
  this.addProperty('vaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Address Mode V","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Filter Type","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addInput('framerange','string');
  this.addProperty('framerange', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Frame Range","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameoffset','integer');
  this.addProperty('frameoffset', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Frame Offset","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameendaction','string');
  this.addProperty('frameendaction', 'constant', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Frame End Action","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addOutput('out','color3');
  this.title = 'image_color3';
  this.desc = "MaterialX:mtlx/texture2d/image_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_texture2d_image_color3.nodedef_name = 'ND_image_color3';
mtlx_texture2d_image_color3.nodedef_node = 'image';
mtlx_texture2d_image_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/image.html';
LiteGraph.registerNodeType('mtlx/texture2d/image_color3',mtlx_texture2d_image_color3);

/**
  * @function mtlx_texture2d_image_color4
  * @description Library: mtlx. Category: image. Type: color4
  *   LiteGraph id: mtlx/texture2d/image_color4
  */
function mtlx_texture2d_image_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_image_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'image';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/image.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_image_color4_out_genglsl.png';
  this.nodedef_group = 'texture2d';
  this.addInput('file','filename');
  this.addProperty('file', '', 'filename',{"colorspace":"none","unit":"","unittype":"","uiname":"Filename","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layer','string');
  this.addProperty('layer', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Layer","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','color4');
  this.addProperty('default', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"Default Color","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"Texture Coordinates","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('uaddressmode','string');
  this.addProperty('uaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Address Mode U","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('vaddressmode','string');
  this.addProperty('vaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Address Mode V","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Filter Type","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addInput('framerange','string');
  this.addProperty('framerange', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Frame Range","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameoffset','integer');
  this.addProperty('frameoffset', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Frame Offset","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameendaction','string');
  this.addProperty('frameendaction', 'constant', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Frame End Action","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addOutput('out','color4');
  this.title = 'image_color4';
  this.desc = "MaterialX:mtlx/texture2d/image_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_texture2d_image_color4.nodedef_name = 'ND_image_color4';
mtlx_texture2d_image_color4.nodedef_node = 'image';
mtlx_texture2d_image_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/image.html';
LiteGraph.registerNodeType('mtlx/texture2d/image_color4',mtlx_texture2d_image_color4);

/**
  * @function mtlx_texture2d_image_vector2
  * @description Library: mtlx. Category: image. Type: vector2
  *   LiteGraph id: mtlx/texture2d/image_vector2
  */
function mtlx_texture2d_image_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_image_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'image';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/image.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_image_vector2_out_genglsl.png';
  this.nodedef_group = 'texture2d';
  this.addInput('file','filename');
  this.addProperty('file', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"Filename","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layer','string');
  this.addProperty('layer', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Layer","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','vector2');
  this.addProperty('default', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"Default Color","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"Texture Coordinates","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('uaddressmode','string');
  this.addProperty('uaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Address Mode U","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('vaddressmode','string');
  this.addProperty('vaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Address Mode V","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Filter Type","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addInput('framerange','string');
  this.addProperty('framerange', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Frame Range","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameoffset','integer');
  this.addProperty('frameoffset', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Frame Offset","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameendaction','string');
  this.addProperty('frameendaction', 'constant', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Frame End Action","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addOutput('out','vector2');
  this.title = 'image_vector2';
  this.desc = "MaterialX:mtlx/texture2d/image_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_texture2d_image_vector2.nodedef_name = 'ND_image_vector2';
mtlx_texture2d_image_vector2.nodedef_node = 'image';
mtlx_texture2d_image_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/image.html';
LiteGraph.registerNodeType('mtlx/texture2d/image_vector2',mtlx_texture2d_image_vector2);

/**
  * @function mtlx_texture2d_image_vector3
  * @description Library: mtlx. Category: image. Type: vector3
  *   LiteGraph id: mtlx/texture2d/image_vector3
  */
function mtlx_texture2d_image_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_image_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'image';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/image.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_image_vector3_out_genglsl.png';
  this.nodedef_group = 'texture2d';
  this.addInput('file','filename');
  this.addProperty('file', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"Filename","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layer','string');
  this.addProperty('layer', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Layer","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','vector3');
  this.addProperty('default', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Default Color","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"Texture Coordinates","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('uaddressmode','string');
  this.addProperty('uaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Address Mode U","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('vaddressmode','string');
  this.addProperty('vaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Address Mode V","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Filter Type","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addInput('framerange','string');
  this.addProperty('framerange', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Frame Range","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameoffset','integer');
  this.addProperty('frameoffset', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Frame Offset","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameendaction','string');
  this.addProperty('frameendaction', 'constant', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Frame End Action","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addOutput('out','vector3');
  this.title = 'image_vector3';
  this.desc = "MaterialX:mtlx/texture2d/image_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_texture2d_image_vector3.nodedef_name = 'ND_image_vector3';
mtlx_texture2d_image_vector3.nodedef_node = 'image';
mtlx_texture2d_image_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/image.html';
LiteGraph.registerNodeType('mtlx/texture2d/image_vector3',mtlx_texture2d_image_vector3);

/**
  * @function mtlx_texture2d_image_vector4
  * @description Library: mtlx. Category: image. Type: vector4
  *   LiteGraph id: mtlx/texture2d/image_vector4
  */
function mtlx_texture2d_image_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_image_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'image';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/image.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_image_vector4_out_genglsl.png';
  this.nodedef_group = 'texture2d';
  this.addInput('file','filename');
  this.addProperty('file', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"Filename","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layer','string');
  this.addProperty('layer', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Layer","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','vector4');
  this.addProperty('default', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"Default Color","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"Texture Coordinates","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('uaddressmode','string');
  this.addProperty('uaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Address Mode U","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('vaddressmode','string');
  this.addProperty('vaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Address Mode V","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Filter Type","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addInput('framerange','string');
  this.addProperty('framerange', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Frame Range","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameoffset','integer');
  this.addProperty('frameoffset', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Frame Offset","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameendaction','string');
  this.addProperty('frameendaction', 'constant', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Frame End Action","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addOutput('out','vector4');
  this.title = 'image_vector4';
  this.desc = "MaterialX:mtlx/texture2d/image_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_texture2d_image_vector4.nodedef_name = 'ND_image_vector4';
mtlx_texture2d_image_vector4.nodedef_node = 'image';
mtlx_texture2d_image_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/image.html';
LiteGraph.registerNodeType('mtlx/texture2d/image_vector4',mtlx_texture2d_image_vector4);

/**
  * @function mtlx_texture2d_tiledimage_float
  * @description Library: mtlx. Category: image. Type: float
  *   LiteGraph id: mtlx/texture2d/tiledimage_float
  */
function mtlx_texture2d_tiledimage_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_tiledimage_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'tiledimage';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tiledimage.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_tiledimage_float_out_genglsl.png';
  this.nodedef_group = 'texture2d';
  this.addInput('file','filename');
  this.addProperty('file', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','float');
  this.addProperty('default', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('uvtiling','vector2');
  this.addProperty('uvtiling', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('uvoffset','vector2');
  this.addProperty('uvoffset', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('realworldimagesize','vector2');
  this.addProperty('realworldimagesize', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"distance","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('realworldtilesize','vector2');
  this.addProperty('realworldtilesize', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"distance","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addInput('framerange','string');
  this.addProperty('framerange', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameoffset','integer');
  this.addProperty('frameoffset', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameendaction','string');
  this.addProperty('frameendaction', 'constant', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addOutput('out','float');
  this.title = 'tiledimage_float';
  this.desc = "MaterialX:mtlx/texture2d/tiledimage_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_texture2d_tiledimage_float.nodedef_name = 'ND_tiledimage_float';
mtlx_texture2d_tiledimage_float.nodedef_node = 'tiledimage';
mtlx_texture2d_tiledimage_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tiledimage.html';
LiteGraph.registerNodeType('mtlx/texture2d/tiledimage_float',mtlx_texture2d_tiledimage_float);

/**
  * @function mtlx_texture2d_tiledimage_color3
  * @description Library: mtlx. Category: tiledimage. Type: color3
  *   LiteGraph id: mtlx/texture2d/tiledimage_color3
  */
function mtlx_texture2d_tiledimage_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_tiledimage_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'tiledimage';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tiledimage.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_tiledimage_color3_out_genglsl.png';
  this.nodedef_group = 'texture2d';
  this.addInput('file','filename');
  this.addProperty('file', '', 'filename',{"colorspace":"none","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','color3');
  this.addProperty('default', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('uvtiling','vector2');
  this.addProperty('uvtiling', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('uvoffset','vector2');
  this.addProperty('uvoffset', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('realworldimagesize','vector2');
  this.addProperty('realworldimagesize', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"distance","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('realworldtilesize','vector2');
  this.addProperty('realworldtilesize', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"distance","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addInput('framerange','string');
  this.addProperty('framerange', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameoffset','integer');
  this.addProperty('frameoffset', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameendaction','string');
  this.addProperty('frameendaction', 'constant', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addOutput('out','color3');
  this.title = 'tiledimage_color3';
  this.desc = "MaterialX:mtlx/texture2d/tiledimage_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_texture2d_tiledimage_color3.nodedef_name = 'ND_tiledimage_color3';
mtlx_texture2d_tiledimage_color3.nodedef_node = 'tiledimage';
mtlx_texture2d_tiledimage_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tiledimage.html';
LiteGraph.registerNodeType('mtlx/texture2d/tiledimage_color3',mtlx_texture2d_tiledimage_color3);

/**
  * @function mtlx_texture2d_tiledimage_color4
  * @description Library: mtlx. Category: tiledimage. Type: color4
  *   LiteGraph id: mtlx/texture2d/tiledimage_color4
  */
function mtlx_texture2d_tiledimage_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_tiledimage_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'tiledimage';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tiledimage.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_tiledimage_color4_out_genglsl.png';
  this.nodedef_group = 'texture2d';
  this.addInput('file','filename');
  this.addProperty('file', '', 'filename',{"colorspace":"none","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','color4');
  this.addProperty('default', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('uvtiling','vector2');
  this.addProperty('uvtiling', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('uvoffset','vector2');
  this.addProperty('uvoffset', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('realworldimagesize','vector2');
  this.addProperty('realworldimagesize', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"distance","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('realworldtilesize','vector2');
  this.addProperty('realworldtilesize', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"distance","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addInput('framerange','string');
  this.addProperty('framerange', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameoffset','integer');
  this.addProperty('frameoffset', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameendaction','string');
  this.addProperty('frameendaction', 'constant', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addOutput('out','color4');
  this.title = 'tiledimage_color4';
  this.desc = "MaterialX:mtlx/texture2d/tiledimage_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_texture2d_tiledimage_color4.nodedef_name = 'ND_tiledimage_color4';
mtlx_texture2d_tiledimage_color4.nodedef_node = 'tiledimage';
mtlx_texture2d_tiledimage_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tiledimage.html';
LiteGraph.registerNodeType('mtlx/texture2d/tiledimage_color4',mtlx_texture2d_tiledimage_color4);

/**
  * @function mtlx_texture2d_tiledimage_vector2
  * @description Library: mtlx. Category: tiledimage. Type: vector2
  *   LiteGraph id: mtlx/texture2d/tiledimage_vector2
  */
function mtlx_texture2d_tiledimage_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_tiledimage_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'tiledimage';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tiledimage.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_tiledimage_vector2_out_genglsl.png';
  this.nodedef_group = 'texture2d';
  this.addInput('file','filename');
  this.addProperty('file', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','vector2');
  this.addProperty('default', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('uvtiling','vector2');
  this.addProperty('uvtiling', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('uvoffset','vector2');
  this.addProperty('uvoffset', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('realworldimagesize','vector2');
  this.addProperty('realworldimagesize', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"distance","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('realworldtilesize','vector2');
  this.addProperty('realworldtilesize', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"distance","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addInput('framerange','string');
  this.addProperty('framerange', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameoffset','integer');
  this.addProperty('frameoffset', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameendaction','string');
  this.addProperty('frameendaction', 'constant', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addOutput('out','vector2');
  this.title = 'tiledimage_vector2';
  this.desc = "MaterialX:mtlx/texture2d/tiledimage_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_texture2d_tiledimage_vector2.nodedef_name = 'ND_tiledimage_vector2';
mtlx_texture2d_tiledimage_vector2.nodedef_node = 'tiledimage';
mtlx_texture2d_tiledimage_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tiledimage.html';
LiteGraph.registerNodeType('mtlx/texture2d/tiledimage_vector2',mtlx_texture2d_tiledimage_vector2);

/**
  * @function mtlx_texture2d_tiledimage_vector3
  * @description Library: mtlx. Category: tiledimage. Type: vector3
  *   LiteGraph id: mtlx/texture2d/tiledimage_vector3
  */
function mtlx_texture2d_tiledimage_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_tiledimage_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'tiledimage';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tiledimage.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_tiledimage_vector3_out_genglsl.png';
  this.nodedef_group = 'texture2d';
  this.addInput('file','filename');
  this.addProperty('file', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','vector3');
  this.addProperty('default', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('uvtiling','vector2');
  this.addProperty('uvtiling', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('uvoffset','vector2');
  this.addProperty('uvoffset', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('realworldimagesize','vector2');
  this.addProperty('realworldimagesize', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"distance","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('realworldtilesize','vector2');
  this.addProperty('realworldtilesize', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"distance","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addInput('framerange','string');
  this.addProperty('framerange', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameoffset','integer');
  this.addProperty('frameoffset', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameendaction','string');
  this.addProperty('frameendaction', 'constant', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addOutput('out','vector3');
  this.title = 'tiledimage_vector3';
  this.desc = "MaterialX:mtlx/texture2d/tiledimage_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_texture2d_tiledimage_vector3.nodedef_name = 'ND_tiledimage_vector3';
mtlx_texture2d_tiledimage_vector3.nodedef_node = 'tiledimage';
mtlx_texture2d_tiledimage_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tiledimage.html';
LiteGraph.registerNodeType('mtlx/texture2d/tiledimage_vector3',mtlx_texture2d_tiledimage_vector3);

/**
  * @function mtlx_texture2d_tiledimage_vector4
  * @description Library: mtlx. Category: tiledimage. Type: vector4
  *   LiteGraph id: mtlx/texture2d/tiledimage_vector4
  */
function mtlx_texture2d_tiledimage_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_tiledimage_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'tiledimage';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tiledimage.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_tiledimage_vector4_out_genglsl.png';
  this.nodedef_group = 'texture2d';
  this.addInput('file','filename');
  this.addProperty('file', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','vector4');
  this.addProperty('default', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('uvtiling','vector2');
  this.addProperty('uvtiling', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('uvoffset','vector2');
  this.addProperty('uvoffset', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('realworldimagesize','vector2');
  this.addProperty('realworldimagesize', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"distance","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('realworldtilesize','vector2');
  this.addProperty('realworldtilesize', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"distance","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addInput('framerange','string');
  this.addProperty('framerange', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameoffset','integer');
  this.addProperty('frameoffset', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameendaction','string');
  this.addProperty('frameendaction', 'constant', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addOutput('out','vector4');
  this.title = 'tiledimage_vector4';
  this.desc = "MaterialX:mtlx/texture2d/tiledimage_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_texture2d_tiledimage_vector4.nodedef_name = 'ND_tiledimage_vector4';
mtlx_texture2d_tiledimage_vector4.nodedef_node = 'tiledimage';
mtlx_texture2d_tiledimage_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tiledimage.html';
LiteGraph.registerNodeType('mtlx/texture2d/tiledimage_vector4',mtlx_texture2d_tiledimage_vector4);

/**
  * @function mtlx_texture3d_triplanarprojection_float
  * @description Library: mtlx. Category: tiledimage. Type: float
  *   LiteGraph id: mtlx/texture3d/triplanarprojection_float
  */
function mtlx_texture3d_triplanarprojection_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_triplanarprojection_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'triplanarprojection';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/triplanarprojection.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_triplanarprojection_float_out_genglsl.png';
  this.nodedef_group = 'texture3d';
  this.addInput('filex','filename');
  this.addProperty('filex', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filey','filename');
  this.addProperty('filey', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filez','filename');
  this.addProperty('filez', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layerx','string');
  this.addProperty('layerx', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layery','string');
  this.addProperty('layery', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layerz','string');
  this.addProperty('layerz', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','float');
  this.addProperty('default', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nobject"});
  this.addInput('upaxis','integer');
  this.addProperty('upaxis', 2, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["X","Y","Z"],"enumvalues":["0","1","2"]});
  this.addInput('blend','float');
  this.addProperty('blend', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addInput('framerange','string');
  this.addProperty('framerange', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameoffset','integer');
  this.addProperty('frameoffset', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameendaction','string');
  this.addProperty('frameendaction', 'constant', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addOutput('out','float');
  this.title = 'triplanarprojection_float';
  this.desc = "MaterialX:mtlx/texture3d/triplanarprojection_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_texture3d_triplanarprojection_float.nodedef_name = 'ND_triplanarprojection_float';
mtlx_texture3d_triplanarprojection_float.nodedef_node = 'triplanarprojection';
mtlx_texture3d_triplanarprojection_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/triplanarprojection.html';
LiteGraph.registerNodeType('mtlx/texture3d/triplanarprojection_float',mtlx_texture3d_triplanarprojection_float);

/**
  * @function mtlx_texture3d_triplanarprojection_color3
  * @description Library: mtlx. Category: triplanarprojection. Type: color3
  *   LiteGraph id: mtlx/texture3d/triplanarprojection_color3
  */
function mtlx_texture3d_triplanarprojection_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_triplanarprojection_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'triplanarprojection';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/triplanarprojection.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_triplanarprojection_color3_out_genglsl.png';
  this.nodedef_group = 'texture3d';
  this.addInput('filex','filename');
  this.addProperty('filex', '', 'filename',{"colorspace":"none","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filey','filename');
  this.addProperty('filey', '', 'filename',{"colorspace":"none","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filez','filename');
  this.addProperty('filez', '', 'filename',{"colorspace":"none","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layerx','string');
  this.addProperty('layerx', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layery','string');
  this.addProperty('layery', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layerz','string');
  this.addProperty('layerz', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','color3');
  this.addProperty('default', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nobject"});
  this.addInput('upaxis','integer');
  this.addProperty('upaxis', 2, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["X","Y","Z"],"enumvalues":["0","1","2"]});
  this.addInput('blend','float');
  this.addProperty('blend', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addInput('framerange','string');
  this.addProperty('framerange', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameoffset','integer');
  this.addProperty('frameoffset', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameendaction','string');
  this.addProperty('frameendaction', 'constant', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addOutput('out','color3');
  this.title = 'triplanarprojection_color3';
  this.desc = "MaterialX:mtlx/texture3d/triplanarprojection_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_texture3d_triplanarprojection_color3.nodedef_name = 'ND_triplanarprojection_color3';
mtlx_texture3d_triplanarprojection_color3.nodedef_node = 'triplanarprojection';
mtlx_texture3d_triplanarprojection_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/triplanarprojection.html';
LiteGraph.registerNodeType('mtlx/texture3d/triplanarprojection_color3',mtlx_texture3d_triplanarprojection_color3);

/**
  * @function mtlx_texture3d_triplanarprojection_color4
  * @description Library: mtlx. Category: triplanarprojection. Type: color4
  *   LiteGraph id: mtlx/texture3d/triplanarprojection_color4
  */
function mtlx_texture3d_triplanarprojection_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_triplanarprojection_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'triplanarprojection';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/triplanarprojection.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_triplanarprojection_color4_out_genglsl.png';
  this.nodedef_group = 'texture3d';
  this.addInput('filex','filename');
  this.addProperty('filex', '', 'filename',{"colorspace":"none","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filey','filename');
  this.addProperty('filey', '', 'filename',{"colorspace":"none","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filez','filename');
  this.addProperty('filez', '', 'filename',{"colorspace":"none","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layerx','string');
  this.addProperty('layerx', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layery','string');
  this.addProperty('layery', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layerz','string');
  this.addProperty('layerz', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','color4');
  this.addProperty('default', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nobject"});
  this.addInput('upaxis','integer');
  this.addProperty('upaxis', 2, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["X","Y","Z"],"enumvalues":["0","1","2"]});
  this.addInput('blend','float');
  this.addProperty('blend', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addInput('framerange','string');
  this.addProperty('framerange', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameoffset','integer');
  this.addProperty('frameoffset', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameendaction','string');
  this.addProperty('frameendaction', 'constant', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addOutput('out','color4');
  this.title = 'triplanarprojection_color4';
  this.desc = "MaterialX:mtlx/texture3d/triplanarprojection_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_texture3d_triplanarprojection_color4.nodedef_name = 'ND_triplanarprojection_color4';
mtlx_texture3d_triplanarprojection_color4.nodedef_node = 'triplanarprojection';
mtlx_texture3d_triplanarprojection_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/triplanarprojection.html';
LiteGraph.registerNodeType('mtlx/texture3d/triplanarprojection_color4',mtlx_texture3d_triplanarprojection_color4);

/**
  * @function mtlx_texture3d_triplanarprojection_vector2
  * @description Library: mtlx. Category: triplanarprojection. Type: vector2
  *   LiteGraph id: mtlx/texture3d/triplanarprojection_vector2
  */
function mtlx_texture3d_triplanarprojection_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_triplanarprojection_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'triplanarprojection';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/triplanarprojection.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_triplanarprojection_vector2_out_genglsl.png';
  this.nodedef_group = 'texture3d';
  this.addInput('filex','filename');
  this.addProperty('filex', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filey','filename');
  this.addProperty('filey', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filez','filename');
  this.addProperty('filez', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layerx','string');
  this.addProperty('layerx', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layery','string');
  this.addProperty('layery', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layerz','string');
  this.addProperty('layerz', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','vector2');
  this.addProperty('default', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nobject"});
  this.addInput('upaxis','integer');
  this.addProperty('upaxis', 2, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["X","Y","Z"],"enumvalues":["0","1","2"]});
  this.addInput('blend','float');
  this.addProperty('blend', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addInput('framerange','string');
  this.addProperty('framerange', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameoffset','integer');
  this.addProperty('frameoffset', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameendaction','string');
  this.addProperty('frameendaction', 'constant', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addOutput('out','vector2');
  this.title = 'triplanarprojection_vector2';
  this.desc = "MaterialX:mtlx/texture3d/triplanarprojection_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_texture3d_triplanarprojection_vector2.nodedef_name = 'ND_triplanarprojection_vector2';
mtlx_texture3d_triplanarprojection_vector2.nodedef_node = 'triplanarprojection';
mtlx_texture3d_triplanarprojection_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/triplanarprojection.html';
LiteGraph.registerNodeType('mtlx/texture3d/triplanarprojection_vector2',mtlx_texture3d_triplanarprojection_vector2);

/**
  * @function mtlx_texture3d_triplanarprojection_vector3
  * @description Library: mtlx. Category: triplanarprojection. Type: vector3
  *   LiteGraph id: mtlx/texture3d/triplanarprojection_vector3
  */
function mtlx_texture3d_triplanarprojection_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_triplanarprojection_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'triplanarprojection';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/triplanarprojection.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_triplanarprojection_vector3_out_genglsl.png';
  this.nodedef_group = 'texture3d';
  this.addInput('filex','filename');
  this.addProperty('filex', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filey','filename');
  this.addProperty('filey', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filez','filename');
  this.addProperty('filez', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layerx','string');
  this.addProperty('layerx', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layery','string');
  this.addProperty('layery', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layerz','string');
  this.addProperty('layerz', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','vector3');
  this.addProperty('default', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nobject"});
  this.addInput('upaxis','integer');
  this.addProperty('upaxis', 2, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["X","Y","Z"],"enumvalues":["0","1","2"]});
  this.addInput('blend','float');
  this.addProperty('blend', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addInput('framerange','string');
  this.addProperty('framerange', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameoffset','integer');
  this.addProperty('frameoffset', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameendaction','string');
  this.addProperty('frameendaction', 'constant', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addOutput('out','vector3');
  this.title = 'triplanarprojection_vector3';
  this.desc = "MaterialX:mtlx/texture3d/triplanarprojection_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_texture3d_triplanarprojection_vector3.nodedef_name = 'ND_triplanarprojection_vector3';
mtlx_texture3d_triplanarprojection_vector3.nodedef_node = 'triplanarprojection';
mtlx_texture3d_triplanarprojection_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/triplanarprojection.html';
LiteGraph.registerNodeType('mtlx/texture3d/triplanarprojection_vector3',mtlx_texture3d_triplanarprojection_vector3);

/**
  * @function mtlx_texture3d_triplanarprojection_vector4
  * @description Library: mtlx. Category: triplanarprojection. Type: vector4
  *   LiteGraph id: mtlx/texture3d/triplanarprojection_vector4
  */
function mtlx_texture3d_triplanarprojection_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_triplanarprojection_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'triplanarprojection';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/triplanarprojection.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_triplanarprojection_vector4_out_genglsl.png';
  this.nodedef_group = 'texture3d';
  this.addInput('filex','filename');
  this.addProperty('filex', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filey','filename');
  this.addProperty('filey', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filez','filename');
  this.addProperty('filez', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layerx','string');
  this.addProperty('layerx', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layery','string');
  this.addProperty('layery', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('layerz','string');
  this.addProperty('layerz', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','vector4');
  this.addProperty('default', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nobject"});
  this.addInput('upaxis','integer');
  this.addProperty('upaxis', 2, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["X","Y","Z"],"enumvalues":["0","1","2"]});
  this.addInput('blend','float');
  this.addProperty('blend', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addInput('framerange','string');
  this.addProperty('framerange', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameoffset','integer');
  this.addProperty('frameoffset', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('frameendaction','string');
  this.addProperty('frameendaction', 'constant', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addOutput('out','vector4');
  this.title = 'triplanarprojection_vector4';
  this.desc = "MaterialX:mtlx/texture3d/triplanarprojection_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_texture3d_triplanarprojection_vector4.nodedef_name = 'ND_triplanarprojection_vector4';
mtlx_texture3d_triplanarprojection_vector4.nodedef_node = 'triplanarprojection';
mtlx_texture3d_triplanarprojection_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/triplanarprojection.html';
LiteGraph.registerNodeType('mtlx/texture3d/triplanarprojection_vector4',mtlx_texture3d_triplanarprojection_vector4);

/**
  * @function mtlx_procedural_constant_float
  * @description Library: mtlx. Category: triplanarprojection. Type: float
  *   LiteGraph id: mtlx/procedural/constant_float
  */
function mtlx_procedural_constant_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_constant_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'constant';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_constant_float_out_genglsl.png';
  this.nodedef_group = 'procedural';
  this.addInput('value','float');
  this.addProperty('value', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'constant_float';
  this.desc = "MaterialX:mtlx/procedural/constant_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_procedural_constant_float.nodedef_name = 'ND_constant_float';
mtlx_procedural_constant_float.nodedef_node = 'constant';
mtlx_procedural_constant_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
LiteGraph.registerNodeType('mtlx/procedural/constant_float',mtlx_procedural_constant_float);

/**
  * @function mtlx_procedural_constant_color3
  * @description Library: mtlx. Category: constant. Type: color3
  *   LiteGraph id: mtlx/procedural/constant_color3
  */
function mtlx_procedural_constant_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_constant_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'constant';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_constant_color3_out_genglsl.png';
  this.nodedef_group = 'procedural';
  this.addInput('value','color3');
  this.addProperty('value', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'constant_color3';
  this.desc = "MaterialX:mtlx/procedural/constant_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_procedural_constant_color3.nodedef_name = 'ND_constant_color3';
mtlx_procedural_constant_color3.nodedef_node = 'constant';
mtlx_procedural_constant_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
LiteGraph.registerNodeType('mtlx/procedural/constant_color3',mtlx_procedural_constant_color3);

/**
  * @function mtlx_procedural_constant_color4
  * @description Library: mtlx. Category: constant. Type: color4
  *   LiteGraph id: mtlx/procedural/constant_color4
  */
function mtlx_procedural_constant_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_constant_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'constant';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_constant_color4_out_genglsl.png';
  this.nodedef_group = 'procedural';
  this.addInput('value','color4');
  this.addProperty('value', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'constant_color4';
  this.desc = "MaterialX:mtlx/procedural/constant_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_procedural_constant_color4.nodedef_name = 'ND_constant_color4';
mtlx_procedural_constant_color4.nodedef_node = 'constant';
mtlx_procedural_constant_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
LiteGraph.registerNodeType('mtlx/procedural/constant_color4',mtlx_procedural_constant_color4);

/**
  * @function mtlx_procedural_constant_vector2
  * @description Library: mtlx. Category: constant. Type: vector2
  *   LiteGraph id: mtlx/procedural/constant_vector2
  */
function mtlx_procedural_constant_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_constant_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'constant';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_constant_vector2_out_genglsl.png';
  this.nodedef_group = 'procedural';
  this.addInput('value','vector2');
  this.addProperty('value', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'constant_vector2';
  this.desc = "MaterialX:mtlx/procedural/constant_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_procedural_constant_vector2.nodedef_name = 'ND_constant_vector2';
mtlx_procedural_constant_vector2.nodedef_node = 'constant';
mtlx_procedural_constant_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
LiteGraph.registerNodeType('mtlx/procedural/constant_vector2',mtlx_procedural_constant_vector2);

/**
  * @function mtlx_procedural_constant_vector3
  * @description Library: mtlx. Category: constant. Type: vector3
  *   LiteGraph id: mtlx/procedural/constant_vector3
  */
function mtlx_procedural_constant_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_constant_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'constant';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_constant_vector3_out_genglsl.png';
  this.nodedef_group = 'procedural';
  this.addInput('value','vector3');
  this.addProperty('value', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'constant_vector3';
  this.desc = "MaterialX:mtlx/procedural/constant_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_procedural_constant_vector3.nodedef_name = 'ND_constant_vector3';
mtlx_procedural_constant_vector3.nodedef_node = 'constant';
mtlx_procedural_constant_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
LiteGraph.registerNodeType('mtlx/procedural/constant_vector3',mtlx_procedural_constant_vector3);

/**
  * @function mtlx_procedural_constant_vector4
  * @description Library: mtlx. Category: constant. Type: vector4
  *   LiteGraph id: mtlx/procedural/constant_vector4
  */
function mtlx_procedural_constant_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_constant_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'constant';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_constant_vector4_out_genglsl.png';
  this.nodedef_group = 'procedural';
  this.addInput('value','vector4');
  this.addProperty('value', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'constant_vector4';
  this.desc = "MaterialX:mtlx/procedural/constant_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_procedural_constant_vector4.nodedef_name = 'ND_constant_vector4';
mtlx_procedural_constant_vector4.nodedef_node = 'constant';
mtlx_procedural_constant_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
LiteGraph.registerNodeType('mtlx/procedural/constant_vector4',mtlx_procedural_constant_vector4);

/**
  * @function mtlx_procedural_constant_boolean
  * @description Library: mtlx. Category: constant. Type: boolean
  *   LiteGraph id: mtlx/procedural/constant_boolean
  */
function mtlx_procedural_constant_boolean() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_constant_boolean';
  this.nodedef_type = 'boolean';
  this.nodedef_node = 'constant';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_constant_boolean_out_genglsl.png';
  this.nodedef_group = 'procedural';
  this.addInput('value','boolean');
  this.addProperty('value', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','boolean');
  this.title = 'constant_boolean';
  this.desc = "MaterialX:mtlx/procedural/constant_boolean";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#060';
}
mtlx_procedural_constant_boolean.nodedef_name = 'ND_constant_boolean';
mtlx_procedural_constant_boolean.nodedef_node = 'constant';
mtlx_procedural_constant_boolean.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
LiteGraph.registerNodeType('mtlx/procedural/constant_boolean',mtlx_procedural_constant_boolean);

/**
  * @function mtlx_procedural_constant_integer
  * @description Library: mtlx. Category: constant. Type: integer
  *   LiteGraph id: mtlx/procedural/constant_integer
  */
function mtlx_procedural_constant_integer() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_constant_integer';
  this.nodedef_type = 'integer';
  this.nodedef_node = 'constant';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_constant_integer_out_genglsl.png';
  this.nodedef_group = 'procedural';
  this.addInput('value','integer');
  this.addProperty('value', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','integer');
  this.title = 'constant_integer';
  this.desc = "MaterialX:mtlx/procedural/constant_integer";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#A32';
}
mtlx_procedural_constant_integer.nodedef_name = 'ND_constant_integer';
mtlx_procedural_constant_integer.nodedef_node = 'constant';
mtlx_procedural_constant_integer.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
LiteGraph.registerNodeType('mtlx/procedural/constant_integer',mtlx_procedural_constant_integer);

/**
  * @function mtlx_procedural_constant_matrix33
  * @description Library: mtlx. Category: constant. Type: matrix33
  *   LiteGraph id: mtlx/procedural/constant_matrix33
  */
function mtlx_procedural_constant_matrix33() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_constant_matrix33';
  this.nodedef_type = 'matrix33';
  this.nodedef_node = 'constant';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_constant_matrix33_out_genglsl.png';
  this.nodedef_group = 'procedural';
  this.addInput('value','matrix33');
  this.addProperty('value', [1.0,0.0,0.0, 0.0,1.0,0.0, 0.0,0.0,1.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix33');
  this.title = 'constant_matrix33';
  this.desc = "MaterialX:mtlx/procedural/constant_matrix33";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#333';
}
mtlx_procedural_constant_matrix33.nodedef_name = 'ND_constant_matrix33';
mtlx_procedural_constant_matrix33.nodedef_node = 'constant';
mtlx_procedural_constant_matrix33.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
LiteGraph.registerNodeType('mtlx/procedural/constant_matrix33',mtlx_procedural_constant_matrix33);

/**
  * @function mtlx_procedural_constant_matrix44
  * @description Library: mtlx. Category: constant. Type: matrix44
  *   LiteGraph id: mtlx/procedural/constant_matrix44
  */
function mtlx_procedural_constant_matrix44() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_constant_matrix44';
  this.nodedef_type = 'matrix44';
  this.nodedef_node = 'constant';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_constant_matrix44_out_genglsl.png';
  this.nodedef_group = 'procedural';
  this.addInput('value','matrix44');
  this.addProperty('value', [1.0,0.0,0.0,0.0, 0.0,1.0,0.0,0.0, 0.0,0.0,1.0,0.0, 0.0,0.0,0.0,1.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix44');
  this.title = 'constant_matrix44';
  this.desc = "MaterialX:mtlx/procedural/constant_matrix44";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#444';
}
mtlx_procedural_constant_matrix44.nodedef_name = 'ND_constant_matrix44';
mtlx_procedural_constant_matrix44.nodedef_node = 'constant';
mtlx_procedural_constant_matrix44.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
LiteGraph.registerNodeType('mtlx/procedural/constant_matrix44',mtlx_procedural_constant_matrix44);

/**
  * @function mtlx_procedural_constant_string
  * @description Library: mtlx. Category: constant. Type: string
  *   LiteGraph id: mtlx/procedural/constant_string
  */
function mtlx_procedural_constant_string() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_constant_string';
  this.nodedef_type = 'string';
  this.nodedef_node = 'constant';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_constant_string_out_genglsl.png';
  this.nodedef_group = 'procedural';
  this.addInput('value','string');
  this.addProperty('value', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','string');
  this.title = 'constant_string';
  this.desc = "MaterialX:mtlx/procedural/constant_string";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#395';
}
mtlx_procedural_constant_string.nodedef_name = 'ND_constant_string';
mtlx_procedural_constant_string.nodedef_node = 'constant';
mtlx_procedural_constant_string.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
LiteGraph.registerNodeType('mtlx/procedural/constant_string',mtlx_procedural_constant_string);

/**
  * @function mtlx_procedural_constant_filename
  * @description Library: mtlx. Category: constant. Type: filename
  *   LiteGraph id: mtlx/procedural/constant_filename
  */
function mtlx_procedural_constant_filename() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_constant_filename';
  this.nodedef_type = 'filename';
  this.nodedef_node = 'constant';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_constant_filename_out_genglsl.png';
  this.nodedef_group = 'procedural';
  this.addInput('value','filename');
  this.addProperty('value', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','filename');
  this.title = 'constant_filename';
  this.desc = "MaterialX:mtlx/procedural/constant_filename";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#888';
}
mtlx_procedural_constant_filename.nodedef_name = 'ND_constant_filename';
mtlx_procedural_constant_filename.nodedef_node = 'constant';
mtlx_procedural_constant_filename.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/constant.html';
LiteGraph.registerNodeType('mtlx/procedural/constant_filename',mtlx_procedural_constant_filename);

/**
  * @function mtlx_procedural2d_ramplr_float
  * @description Library: mtlx. Category: constant. Type: float
  *   LiteGraph id: mtlx/procedural2d/ramplr_float
  */
function mtlx_procedural2d_ramplr_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ramplr_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'ramplr';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramplr.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ramplr_float_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuel','float');
  this.addProperty('valuel', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuer','float');
  this.addProperty('valuer', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','float');
  this.title = 'ramplr_float';
  this.desc = "MaterialX:mtlx/procedural2d/ramplr_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_procedural2d_ramplr_float.nodedef_name = 'ND_ramplr_float';
mtlx_procedural2d_ramplr_float.nodedef_node = 'ramplr';
mtlx_procedural2d_ramplr_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramplr.html';
LiteGraph.registerNodeType('mtlx/procedural2d/ramplr_float',mtlx_procedural2d_ramplr_float);

/**
  * @function mtlx_procedural2d_ramplr_color3
  * @description Library: mtlx. Category: ramplr. Type: color3
  *   LiteGraph id: mtlx/procedural2d/ramplr_color3
  */
function mtlx_procedural2d_ramplr_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ramplr_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'ramplr';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramplr.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ramplr_color3_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuel','color3');
  this.addProperty('valuel', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuer','color3');
  this.addProperty('valuer', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','color3');
  this.title = 'ramplr_color3';
  this.desc = "MaterialX:mtlx/procedural2d/ramplr_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_procedural2d_ramplr_color3.nodedef_name = 'ND_ramplr_color3';
mtlx_procedural2d_ramplr_color3.nodedef_node = 'ramplr';
mtlx_procedural2d_ramplr_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramplr.html';
LiteGraph.registerNodeType('mtlx/procedural2d/ramplr_color3',mtlx_procedural2d_ramplr_color3);

/**
  * @function mtlx_procedural2d_ramplr_color4
  * @description Library: mtlx. Category: ramplr. Type: color4
  *   LiteGraph id: mtlx/procedural2d/ramplr_color4
  */
function mtlx_procedural2d_ramplr_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ramplr_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'ramplr';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramplr.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ramplr_color4_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuel','color4');
  this.addProperty('valuel', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuer','color4');
  this.addProperty('valuer', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','color4');
  this.title = 'ramplr_color4';
  this.desc = "MaterialX:mtlx/procedural2d/ramplr_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_procedural2d_ramplr_color4.nodedef_name = 'ND_ramplr_color4';
mtlx_procedural2d_ramplr_color4.nodedef_node = 'ramplr';
mtlx_procedural2d_ramplr_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramplr.html';
LiteGraph.registerNodeType('mtlx/procedural2d/ramplr_color4',mtlx_procedural2d_ramplr_color4);

/**
  * @function mtlx_procedural2d_ramplr_vector2
  * @description Library: mtlx. Category: ramplr. Type: vector2
  *   LiteGraph id: mtlx/procedural2d/ramplr_vector2
  */
function mtlx_procedural2d_ramplr_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ramplr_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'ramplr';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramplr.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ramplr_vector2_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuel','vector2');
  this.addProperty('valuel', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuer','vector2');
  this.addProperty('valuer', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','vector2');
  this.title = 'ramplr_vector2';
  this.desc = "MaterialX:mtlx/procedural2d/ramplr_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_procedural2d_ramplr_vector2.nodedef_name = 'ND_ramplr_vector2';
mtlx_procedural2d_ramplr_vector2.nodedef_node = 'ramplr';
mtlx_procedural2d_ramplr_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramplr.html';
LiteGraph.registerNodeType('mtlx/procedural2d/ramplr_vector2',mtlx_procedural2d_ramplr_vector2);

/**
  * @function mtlx_procedural2d_ramplr_vector3
  * @description Library: mtlx. Category: ramplr. Type: vector3
  *   LiteGraph id: mtlx/procedural2d/ramplr_vector3
  */
function mtlx_procedural2d_ramplr_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ramplr_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'ramplr';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramplr.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ramplr_vector3_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuel','vector3');
  this.addProperty('valuel', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuer','vector3');
  this.addProperty('valuer', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','vector3');
  this.title = 'ramplr_vector3';
  this.desc = "MaterialX:mtlx/procedural2d/ramplr_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_procedural2d_ramplr_vector3.nodedef_name = 'ND_ramplr_vector3';
mtlx_procedural2d_ramplr_vector3.nodedef_node = 'ramplr';
mtlx_procedural2d_ramplr_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramplr.html';
LiteGraph.registerNodeType('mtlx/procedural2d/ramplr_vector3',mtlx_procedural2d_ramplr_vector3);

/**
  * @function mtlx_procedural2d_ramplr_vector4
  * @description Library: mtlx. Category: ramplr. Type: vector4
  *   LiteGraph id: mtlx/procedural2d/ramplr_vector4
  */
function mtlx_procedural2d_ramplr_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ramplr_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'ramplr';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramplr.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ramplr_vector4_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuel','vector4');
  this.addProperty('valuel', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuer','vector4');
  this.addProperty('valuer', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','vector4');
  this.title = 'ramplr_vector4';
  this.desc = "MaterialX:mtlx/procedural2d/ramplr_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_procedural2d_ramplr_vector4.nodedef_name = 'ND_ramplr_vector4';
mtlx_procedural2d_ramplr_vector4.nodedef_node = 'ramplr';
mtlx_procedural2d_ramplr_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramplr.html';
LiteGraph.registerNodeType('mtlx/procedural2d/ramplr_vector4',mtlx_procedural2d_ramplr_vector4);

/**
  * @function mtlx_procedural2d_ramptb_float
  * @description Library: mtlx. Category: ramplr. Type: float
  *   LiteGraph id: mtlx/procedural2d/ramptb_float
  */
function mtlx_procedural2d_ramptb_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ramptb_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'ramptb';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramptb.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ramptb_float_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuet','float');
  this.addProperty('valuet', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valueb','float');
  this.addProperty('valueb', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','float');
  this.title = 'ramptb_float';
  this.desc = "MaterialX:mtlx/procedural2d/ramptb_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_procedural2d_ramptb_float.nodedef_name = 'ND_ramptb_float';
mtlx_procedural2d_ramptb_float.nodedef_node = 'ramptb';
mtlx_procedural2d_ramptb_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramptb.html';
LiteGraph.registerNodeType('mtlx/procedural2d/ramptb_float',mtlx_procedural2d_ramptb_float);

/**
  * @function mtlx_procedural2d_ramptb_color3
  * @description Library: mtlx. Category: ramptb. Type: color3
  *   LiteGraph id: mtlx/procedural2d/ramptb_color3
  */
function mtlx_procedural2d_ramptb_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ramptb_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'ramptb';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramptb.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ramptb_color3_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuet','color3');
  this.addProperty('valuet', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valueb','color3');
  this.addProperty('valueb', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','color3');
  this.title = 'ramptb_color3';
  this.desc = "MaterialX:mtlx/procedural2d/ramptb_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_procedural2d_ramptb_color3.nodedef_name = 'ND_ramptb_color3';
mtlx_procedural2d_ramptb_color3.nodedef_node = 'ramptb';
mtlx_procedural2d_ramptb_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramptb.html';
LiteGraph.registerNodeType('mtlx/procedural2d/ramptb_color3',mtlx_procedural2d_ramptb_color3);

/**
  * @function mtlx_procedural2d_ramptb_color4
  * @description Library: mtlx. Category: ramptb. Type: color4
  *   LiteGraph id: mtlx/procedural2d/ramptb_color4
  */
function mtlx_procedural2d_ramptb_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ramptb_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'ramptb';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramptb.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ramptb_color4_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuet','color4');
  this.addProperty('valuet', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valueb','color4');
  this.addProperty('valueb', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','color4');
  this.title = 'ramptb_color4';
  this.desc = "MaterialX:mtlx/procedural2d/ramptb_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_procedural2d_ramptb_color4.nodedef_name = 'ND_ramptb_color4';
mtlx_procedural2d_ramptb_color4.nodedef_node = 'ramptb';
mtlx_procedural2d_ramptb_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramptb.html';
LiteGraph.registerNodeType('mtlx/procedural2d/ramptb_color4',mtlx_procedural2d_ramptb_color4);

/**
  * @function mtlx_procedural2d_ramptb_vector2
  * @description Library: mtlx. Category: ramptb. Type: vector2
  *   LiteGraph id: mtlx/procedural2d/ramptb_vector2
  */
function mtlx_procedural2d_ramptb_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ramptb_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'ramptb';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramptb.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ramptb_vector2_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuet','vector2');
  this.addProperty('valuet', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valueb','vector2');
  this.addProperty('valueb', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','vector2');
  this.title = 'ramptb_vector2';
  this.desc = "MaterialX:mtlx/procedural2d/ramptb_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_procedural2d_ramptb_vector2.nodedef_name = 'ND_ramptb_vector2';
mtlx_procedural2d_ramptb_vector2.nodedef_node = 'ramptb';
mtlx_procedural2d_ramptb_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramptb.html';
LiteGraph.registerNodeType('mtlx/procedural2d/ramptb_vector2',mtlx_procedural2d_ramptb_vector2);

/**
  * @function mtlx_procedural2d_ramptb_vector3
  * @description Library: mtlx. Category: ramptb. Type: vector3
  *   LiteGraph id: mtlx/procedural2d/ramptb_vector3
  */
function mtlx_procedural2d_ramptb_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ramptb_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'ramptb';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramptb.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ramptb_vector3_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuet','vector3');
  this.addProperty('valuet', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valueb','vector3');
  this.addProperty('valueb', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','vector3');
  this.title = 'ramptb_vector3';
  this.desc = "MaterialX:mtlx/procedural2d/ramptb_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_procedural2d_ramptb_vector3.nodedef_name = 'ND_ramptb_vector3';
mtlx_procedural2d_ramptb_vector3.nodedef_node = 'ramptb';
mtlx_procedural2d_ramptb_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramptb.html';
LiteGraph.registerNodeType('mtlx/procedural2d/ramptb_vector3',mtlx_procedural2d_ramptb_vector3);

/**
  * @function mtlx_procedural2d_ramptb_vector4
  * @description Library: mtlx. Category: ramptb. Type: vector4
  *   LiteGraph id: mtlx/procedural2d/ramptb_vector4
  */
function mtlx_procedural2d_ramptb_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ramptb_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'ramptb';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramptb.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ramptb_vector4_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuet','vector4');
  this.addProperty('valuet', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valueb','vector4');
  this.addProperty('valueb', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','vector4');
  this.title = 'ramptb_vector4';
  this.desc = "MaterialX:mtlx/procedural2d/ramptb_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_procedural2d_ramptb_vector4.nodedef_name = 'ND_ramptb_vector4';
mtlx_procedural2d_ramptb_vector4.nodedef_node = 'ramptb';
mtlx_procedural2d_ramptb_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramptb.html';
LiteGraph.registerNodeType('mtlx/procedural2d/ramptb_vector4',mtlx_procedural2d_ramptb_vector4);

/**
  * @function mtlx_procedural2d_ramp4_float
  * @description Library: mtlx. Category: ramptb. Type: float
  *   LiteGraph id: mtlx/procedural2d/ramp4_float
  */
function mtlx_procedural2d_ramp4_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ramp4_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'ramp4';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramp4.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ramp4_float_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuetl','float');
  this.addProperty('valuetl', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuetr','float');
  this.addProperty('valuetr', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuebl','float');
  this.addProperty('valuebl', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuebr','float');
  this.addProperty('valuebr', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','float');
  this.title = 'ramp4_float';
  this.desc = "MaterialX:mtlx/procedural2d/ramp4_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_procedural2d_ramp4_float.nodedef_name = 'ND_ramp4_float';
mtlx_procedural2d_ramp4_float.nodedef_node = 'ramp4';
mtlx_procedural2d_ramp4_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramp4.html';
LiteGraph.registerNodeType('mtlx/procedural2d/ramp4_float',mtlx_procedural2d_ramp4_float);

/**
  * @function mtlx_procedural2d_ramp4_color3
  * @description Library: mtlx. Category: ramp4. Type: color3
  *   LiteGraph id: mtlx/procedural2d/ramp4_color3
  */
function mtlx_procedural2d_ramp4_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ramp4_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'ramp4';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramp4.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ramp4_color3_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuetl','color3');
  this.addProperty('valuetl', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuetr','color3');
  this.addProperty('valuetr', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuebl','color3');
  this.addProperty('valuebl', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuebr','color3');
  this.addProperty('valuebr', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','color3');
  this.title = 'ramp4_color3';
  this.desc = "MaterialX:mtlx/procedural2d/ramp4_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_procedural2d_ramp4_color3.nodedef_name = 'ND_ramp4_color3';
mtlx_procedural2d_ramp4_color3.nodedef_node = 'ramp4';
mtlx_procedural2d_ramp4_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramp4.html';
LiteGraph.registerNodeType('mtlx/procedural2d/ramp4_color3',mtlx_procedural2d_ramp4_color3);

/**
  * @function mtlx_procedural2d_ramp4_color4
  * @description Library: mtlx. Category: ramp4. Type: color4
  *   LiteGraph id: mtlx/procedural2d/ramp4_color4
  */
function mtlx_procedural2d_ramp4_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ramp4_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'ramp4';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramp4.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ramp4_color4_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuetl','color4');
  this.addProperty('valuetl', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuetr','color4');
  this.addProperty('valuetr', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuebl','color4');
  this.addProperty('valuebl', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuebr','color4');
  this.addProperty('valuebr', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','color4');
  this.title = 'ramp4_color4';
  this.desc = "MaterialX:mtlx/procedural2d/ramp4_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_procedural2d_ramp4_color4.nodedef_name = 'ND_ramp4_color4';
mtlx_procedural2d_ramp4_color4.nodedef_node = 'ramp4';
mtlx_procedural2d_ramp4_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramp4.html';
LiteGraph.registerNodeType('mtlx/procedural2d/ramp4_color4',mtlx_procedural2d_ramp4_color4);

/**
  * @function mtlx_procedural2d_ramp4_vector2
  * @description Library: mtlx. Category: ramp4. Type: vector2
  *   LiteGraph id: mtlx/procedural2d/ramp4_vector2
  */
function mtlx_procedural2d_ramp4_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ramp4_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'ramp4';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramp4.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ramp4_vector2_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuetl','vector2');
  this.addProperty('valuetl', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuetr','vector2');
  this.addProperty('valuetr', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuebl','vector2');
  this.addProperty('valuebl', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuebr','vector2');
  this.addProperty('valuebr', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','vector2');
  this.title = 'ramp4_vector2';
  this.desc = "MaterialX:mtlx/procedural2d/ramp4_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_procedural2d_ramp4_vector2.nodedef_name = 'ND_ramp4_vector2';
mtlx_procedural2d_ramp4_vector2.nodedef_node = 'ramp4';
mtlx_procedural2d_ramp4_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramp4.html';
LiteGraph.registerNodeType('mtlx/procedural2d/ramp4_vector2',mtlx_procedural2d_ramp4_vector2);

/**
  * @function mtlx_procedural2d_ramp4_vector3
  * @description Library: mtlx. Category: ramp4. Type: vector3
  *   LiteGraph id: mtlx/procedural2d/ramp4_vector3
  */
function mtlx_procedural2d_ramp4_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ramp4_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'ramp4';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramp4.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ramp4_vector3_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuetl','vector3');
  this.addProperty('valuetl', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuetr','vector3');
  this.addProperty('valuetr', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuebl','vector3');
  this.addProperty('valuebl', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuebr','vector3');
  this.addProperty('valuebr', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','vector3');
  this.title = 'ramp4_vector3';
  this.desc = "MaterialX:mtlx/procedural2d/ramp4_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_procedural2d_ramp4_vector3.nodedef_name = 'ND_ramp4_vector3';
mtlx_procedural2d_ramp4_vector3.nodedef_node = 'ramp4';
mtlx_procedural2d_ramp4_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramp4.html';
LiteGraph.registerNodeType('mtlx/procedural2d/ramp4_vector3',mtlx_procedural2d_ramp4_vector3);

/**
  * @function mtlx_procedural2d_ramp4_vector4
  * @description Library: mtlx. Category: ramp4. Type: vector4
  *   LiteGraph id: mtlx/procedural2d/ramp4_vector4
  */
function mtlx_procedural2d_ramp4_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ramp4_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'ramp4';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramp4.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ramp4_vector4_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuetl','vector4');
  this.addProperty('valuetl', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuetr','vector4');
  this.addProperty('valuetr', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuebl','vector4');
  this.addProperty('valuebl', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuebr','vector4');
  this.addProperty('valuebr', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','vector4');
  this.title = 'ramp4_vector4';
  this.desc = "MaterialX:mtlx/procedural2d/ramp4_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_procedural2d_ramp4_vector4.nodedef_name = 'ND_ramp4_vector4';
mtlx_procedural2d_ramp4_vector4.nodedef_node = 'ramp4';
mtlx_procedural2d_ramp4_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ramp4.html';
LiteGraph.registerNodeType('mtlx/procedural2d/ramp4_vector4',mtlx_procedural2d_ramp4_vector4);

/**
  * @function mtlx_procedural2d_splitlr_float
  * @description Library: mtlx. Category: ramp4. Type: float
  *   LiteGraph id: mtlx/procedural2d/splitlr_float
  */
function mtlx_procedural2d_splitlr_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_splitlr_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'splitlr';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splitlr.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_splitlr_float_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuel','float');
  this.addProperty('valuel', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Left","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuer','float');
  this.addProperty('valuer', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Right","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('center','float');
  this.addProperty('center', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Center","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','float');
  this.title = 'splitlr_float';
  this.desc = "MaterialX:mtlx/procedural2d/splitlr_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_procedural2d_splitlr_float.nodedef_name = 'ND_splitlr_float';
mtlx_procedural2d_splitlr_float.nodedef_node = 'splitlr';
mtlx_procedural2d_splitlr_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splitlr.html';
LiteGraph.registerNodeType('mtlx/procedural2d/splitlr_float',mtlx_procedural2d_splitlr_float);

/**
  * @function mtlx_procedural2d_splitlr_color3
  * @description Library: mtlx. Category: splitlr. Type: color3
  *   LiteGraph id: mtlx/procedural2d/splitlr_color3
  */
function mtlx_procedural2d_splitlr_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_splitlr_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'splitlr';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splitlr.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_splitlr_color3_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuel','color3');
  this.addProperty('valuel', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Left","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuer','color3');
  this.addProperty('valuer', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Right","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('center','float');
  this.addProperty('center', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Center","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','color3');
  this.title = 'splitlr_color3';
  this.desc = "MaterialX:mtlx/procedural2d/splitlr_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_procedural2d_splitlr_color3.nodedef_name = 'ND_splitlr_color3';
mtlx_procedural2d_splitlr_color3.nodedef_node = 'splitlr';
mtlx_procedural2d_splitlr_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splitlr.html';
LiteGraph.registerNodeType('mtlx/procedural2d/splitlr_color3',mtlx_procedural2d_splitlr_color3);

/**
  * @function mtlx_procedural2d_splitlr_color4
  * @description Library: mtlx. Category: splitlr. Type: color4
  *   LiteGraph id: mtlx/procedural2d/splitlr_color4
  */
function mtlx_procedural2d_splitlr_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_splitlr_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'splitlr';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splitlr.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_splitlr_color4_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuel','color4');
  this.addProperty('valuel', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"Left","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuer','color4');
  this.addProperty('valuer', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"Right","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('center','float');
  this.addProperty('center', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Center","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','color4');
  this.title = 'splitlr_color4';
  this.desc = "MaterialX:mtlx/procedural2d/splitlr_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_procedural2d_splitlr_color4.nodedef_name = 'ND_splitlr_color4';
mtlx_procedural2d_splitlr_color4.nodedef_node = 'splitlr';
mtlx_procedural2d_splitlr_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splitlr.html';
LiteGraph.registerNodeType('mtlx/procedural2d/splitlr_color4',mtlx_procedural2d_splitlr_color4);

/**
  * @function mtlx_procedural2d_splitlr_vector2
  * @description Library: mtlx. Category: splitlr. Type: vector2
  *   LiteGraph id: mtlx/procedural2d/splitlr_vector2
  */
function mtlx_procedural2d_splitlr_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_splitlr_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'splitlr';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splitlr.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_splitlr_vector2_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuel','vector2');
  this.addProperty('valuel', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"Left","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuer','vector2');
  this.addProperty('valuer', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"Right","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('center','float');
  this.addProperty('center', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Center","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','vector2');
  this.title = 'splitlr_vector2';
  this.desc = "MaterialX:mtlx/procedural2d/splitlr_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_procedural2d_splitlr_vector2.nodedef_name = 'ND_splitlr_vector2';
mtlx_procedural2d_splitlr_vector2.nodedef_node = 'splitlr';
mtlx_procedural2d_splitlr_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splitlr.html';
LiteGraph.registerNodeType('mtlx/procedural2d/splitlr_vector2',mtlx_procedural2d_splitlr_vector2);

/**
  * @function mtlx_procedural2d_splitlr_vector3
  * @description Library: mtlx. Category: splitlr. Type: vector3
  *   LiteGraph id: mtlx/procedural2d/splitlr_vector3
  */
function mtlx_procedural2d_splitlr_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_splitlr_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'splitlr';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splitlr.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_splitlr_vector3_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuel','vector3');
  this.addProperty('valuel', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Left","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuer','vector3');
  this.addProperty('valuer', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Right","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('center','float');
  this.addProperty('center', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Center","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','vector3');
  this.title = 'splitlr_vector3';
  this.desc = "MaterialX:mtlx/procedural2d/splitlr_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_procedural2d_splitlr_vector3.nodedef_name = 'ND_splitlr_vector3';
mtlx_procedural2d_splitlr_vector3.nodedef_node = 'splitlr';
mtlx_procedural2d_splitlr_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splitlr.html';
LiteGraph.registerNodeType('mtlx/procedural2d/splitlr_vector3',mtlx_procedural2d_splitlr_vector3);

/**
  * @function mtlx_procedural2d_splitlr_vector4
  * @description Library: mtlx. Category: splitlr. Type: vector4
  *   LiteGraph id: mtlx/procedural2d/splitlr_vector4
  */
function mtlx_procedural2d_splitlr_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_splitlr_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'splitlr';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splitlr.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_splitlr_vector4_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuel','vector4');
  this.addProperty('valuel', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"Left","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valuer','vector4');
  this.addProperty('valuer', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"Right","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('center','float');
  this.addProperty('center', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Center","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','vector4');
  this.title = 'splitlr_vector4';
  this.desc = "MaterialX:mtlx/procedural2d/splitlr_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_procedural2d_splitlr_vector4.nodedef_name = 'ND_splitlr_vector4';
mtlx_procedural2d_splitlr_vector4.nodedef_node = 'splitlr';
mtlx_procedural2d_splitlr_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splitlr.html';
LiteGraph.registerNodeType('mtlx/procedural2d/splitlr_vector4',mtlx_procedural2d_splitlr_vector4);

/**
  * @function mtlx_procedural2d_splittb_float
  * @description Library: mtlx. Category: splitlr. Type: float
  *   LiteGraph id: mtlx/procedural2d/splittb_float
  */
function mtlx_procedural2d_splittb_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_splittb_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'splittb';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splittb.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_splittb_float_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuet','float');
  this.addProperty('valuet', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Top","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valueb','float');
  this.addProperty('valueb', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Bottom","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('center','float');
  this.addProperty('center', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Center","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','float');
  this.title = 'splittb_float';
  this.desc = "MaterialX:mtlx/procedural2d/splittb_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_procedural2d_splittb_float.nodedef_name = 'ND_splittb_float';
mtlx_procedural2d_splittb_float.nodedef_node = 'splittb';
mtlx_procedural2d_splittb_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splittb.html';
LiteGraph.registerNodeType('mtlx/procedural2d/splittb_float',mtlx_procedural2d_splittb_float);

/**
  * @function mtlx_procedural2d_splittb_color3
  * @description Library: mtlx. Category: splittb. Type: color3
  *   LiteGraph id: mtlx/procedural2d/splittb_color3
  */
function mtlx_procedural2d_splittb_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_splittb_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'splittb';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splittb.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_splittb_color3_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuet','color3');
  this.addProperty('valuet', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Top","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valueb','color3');
  this.addProperty('valueb', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Bottom","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('center','float');
  this.addProperty('center', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Center","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','color3');
  this.title = 'splittb_color3';
  this.desc = "MaterialX:mtlx/procedural2d/splittb_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_procedural2d_splittb_color3.nodedef_name = 'ND_splittb_color3';
mtlx_procedural2d_splittb_color3.nodedef_node = 'splittb';
mtlx_procedural2d_splittb_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splittb.html';
LiteGraph.registerNodeType('mtlx/procedural2d/splittb_color3',mtlx_procedural2d_splittb_color3);

/**
  * @function mtlx_procedural2d_splittb_color4
  * @description Library: mtlx. Category: splittb. Type: color4
  *   LiteGraph id: mtlx/procedural2d/splittb_color4
  */
function mtlx_procedural2d_splittb_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_splittb_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'splittb';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splittb.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_splittb_color4_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuet','color4');
  this.addProperty('valuet', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"Top","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valueb','color4');
  this.addProperty('valueb', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"Bottom","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('center','float');
  this.addProperty('center', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Center","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','color4');
  this.title = 'splittb_color4';
  this.desc = "MaterialX:mtlx/procedural2d/splittb_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_procedural2d_splittb_color4.nodedef_name = 'ND_splittb_color4';
mtlx_procedural2d_splittb_color4.nodedef_node = 'splittb';
mtlx_procedural2d_splittb_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splittb.html';
LiteGraph.registerNodeType('mtlx/procedural2d/splittb_color4',mtlx_procedural2d_splittb_color4);

/**
  * @function mtlx_procedural2d_splittb_vector2
  * @description Library: mtlx. Category: splittb. Type: vector2
  *   LiteGraph id: mtlx/procedural2d/splittb_vector2
  */
function mtlx_procedural2d_splittb_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_splittb_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'splittb';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splittb.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_splittb_vector2_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuet','vector2');
  this.addProperty('valuet', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"Top","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valueb','vector2');
  this.addProperty('valueb', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"Bottom","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('center','float');
  this.addProperty('center', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Center","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','vector2');
  this.title = 'splittb_vector2';
  this.desc = "MaterialX:mtlx/procedural2d/splittb_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_procedural2d_splittb_vector2.nodedef_name = 'ND_splittb_vector2';
mtlx_procedural2d_splittb_vector2.nodedef_node = 'splittb';
mtlx_procedural2d_splittb_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splittb.html';
LiteGraph.registerNodeType('mtlx/procedural2d/splittb_vector2',mtlx_procedural2d_splittb_vector2);

/**
  * @function mtlx_procedural2d_splittb_vector3
  * @description Library: mtlx. Category: splittb. Type: vector3
  *   LiteGraph id: mtlx/procedural2d/splittb_vector3
  */
function mtlx_procedural2d_splittb_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_splittb_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'splittb';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splittb.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_splittb_vector3_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuet','vector3');
  this.addProperty('valuet', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Top","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valueb','vector3');
  this.addProperty('valueb', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Bottom","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('center','float');
  this.addProperty('center', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Center","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','vector3');
  this.title = 'splittb_vector3';
  this.desc = "MaterialX:mtlx/procedural2d/splittb_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_procedural2d_splittb_vector3.nodedef_name = 'ND_splittb_vector3';
mtlx_procedural2d_splittb_vector3.nodedef_node = 'splittb';
mtlx_procedural2d_splittb_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splittb.html';
LiteGraph.registerNodeType('mtlx/procedural2d/splittb_vector3',mtlx_procedural2d_splittb_vector3);

/**
  * @function mtlx_procedural2d_splittb_vector4
  * @description Library: mtlx. Category: splittb. Type: vector4
  *   LiteGraph id: mtlx/procedural2d/splittb_vector4
  */
function mtlx_procedural2d_splittb_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_splittb_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'splittb';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splittb.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_splittb_vector4_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('valuet','vector4');
  this.addProperty('valuet', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"Top","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('valueb','vector4');
  this.addProperty('valueb', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"Bottom","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('center','float');
  this.addProperty('center', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Center","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','vector4');
  this.title = 'splittb_vector4';
  this.desc = "MaterialX:mtlx/procedural2d/splittb_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_procedural2d_splittb_vector4.nodedef_name = 'ND_splittb_vector4';
mtlx_procedural2d_splittb_vector4.nodedef_node = 'splittb';
mtlx_procedural2d_splittb_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/splittb.html';
LiteGraph.registerNodeType('mtlx/procedural2d/splittb_vector4',mtlx_procedural2d_splittb_vector4);

/**
  * @function mtlx_procedural2d_noise2d_float
  * @description Library: mtlx. Category: splittb. Type: float
  *   LiteGraph id: mtlx/procedural2d/noise2d_float
  */
function mtlx_procedural2d_noise2d_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_noise2d_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'noise2d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise2d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_noise2d_float_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('amplitude','float');
  this.addProperty('amplitude', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','float');
  this.title = 'noise2d_float';
  this.desc = "MaterialX:mtlx/procedural2d/noise2d_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_procedural2d_noise2d_float.nodedef_name = 'ND_noise2d_float';
mtlx_procedural2d_noise2d_float.nodedef_node = 'noise2d';
mtlx_procedural2d_noise2d_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise2d.html';
LiteGraph.registerNodeType('mtlx/procedural2d/noise2d_float',mtlx_procedural2d_noise2d_float);

/**
  * @function mtlx_procedural2d_noise2d_color3
  * @description Library: mtlx. Category: noise2d. Type: color3
  *   LiteGraph id: mtlx/procedural2d/noise2d_color3
  */
function mtlx_procedural2d_noise2d_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_noise2d_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'noise2d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise2d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_noise2d_color3_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('amplitude','vector3');
  this.addProperty('amplitude', [1.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','color3');
  this.title = 'noise2d_color3';
  this.desc = "MaterialX:mtlx/procedural2d/noise2d_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_procedural2d_noise2d_color3.nodedef_name = 'ND_noise2d_color3';
mtlx_procedural2d_noise2d_color3.nodedef_node = 'noise2d';
mtlx_procedural2d_noise2d_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise2d.html';
LiteGraph.registerNodeType('mtlx/procedural2d/noise2d_color3',mtlx_procedural2d_noise2d_color3);

/**
  * @function mtlx_procedural2d_noise2d_color4
  * @description Library: mtlx. Category: noise2d. Type: color4
  *   LiteGraph id: mtlx/procedural2d/noise2d_color4
  */
function mtlx_procedural2d_noise2d_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_noise2d_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'noise2d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise2d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_noise2d_color4_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('amplitude','vector4');
  this.addProperty('amplitude', [1.0, 1.0, 1.0, 1.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','color4');
  this.title = 'noise2d_color4';
  this.desc = "MaterialX:mtlx/procedural2d/noise2d_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_procedural2d_noise2d_color4.nodedef_name = 'ND_noise2d_color4';
mtlx_procedural2d_noise2d_color4.nodedef_node = 'noise2d';
mtlx_procedural2d_noise2d_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise2d.html';
LiteGraph.registerNodeType('mtlx/procedural2d/noise2d_color4',mtlx_procedural2d_noise2d_color4);

/**
  * @function mtlx_procedural2d_noise2d_vector2
  * @description Library: mtlx. Category: noise2d. Type: vector2
  *   LiteGraph id: mtlx/procedural2d/noise2d_vector2
  */
function mtlx_procedural2d_noise2d_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_noise2d_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'noise2d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise2d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_noise2d_vector2_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('amplitude','vector2');
  this.addProperty('amplitude', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','vector2');
  this.title = 'noise2d_vector2';
  this.desc = "MaterialX:mtlx/procedural2d/noise2d_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_procedural2d_noise2d_vector2.nodedef_name = 'ND_noise2d_vector2';
mtlx_procedural2d_noise2d_vector2.nodedef_node = 'noise2d';
mtlx_procedural2d_noise2d_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise2d.html';
LiteGraph.registerNodeType('mtlx/procedural2d/noise2d_vector2',mtlx_procedural2d_noise2d_vector2);

/**
  * @function mtlx_procedural2d_noise2d_vector3
  * @description Library: mtlx. Category: noise2d. Type: vector3
  *   LiteGraph id: mtlx/procedural2d/noise2d_vector3
  */
function mtlx_procedural2d_noise2d_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_noise2d_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'noise2d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise2d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_noise2d_vector3_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('amplitude','vector3');
  this.addProperty('amplitude', [1.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','vector3');
  this.title = 'noise2d_vector3';
  this.desc = "MaterialX:mtlx/procedural2d/noise2d_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_procedural2d_noise2d_vector3.nodedef_name = 'ND_noise2d_vector3';
mtlx_procedural2d_noise2d_vector3.nodedef_node = 'noise2d';
mtlx_procedural2d_noise2d_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise2d.html';
LiteGraph.registerNodeType('mtlx/procedural2d/noise2d_vector3',mtlx_procedural2d_noise2d_vector3);

/**
  * @function mtlx_procedural2d_noise2d_vector4
  * @description Library: mtlx. Category: noise2d. Type: vector4
  *   LiteGraph id: mtlx/procedural2d/noise2d_vector4
  */
function mtlx_procedural2d_noise2d_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_noise2d_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'noise2d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise2d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_noise2d_vector4_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('amplitude','vector4');
  this.addProperty('amplitude', [1.0, 1.0, 1.0, 1.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','vector4');
  this.title = 'noise2d_vector4';
  this.desc = "MaterialX:mtlx/procedural2d/noise2d_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_procedural2d_noise2d_vector4.nodedef_name = 'ND_noise2d_vector4';
mtlx_procedural2d_noise2d_vector4.nodedef_node = 'noise2d';
mtlx_procedural2d_noise2d_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise2d.html';
LiteGraph.registerNodeType('mtlx/procedural2d/noise2d_vector4',mtlx_procedural2d_noise2d_vector4);

/**
  * @function mtlx_procedural2d_noise2d_color3FA
  * @description Library: mtlx. Category: noise2d. Type: color3
  *   LiteGraph id: mtlx/procedural2d/noise2d_color3FA
  */
function mtlx_procedural2d_noise2d_color3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_noise2d_color3FA';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'noise2d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise2d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_noise2d_color3FA_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('amplitude','float');
  this.addProperty('amplitude', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','color3');
  this.title = 'noise2d_color3';
  this.desc = "MaterialX:mtlx/procedural2d/noise2d_color3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_procedural2d_noise2d_color3FA.nodedef_name = 'ND_noise2d_color3FA';
mtlx_procedural2d_noise2d_color3FA.nodedef_node = 'noise2d';
mtlx_procedural2d_noise2d_color3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise2d.html';
LiteGraph.registerNodeType('mtlx/procedural2d/noise2d_color3FA',mtlx_procedural2d_noise2d_color3FA);

/**
  * @function mtlx_procedural2d_noise2d_color4FA
  * @description Library: mtlx. Category: noise2d. Type: color4
  *   LiteGraph id: mtlx/procedural2d/noise2d_color4FA
  */
function mtlx_procedural2d_noise2d_color4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_noise2d_color4FA';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'noise2d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise2d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_noise2d_color4FA_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('amplitude','float');
  this.addProperty('amplitude', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','color4');
  this.title = 'noise2d_color4';
  this.desc = "MaterialX:mtlx/procedural2d/noise2d_color4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_procedural2d_noise2d_color4FA.nodedef_name = 'ND_noise2d_color4FA';
mtlx_procedural2d_noise2d_color4FA.nodedef_node = 'noise2d';
mtlx_procedural2d_noise2d_color4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise2d.html';
LiteGraph.registerNodeType('mtlx/procedural2d/noise2d_color4FA',mtlx_procedural2d_noise2d_color4FA);

/**
  * @function mtlx_procedural2d_noise2d_vector2FA
  * @description Library: mtlx. Category: noise2d. Type: vector2
  *   LiteGraph id: mtlx/procedural2d/noise2d_vector2FA
  */
function mtlx_procedural2d_noise2d_vector2FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_noise2d_vector2FA';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'noise2d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise2d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_noise2d_vector2FA_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('amplitude','float');
  this.addProperty('amplitude', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','vector2');
  this.title = 'noise2d_vector2';
  this.desc = "MaterialX:mtlx/procedural2d/noise2d_vector2FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_procedural2d_noise2d_vector2FA.nodedef_name = 'ND_noise2d_vector2FA';
mtlx_procedural2d_noise2d_vector2FA.nodedef_node = 'noise2d';
mtlx_procedural2d_noise2d_vector2FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise2d.html';
LiteGraph.registerNodeType('mtlx/procedural2d/noise2d_vector2FA',mtlx_procedural2d_noise2d_vector2FA);

/**
  * @function mtlx_procedural2d_noise2d_vector3FA
  * @description Library: mtlx. Category: noise2d. Type: vector3
  *   LiteGraph id: mtlx/procedural2d/noise2d_vector3FA
  */
function mtlx_procedural2d_noise2d_vector3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_noise2d_vector3FA';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'noise2d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise2d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_noise2d_vector3FA_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('amplitude','float');
  this.addProperty('amplitude', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','vector3');
  this.title = 'noise2d_vector3';
  this.desc = "MaterialX:mtlx/procedural2d/noise2d_vector3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_procedural2d_noise2d_vector3FA.nodedef_name = 'ND_noise2d_vector3FA';
mtlx_procedural2d_noise2d_vector3FA.nodedef_node = 'noise2d';
mtlx_procedural2d_noise2d_vector3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise2d.html';
LiteGraph.registerNodeType('mtlx/procedural2d/noise2d_vector3FA',mtlx_procedural2d_noise2d_vector3FA);

/**
  * @function mtlx_procedural2d_noise2d_vector4FA
  * @description Library: mtlx. Category: noise2d. Type: vector4
  *   LiteGraph id: mtlx/procedural2d/noise2d_vector4FA
  */
function mtlx_procedural2d_noise2d_vector4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_noise2d_vector4FA';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'noise2d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise2d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_noise2d_vector4FA_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('amplitude','float');
  this.addProperty('amplitude', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','vector4');
  this.title = 'noise2d_vector4';
  this.desc = "MaterialX:mtlx/procedural2d/noise2d_vector4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_procedural2d_noise2d_vector4FA.nodedef_name = 'ND_noise2d_vector4FA';
mtlx_procedural2d_noise2d_vector4FA.nodedef_node = 'noise2d';
mtlx_procedural2d_noise2d_vector4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise2d.html';
LiteGraph.registerNodeType('mtlx/procedural2d/noise2d_vector4FA',mtlx_procedural2d_noise2d_vector4FA);

/**
  * @function mtlx_procedural3d_noise3d_float
  * @description Library: mtlx. Category: noise2d. Type: float
  *   LiteGraph id: mtlx/procedural3d/noise3d_float
  */
function mtlx_procedural3d_noise3d_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_noise3d_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'noise3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_noise3d_float_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('amplitude','float');
  this.addProperty('amplitude', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addOutput('out','float');
  this.title = 'noise3d_float';
  this.desc = "MaterialX:mtlx/procedural3d/noise3d_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_procedural3d_noise3d_float.nodedef_name = 'ND_noise3d_float';
mtlx_procedural3d_noise3d_float.nodedef_node = 'noise3d';
mtlx_procedural3d_noise3d_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/noise3d_float',mtlx_procedural3d_noise3d_float);

/**
  * @function mtlx_procedural3d_noise3d_color3
  * @description Library: mtlx. Category: noise3d. Type: color3
  *   LiteGraph id: mtlx/procedural3d/noise3d_color3
  */
function mtlx_procedural3d_noise3d_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_noise3d_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'noise3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_noise3d_color3_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('amplitude','vector3');
  this.addProperty('amplitude', [1.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addOutput('out','color3');
  this.title = 'noise3d_color3';
  this.desc = "MaterialX:mtlx/procedural3d/noise3d_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_procedural3d_noise3d_color3.nodedef_name = 'ND_noise3d_color3';
mtlx_procedural3d_noise3d_color3.nodedef_node = 'noise3d';
mtlx_procedural3d_noise3d_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/noise3d_color3',mtlx_procedural3d_noise3d_color3);

/**
  * @function mtlx_procedural3d_noise3d_color4
  * @description Library: mtlx. Category: noise3d. Type: color4
  *   LiteGraph id: mtlx/procedural3d/noise3d_color4
  */
function mtlx_procedural3d_noise3d_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_noise3d_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'noise3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_noise3d_color4_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('amplitude','vector4');
  this.addProperty('amplitude', [1.0, 1.0, 1.0, 1.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addOutput('out','color4');
  this.title = 'noise3d_color4';
  this.desc = "MaterialX:mtlx/procedural3d/noise3d_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_procedural3d_noise3d_color4.nodedef_name = 'ND_noise3d_color4';
mtlx_procedural3d_noise3d_color4.nodedef_node = 'noise3d';
mtlx_procedural3d_noise3d_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/noise3d_color4',mtlx_procedural3d_noise3d_color4);

/**
  * @function mtlx_procedural3d_noise3d_vector2
  * @description Library: mtlx. Category: noise3d. Type: vector2
  *   LiteGraph id: mtlx/procedural3d/noise3d_vector2
  */
function mtlx_procedural3d_noise3d_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_noise3d_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'noise3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_noise3d_vector2_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('amplitude','vector2');
  this.addProperty('amplitude', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addOutput('out','vector2');
  this.title = 'noise3d_vector2';
  this.desc = "MaterialX:mtlx/procedural3d/noise3d_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_procedural3d_noise3d_vector2.nodedef_name = 'ND_noise3d_vector2';
mtlx_procedural3d_noise3d_vector2.nodedef_node = 'noise3d';
mtlx_procedural3d_noise3d_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/noise3d_vector2',mtlx_procedural3d_noise3d_vector2);

/**
  * @function mtlx_procedural3d_noise3d_vector3
  * @description Library: mtlx. Category: noise3d. Type: vector3
  *   LiteGraph id: mtlx/procedural3d/noise3d_vector3
  */
function mtlx_procedural3d_noise3d_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_noise3d_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'noise3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_noise3d_vector3_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('amplitude','vector3');
  this.addProperty('amplitude', [1.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addOutput('out','vector3');
  this.title = 'noise3d_vector3';
  this.desc = "MaterialX:mtlx/procedural3d/noise3d_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_procedural3d_noise3d_vector3.nodedef_name = 'ND_noise3d_vector3';
mtlx_procedural3d_noise3d_vector3.nodedef_node = 'noise3d';
mtlx_procedural3d_noise3d_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/noise3d_vector3',mtlx_procedural3d_noise3d_vector3);

/**
  * @function mtlx_procedural3d_noise3d_vector4
  * @description Library: mtlx. Category: noise3d. Type: vector4
  *   LiteGraph id: mtlx/procedural3d/noise3d_vector4
  */
function mtlx_procedural3d_noise3d_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_noise3d_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'noise3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_noise3d_vector4_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('amplitude','vector4');
  this.addProperty('amplitude', [1.0, 1.0, 1.0, 1.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addOutput('out','vector4');
  this.title = 'noise3d_vector4';
  this.desc = "MaterialX:mtlx/procedural3d/noise3d_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_procedural3d_noise3d_vector4.nodedef_name = 'ND_noise3d_vector4';
mtlx_procedural3d_noise3d_vector4.nodedef_node = 'noise3d';
mtlx_procedural3d_noise3d_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/noise3d_vector4',mtlx_procedural3d_noise3d_vector4);

/**
  * @function mtlx_procedural3d_noise3d_color3FA
  * @description Library: mtlx. Category: noise3d. Type: color3
  *   LiteGraph id: mtlx/procedural3d/noise3d_color3FA
  */
function mtlx_procedural3d_noise3d_color3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_noise3d_color3FA';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'noise3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_noise3d_color3FA_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('amplitude','float');
  this.addProperty('amplitude', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addOutput('out','color3');
  this.title = 'noise3d_color3';
  this.desc = "MaterialX:mtlx/procedural3d/noise3d_color3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_procedural3d_noise3d_color3FA.nodedef_name = 'ND_noise3d_color3FA';
mtlx_procedural3d_noise3d_color3FA.nodedef_node = 'noise3d';
mtlx_procedural3d_noise3d_color3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/noise3d_color3FA',mtlx_procedural3d_noise3d_color3FA);

/**
  * @function mtlx_procedural3d_noise3d_color4FA
  * @description Library: mtlx. Category: noise3d. Type: color4
  *   LiteGraph id: mtlx/procedural3d/noise3d_color4FA
  */
function mtlx_procedural3d_noise3d_color4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_noise3d_color4FA';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'noise3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_noise3d_color4FA_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('amplitude','float');
  this.addProperty('amplitude', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addOutput('out','color4');
  this.title = 'noise3d_color4';
  this.desc = "MaterialX:mtlx/procedural3d/noise3d_color4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_procedural3d_noise3d_color4FA.nodedef_name = 'ND_noise3d_color4FA';
mtlx_procedural3d_noise3d_color4FA.nodedef_node = 'noise3d';
mtlx_procedural3d_noise3d_color4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/noise3d_color4FA',mtlx_procedural3d_noise3d_color4FA);

/**
  * @function mtlx_procedural3d_noise3d_vector2FA
  * @description Library: mtlx. Category: noise3d. Type: vector2
  *   LiteGraph id: mtlx/procedural3d/noise3d_vector2FA
  */
function mtlx_procedural3d_noise3d_vector2FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_noise3d_vector2FA';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'noise3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_noise3d_vector2FA_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('amplitude','float');
  this.addProperty('amplitude', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addOutput('out','vector2');
  this.title = 'noise3d_vector2';
  this.desc = "MaterialX:mtlx/procedural3d/noise3d_vector2FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_procedural3d_noise3d_vector2FA.nodedef_name = 'ND_noise3d_vector2FA';
mtlx_procedural3d_noise3d_vector2FA.nodedef_node = 'noise3d';
mtlx_procedural3d_noise3d_vector2FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/noise3d_vector2FA',mtlx_procedural3d_noise3d_vector2FA);

/**
  * @function mtlx_procedural3d_noise3d_vector3FA
  * @description Library: mtlx. Category: noise3d. Type: vector3
  *   LiteGraph id: mtlx/procedural3d/noise3d_vector3FA
  */
function mtlx_procedural3d_noise3d_vector3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_noise3d_vector3FA';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'noise3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_noise3d_vector3FA_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('amplitude','float');
  this.addProperty('amplitude', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addOutput('out','vector3');
  this.title = 'noise3d_vector3';
  this.desc = "MaterialX:mtlx/procedural3d/noise3d_vector3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_procedural3d_noise3d_vector3FA.nodedef_name = 'ND_noise3d_vector3FA';
mtlx_procedural3d_noise3d_vector3FA.nodedef_node = 'noise3d';
mtlx_procedural3d_noise3d_vector3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/noise3d_vector3FA',mtlx_procedural3d_noise3d_vector3FA);

/**
  * @function mtlx_procedural3d_noise3d_vector4FA
  * @description Library: mtlx. Category: noise3d. Type: vector4
  *   LiteGraph id: mtlx/procedural3d/noise3d_vector4FA
  */
function mtlx_procedural3d_noise3d_vector4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_noise3d_vector4FA';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'noise3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_noise3d_vector4FA_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('amplitude','float');
  this.addProperty('amplitude', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addOutput('out','vector4');
  this.title = 'noise3d_vector4';
  this.desc = "MaterialX:mtlx/procedural3d/noise3d_vector4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_procedural3d_noise3d_vector4FA.nodedef_name = 'ND_noise3d_vector4FA';
mtlx_procedural3d_noise3d_vector4FA.nodedef_node = 'noise3d';
mtlx_procedural3d_noise3d_vector4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/noise3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/noise3d_vector4FA',mtlx_procedural3d_noise3d_vector4FA);

/**
  * @function mtlx_procedural3d_fractal3d_float
  * @description Library: mtlx. Category: noise3d. Type: float
  *   LiteGraph id: mtlx/procedural3d/fractal3d_float
  */
function mtlx_procedural3d_fractal3d_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_fractal3d_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'fractal3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/fractal3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_fractal3d_float_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('amplitude','float');
  this.addProperty('amplitude', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('octaves','integer');
  this.addProperty('octaves', 3, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('lacunarity','float');
  this.addProperty('lacunarity', 2.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('diminish','float');
  this.addProperty('diminish', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addOutput('out','float');
  this.title = 'fractal3d_float';
  this.desc = "MaterialX:mtlx/procedural3d/fractal3d_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_procedural3d_fractal3d_float.nodedef_name = 'ND_fractal3d_float';
mtlx_procedural3d_fractal3d_float.nodedef_node = 'fractal3d';
mtlx_procedural3d_fractal3d_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/fractal3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/fractal3d_float',mtlx_procedural3d_fractal3d_float);

/**
  * @function mtlx_procedural3d_fractal3d_color3
  * @description Library: mtlx. Category: fractal3d. Type: color3
  *   LiteGraph id: mtlx/procedural3d/fractal3d_color3
  */
function mtlx_procedural3d_fractal3d_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_fractal3d_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'fractal3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/fractal3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_fractal3d_color3_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('amplitude','vector3');
  this.addProperty('amplitude', [1.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('octaves','integer');
  this.addProperty('octaves', 3, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('lacunarity','float');
  this.addProperty('lacunarity', 2.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('diminish','float');
  this.addProperty('diminish', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addOutput('out','color3');
  this.title = 'fractal3d_color3';
  this.desc = "MaterialX:mtlx/procedural3d/fractal3d_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_procedural3d_fractal3d_color3.nodedef_name = 'ND_fractal3d_color3';
mtlx_procedural3d_fractal3d_color3.nodedef_node = 'fractal3d';
mtlx_procedural3d_fractal3d_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/fractal3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/fractal3d_color3',mtlx_procedural3d_fractal3d_color3);

/**
  * @function mtlx_procedural3d_fractal3d_color4
  * @description Library: mtlx. Category: fractal3d. Type: color4
  *   LiteGraph id: mtlx/procedural3d/fractal3d_color4
  */
function mtlx_procedural3d_fractal3d_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_fractal3d_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'fractal3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/fractal3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_fractal3d_color4_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('amplitude','vector4');
  this.addProperty('amplitude', [1.0, 1.0, 1.0, 1.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('octaves','integer');
  this.addProperty('octaves', 3, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('lacunarity','float');
  this.addProperty('lacunarity', 2.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('diminish','float');
  this.addProperty('diminish', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addOutput('out','color4');
  this.title = 'fractal3d_color4';
  this.desc = "MaterialX:mtlx/procedural3d/fractal3d_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_procedural3d_fractal3d_color4.nodedef_name = 'ND_fractal3d_color4';
mtlx_procedural3d_fractal3d_color4.nodedef_node = 'fractal3d';
mtlx_procedural3d_fractal3d_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/fractal3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/fractal3d_color4',mtlx_procedural3d_fractal3d_color4);

/**
  * @function mtlx_procedural3d_fractal3d_vector2
  * @description Library: mtlx. Category: fractal3d. Type: vector2
  *   LiteGraph id: mtlx/procedural3d/fractal3d_vector2
  */
function mtlx_procedural3d_fractal3d_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_fractal3d_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'fractal3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/fractal3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_fractal3d_vector2_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('amplitude','vector2');
  this.addProperty('amplitude', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('octaves','integer');
  this.addProperty('octaves', 3, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('lacunarity','float');
  this.addProperty('lacunarity', 2.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('diminish','float');
  this.addProperty('diminish', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addOutput('out','vector2');
  this.title = 'fractal3d_vector2';
  this.desc = "MaterialX:mtlx/procedural3d/fractal3d_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_procedural3d_fractal3d_vector2.nodedef_name = 'ND_fractal3d_vector2';
mtlx_procedural3d_fractal3d_vector2.nodedef_node = 'fractal3d';
mtlx_procedural3d_fractal3d_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/fractal3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/fractal3d_vector2',mtlx_procedural3d_fractal3d_vector2);

/**
  * @function mtlx_procedural3d_fractal3d_vector3
  * @description Library: mtlx. Category: fractal3d. Type: vector3
  *   LiteGraph id: mtlx/procedural3d/fractal3d_vector3
  */
function mtlx_procedural3d_fractal3d_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_fractal3d_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'fractal3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/fractal3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_fractal3d_vector3_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('amplitude','vector3');
  this.addProperty('amplitude', [1.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('octaves','integer');
  this.addProperty('octaves', 3, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('lacunarity','float');
  this.addProperty('lacunarity', 2.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('diminish','float');
  this.addProperty('diminish', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addOutput('out','vector3');
  this.title = 'fractal3d_vector3';
  this.desc = "MaterialX:mtlx/procedural3d/fractal3d_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_procedural3d_fractal3d_vector3.nodedef_name = 'ND_fractal3d_vector3';
mtlx_procedural3d_fractal3d_vector3.nodedef_node = 'fractal3d';
mtlx_procedural3d_fractal3d_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/fractal3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/fractal3d_vector3',mtlx_procedural3d_fractal3d_vector3);

/**
  * @function mtlx_procedural3d_fractal3d_vector4
  * @description Library: mtlx. Category: fractal3d. Type: vector4
  *   LiteGraph id: mtlx/procedural3d/fractal3d_vector4
  */
function mtlx_procedural3d_fractal3d_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_fractal3d_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'fractal3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/fractal3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_fractal3d_vector4_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('amplitude','vector4');
  this.addProperty('amplitude', [1.0, 1.0, 1.0, 1.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('octaves','integer');
  this.addProperty('octaves', 3, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('lacunarity','float');
  this.addProperty('lacunarity', 2.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('diminish','float');
  this.addProperty('diminish', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addOutput('out','vector4');
  this.title = 'fractal3d_vector4';
  this.desc = "MaterialX:mtlx/procedural3d/fractal3d_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_procedural3d_fractal3d_vector4.nodedef_name = 'ND_fractal3d_vector4';
mtlx_procedural3d_fractal3d_vector4.nodedef_node = 'fractal3d';
mtlx_procedural3d_fractal3d_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/fractal3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/fractal3d_vector4',mtlx_procedural3d_fractal3d_vector4);

/**
  * @function mtlx_procedural3d_fractal3d_color3FA
  * @description Library: mtlx. Category: fractal3d. Type: color3
  *   LiteGraph id: mtlx/procedural3d/fractal3d_color3FA
  */
function mtlx_procedural3d_fractal3d_color3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_fractal3d_color3FA';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'fractal3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/fractal3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_fractal3d_color3FA_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('amplitude','float');
  this.addProperty('amplitude', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('octaves','integer');
  this.addProperty('octaves', 3, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('lacunarity','float');
  this.addProperty('lacunarity', 2.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('diminish','float');
  this.addProperty('diminish', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addOutput('out','color3');
  this.title = 'fractal3d_color3';
  this.desc = "MaterialX:mtlx/procedural3d/fractal3d_color3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_procedural3d_fractal3d_color3FA.nodedef_name = 'ND_fractal3d_color3FA';
mtlx_procedural3d_fractal3d_color3FA.nodedef_node = 'fractal3d';
mtlx_procedural3d_fractal3d_color3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/fractal3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/fractal3d_color3FA',mtlx_procedural3d_fractal3d_color3FA);

/**
  * @function mtlx_procedural3d_fractal3d_color4FA
  * @description Library: mtlx. Category: fractal3d. Type: color4
  *   LiteGraph id: mtlx/procedural3d/fractal3d_color4FA
  */
function mtlx_procedural3d_fractal3d_color4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_fractal3d_color4FA';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'fractal3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/fractal3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_fractal3d_color4FA_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('amplitude','float');
  this.addProperty('amplitude', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('octaves','integer');
  this.addProperty('octaves', 3, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('lacunarity','float');
  this.addProperty('lacunarity', 2.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('diminish','float');
  this.addProperty('diminish', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addOutput('out','color4');
  this.title = 'fractal3d_color4';
  this.desc = "MaterialX:mtlx/procedural3d/fractal3d_color4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_procedural3d_fractal3d_color4FA.nodedef_name = 'ND_fractal3d_color4FA';
mtlx_procedural3d_fractal3d_color4FA.nodedef_node = 'fractal3d';
mtlx_procedural3d_fractal3d_color4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/fractal3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/fractal3d_color4FA',mtlx_procedural3d_fractal3d_color4FA);

/**
  * @function mtlx_procedural3d_fractal3d_vector2FA
  * @description Library: mtlx. Category: fractal3d. Type: vector2
  *   LiteGraph id: mtlx/procedural3d/fractal3d_vector2FA
  */
function mtlx_procedural3d_fractal3d_vector2FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_fractal3d_vector2FA';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'fractal3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/fractal3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_fractal3d_vector2FA_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('amplitude','float');
  this.addProperty('amplitude', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('octaves','integer');
  this.addProperty('octaves', 3, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('lacunarity','float');
  this.addProperty('lacunarity', 2.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('diminish','float');
  this.addProperty('diminish', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addOutput('out','vector2');
  this.title = 'fractal3d_vector2';
  this.desc = "MaterialX:mtlx/procedural3d/fractal3d_vector2FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_procedural3d_fractal3d_vector2FA.nodedef_name = 'ND_fractal3d_vector2FA';
mtlx_procedural3d_fractal3d_vector2FA.nodedef_node = 'fractal3d';
mtlx_procedural3d_fractal3d_vector2FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/fractal3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/fractal3d_vector2FA',mtlx_procedural3d_fractal3d_vector2FA);

/**
  * @function mtlx_procedural3d_fractal3d_vector3FA
  * @description Library: mtlx. Category: fractal3d. Type: vector3
  *   LiteGraph id: mtlx/procedural3d/fractal3d_vector3FA
  */
function mtlx_procedural3d_fractal3d_vector3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_fractal3d_vector3FA';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'fractal3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/fractal3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_fractal3d_vector3FA_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('amplitude','float');
  this.addProperty('amplitude', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('octaves','integer');
  this.addProperty('octaves', 3, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('lacunarity','float');
  this.addProperty('lacunarity', 2.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('diminish','float');
  this.addProperty('diminish', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addOutput('out','vector3');
  this.title = 'fractal3d_vector3';
  this.desc = "MaterialX:mtlx/procedural3d/fractal3d_vector3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_procedural3d_fractal3d_vector3FA.nodedef_name = 'ND_fractal3d_vector3FA';
mtlx_procedural3d_fractal3d_vector3FA.nodedef_node = 'fractal3d';
mtlx_procedural3d_fractal3d_vector3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/fractal3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/fractal3d_vector3FA',mtlx_procedural3d_fractal3d_vector3FA);

/**
  * @function mtlx_procedural3d_fractal3d_vector4FA
  * @description Library: mtlx. Category: fractal3d. Type: vector4
  *   LiteGraph id: mtlx/procedural3d/fractal3d_vector4FA
  */
function mtlx_procedural3d_fractal3d_vector4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_fractal3d_vector4FA';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'fractal3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/fractal3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_fractal3d_vector4FA_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('amplitude','float');
  this.addProperty('amplitude', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('octaves','integer');
  this.addProperty('octaves', 3, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('lacunarity','float');
  this.addProperty('lacunarity', 2.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('diminish','float');
  this.addProperty('diminish', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addOutput('out','vector4');
  this.title = 'fractal3d_vector4';
  this.desc = "MaterialX:mtlx/procedural3d/fractal3d_vector4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_procedural3d_fractal3d_vector4FA.nodedef_name = 'ND_fractal3d_vector4FA';
mtlx_procedural3d_fractal3d_vector4FA.nodedef_node = 'fractal3d';
mtlx_procedural3d_fractal3d_vector4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/fractal3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/fractal3d_vector4FA',mtlx_procedural3d_fractal3d_vector4FA);

/**
  * @function mtlx_procedural2d_cellnoise2d_float
  * @description Library: mtlx. Category: fractal3d. Type: float
  *   LiteGraph id: mtlx/procedural2d/cellnoise2d_float
  */
function mtlx_procedural2d_cellnoise2d_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_cellnoise2d_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'cellnoise2d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/cellnoise2d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_cellnoise2d_float_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','float');
  this.title = 'cellnoise2d_float';
  this.desc = "MaterialX:mtlx/procedural2d/cellnoise2d_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_procedural2d_cellnoise2d_float.nodedef_name = 'ND_cellnoise2d_float';
mtlx_procedural2d_cellnoise2d_float.nodedef_node = 'cellnoise2d';
mtlx_procedural2d_cellnoise2d_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/cellnoise2d.html';
LiteGraph.registerNodeType('mtlx/procedural2d/cellnoise2d_float',mtlx_procedural2d_cellnoise2d_float);

/**
  * @function mtlx_procedural3d_cellnoise3d_float
  * @description Library: mtlx. Category: cellnoise2d. Type: float
  *   LiteGraph id: mtlx/procedural3d/cellnoise3d_float
  */
function mtlx_procedural3d_cellnoise3d_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_cellnoise3d_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'cellnoise3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/cellnoise3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_cellnoise3d_float_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addOutput('out','float');
  this.title = 'cellnoise3d_float';
  this.desc = "MaterialX:mtlx/procedural3d/cellnoise3d_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_procedural3d_cellnoise3d_float.nodedef_name = 'ND_cellnoise3d_float';
mtlx_procedural3d_cellnoise3d_float.nodedef_node = 'cellnoise3d';
mtlx_procedural3d_cellnoise3d_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/cellnoise3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/cellnoise3d_float',mtlx_procedural3d_cellnoise3d_float);

/**
  * @function mtlx_procedural2d_worleynoise2d_float
  * @description Library: mtlx. Category: cellnoise3d. Type: float
  *   LiteGraph id: mtlx/procedural2d/worleynoise2d_float
  */
function mtlx_procedural2d_worleynoise2d_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_worleynoise2d_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'worleynoise2d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/worleynoise2d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_worleynoise2d_float_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('jitter','float');
  this.addProperty('jitter', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'worleynoise2d_float';
  this.desc = "MaterialX:mtlx/procedural2d/worleynoise2d_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_procedural2d_worleynoise2d_float.nodedef_name = 'ND_worleynoise2d_float';
mtlx_procedural2d_worleynoise2d_float.nodedef_node = 'worleynoise2d';
mtlx_procedural2d_worleynoise2d_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/worleynoise2d.html';
LiteGraph.registerNodeType('mtlx/procedural2d/worleynoise2d_float',mtlx_procedural2d_worleynoise2d_float);

/**
  * @function mtlx_procedural2d_worleynoise2d_vector2
  * @description Library: mtlx. Category: worleynoise2d. Type: vector2
  *   LiteGraph id: mtlx/procedural2d/worleynoise2d_vector2
  */
function mtlx_procedural2d_worleynoise2d_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_worleynoise2d_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'worleynoise2d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/worleynoise2d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_worleynoise2d_vector2_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('jitter','float');
  this.addProperty('jitter', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'worleynoise2d_vector2';
  this.desc = "MaterialX:mtlx/procedural2d/worleynoise2d_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_procedural2d_worleynoise2d_vector2.nodedef_name = 'ND_worleynoise2d_vector2';
mtlx_procedural2d_worleynoise2d_vector2.nodedef_node = 'worleynoise2d';
mtlx_procedural2d_worleynoise2d_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/worleynoise2d.html';
LiteGraph.registerNodeType('mtlx/procedural2d/worleynoise2d_vector2',mtlx_procedural2d_worleynoise2d_vector2);

/**
  * @function mtlx_procedural2d_worleynoise2d_vector3
  * @description Library: mtlx. Category: worleynoise2d. Type: vector3
  *   LiteGraph id: mtlx/procedural2d/worleynoise2d_vector3
  */
function mtlx_procedural2d_worleynoise2d_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_worleynoise2d_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'worleynoise2d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/worleynoise2d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_worleynoise2d_vector3_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('jitter','float');
  this.addProperty('jitter', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'worleynoise2d_vector3';
  this.desc = "MaterialX:mtlx/procedural2d/worleynoise2d_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_procedural2d_worleynoise2d_vector3.nodedef_name = 'ND_worleynoise2d_vector3';
mtlx_procedural2d_worleynoise2d_vector3.nodedef_node = 'worleynoise2d';
mtlx_procedural2d_worleynoise2d_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/worleynoise2d.html';
LiteGraph.registerNodeType('mtlx/procedural2d/worleynoise2d_vector3',mtlx_procedural2d_worleynoise2d_vector3);

/**
  * @function mtlx_procedural3d_worleynoise3d_float
  * @description Library: mtlx. Category: worleynoise2d. Type: float
  *   LiteGraph id: mtlx/procedural3d/worleynoise3d_float
  */
function mtlx_procedural3d_worleynoise3d_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_worleynoise3d_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'worleynoise3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/worleynoise3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_worleynoise3d_float_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addInput('jitter','float');
  this.addProperty('jitter', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'worleynoise3d_float';
  this.desc = "MaterialX:mtlx/procedural3d/worleynoise3d_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_procedural3d_worleynoise3d_float.nodedef_name = 'ND_worleynoise3d_float';
mtlx_procedural3d_worleynoise3d_float.nodedef_node = 'worleynoise3d';
mtlx_procedural3d_worleynoise3d_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/worleynoise3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/worleynoise3d_float',mtlx_procedural3d_worleynoise3d_float);

/**
  * @function mtlx_procedural3d_worleynoise3d_vector2
  * @description Library: mtlx. Category: worleynoise3d. Type: vector2
  *   LiteGraph id: mtlx/procedural3d/worleynoise3d_vector2
  */
function mtlx_procedural3d_worleynoise3d_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_worleynoise3d_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'worleynoise3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/worleynoise3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_worleynoise3d_vector2_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addInput('jitter','float');
  this.addProperty('jitter', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'worleynoise3d_vector2';
  this.desc = "MaterialX:mtlx/procedural3d/worleynoise3d_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_procedural3d_worleynoise3d_vector2.nodedef_name = 'ND_worleynoise3d_vector2';
mtlx_procedural3d_worleynoise3d_vector2.nodedef_node = 'worleynoise3d';
mtlx_procedural3d_worleynoise3d_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/worleynoise3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/worleynoise3d_vector2',mtlx_procedural3d_worleynoise3d_vector2);

/**
  * @function mtlx_procedural3d_worleynoise3d_vector3
  * @description Library: mtlx. Category: worleynoise3d. Type: vector3
  *   LiteGraph id: mtlx/procedural3d/worleynoise3d_vector3
  */
function mtlx_procedural3d_worleynoise3d_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_worleynoise3d_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'worleynoise3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/worleynoise3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_worleynoise3d_vector3_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Pobject"});
  this.addInput('jitter','float');
  this.addProperty('jitter', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'worleynoise3d_vector3';
  this.desc = "MaterialX:mtlx/procedural3d/worleynoise3d_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_procedural3d_worleynoise3d_vector3.nodedef_name = 'ND_worleynoise3d_vector3';
mtlx_procedural3d_worleynoise3d_vector3.nodedef_node = 'worleynoise3d';
mtlx_procedural3d_worleynoise3d_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/worleynoise3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/worleynoise3d_vector3',mtlx_procedural3d_worleynoise3d_vector3);

/**
  * @function mtlx_procedural2d_unifiednoise2d_float
  * @description Library: mtlx. Category: worleynoise3d. Type: float
  *   LiteGraph id: mtlx/procedural2d/unifiednoise2d_float
  */
function mtlx_procedural2d_unifiednoise2d_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_unifiednoise2d_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'unifiednoise2d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/unifiednoise2d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_unifiednoise2d_float_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Common","defaultgeomprop":"UV0"});
  this.addInput('freq','vector2');
  this.addProperty('freq', [1, 1], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"Frequency","uimin":null,"uimax":null,"uifolder":"Common","defaultgeomprop":""});
  this.addInput('offset','vector2');
  this.addProperty('offset', [0, 0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"Offset","uimin":null,"uimax":null,"uifolder":"Common","defaultgeomprop":""});
  this.addInput('jitter','float');
  this.addProperty('jitter', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Jitter","uimin":"0.0","uimax":"1.0","uifolder":"Common","defaultgeomprop":""});
  this.addInput('outmin','float');
  this.addProperty('outmin', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Output Min","uimin":null,"uimax":null,"uifolder":"Post Process","defaultgeomprop":""});
  this.addInput('outmax','float');
  this.addProperty('outmax', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Output Max","uimin":null,"uimax":null,"uifolder":"Post Process","defaultgeomprop":""});
  this.addInput('clampoutput','boolean');
  this.addProperty('clampoutput', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"Clamp Output","uimin":null,"uimax":null,"uifolder":"Post Process","defaultgeomprop":""});
  this.addInput('octaves','integer');
  this.addProperty('octaves', 3, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Octaves","uimin":null,"uimax":null,"uifolder":"Fractal","defaultgeomprop":""});
  this.addInput('lacunarity','float');
  this.addProperty('lacunarity', 2, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Lacunarity","uimin":null,"uimax":null,"uifolder":"Fractal","defaultgeomprop":""});
  this.addInput('diminish','float');
  this.addProperty('diminish', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Diminish","uimin":"0.0","uimax":"1.0","uifolder":"Fractal","defaultgeomprop":""});
  this.addInput('type','integer');
  this.addProperty('type', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Noise Type","uimin":"0","uimax":"3","uifolder":"Common","defaultgeomprop":"","enum":["Perlin","Cell","Worley","Fractal"],"enumvalues":["0","1","2","3"]});
  this.addOutput('out','float');
  this.title = 'unifiednoise2d_float';
  this.desc = "MaterialX:mtlx/procedural2d/unifiednoise2d_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_procedural2d_unifiednoise2d_float.nodedef_name = 'ND_unifiednoise2d_float';
mtlx_procedural2d_unifiednoise2d_float.nodedef_node = 'unifiednoise2d';
mtlx_procedural2d_unifiednoise2d_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/unifiednoise2d.html';
LiteGraph.registerNodeType('mtlx/procedural2d/unifiednoise2d_float',mtlx_procedural2d_unifiednoise2d_float);

/**
  * @function mtlx_procedural3d_unifiednoise3d_float
  * @description Library: mtlx. Category: unifiednoise2d. Type: float
  *   LiteGraph id: mtlx/procedural3d/unifiednoise3d_float
  */
function mtlx_procedural3d_unifiednoise3d_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_unifiednoise3d_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'unifiednoise3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/unifiednoise3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_unifiednoise3d_float_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Common","defaultgeomprop":"Pobject"});
  this.addInput('freq','vector3');
  this.addProperty('freq', [1, 1, 1], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Frequency","uimin":null,"uimax":null,"uifolder":"Common","defaultgeomprop":""});
  this.addInput('offset','vector3');
  this.addProperty('offset', [0, 0, 0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Offset","uimin":null,"uimax":null,"uifolder":"Common","defaultgeomprop":""});
  this.addInput('jitter','float');
  this.addProperty('jitter', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Jitter","uimin":"0.0","uimax":"1.0","uifolder":"Common","defaultgeomprop":""});
  this.addInput('outmin','float');
  this.addProperty('outmin', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Output Min","uimin":null,"uimax":null,"uifolder":"Post Process","defaultgeomprop":""});
  this.addInput('outmax','float');
  this.addProperty('outmax', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Output Max","uimin":null,"uimax":null,"uifolder":"Post Process","defaultgeomprop":""});
  this.addInput('clampoutput','boolean');
  this.addProperty('clampoutput', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"Clamp Output","uimin":null,"uimax":null,"uifolder":"Post Process","defaultgeomprop":""});
  this.addInput('octaves','integer');
  this.addProperty('octaves', 3, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Octaves","uimin":null,"uimax":null,"uifolder":"Fractal","defaultgeomprop":""});
  this.addInput('lacunarity','float');
  this.addProperty('lacunarity', 2, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Lacunarity","uimin":null,"uimax":null,"uifolder":"Fractal","defaultgeomprop":""});
  this.addInput('diminish','float');
  this.addProperty('diminish', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Diminish","uimin":"0.0","uimax":"1.0","uifolder":"Fractal","defaultgeomprop":""});
  this.addInput('type','integer');
  this.addProperty('type', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Noise Type","uimin":"0","uimax":"3","uifolder":"Common","defaultgeomprop":"","enum":["Perlin","Cell","Worley","Fractal"],"enumvalues":["0","1","2","3"]});
  this.addOutput('out','float');
  this.title = 'unifiednoise3d_float';
  this.desc = "MaterialX:mtlx/procedural3d/unifiednoise3d_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_procedural3d_unifiednoise3d_float.nodedef_name = 'ND_unifiednoise3d_float';
mtlx_procedural3d_unifiednoise3d_float.nodedef_node = 'unifiednoise3d';
mtlx_procedural3d_unifiednoise3d_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/unifiednoise3d.html';
LiteGraph.registerNodeType('mtlx/procedural3d/unifiednoise3d_float',mtlx_procedural3d_unifiednoise3d_float);

/**
  * @function mtlx_procedural_randomfloat_float
  * @description Library: mtlx. Category: unifiednoise3d. Type: float
  *   LiteGraph id: mtlx/procedural/randomfloat_float
  */
function mtlx_procedural_randomfloat_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_randomfloat_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'randomfloat';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/randomfloat.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_randomfloat_float_out_genglsl.png';
  this.nodedef_group = 'procedural';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Input","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('min','float');
  this.addProperty('min', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Minimum","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('max','float');
  this.addProperty('max', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Maximum","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('seed','integer');
  this.addProperty('seed', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Seed","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'randomfloat_float';
  this.desc = "MaterialX:mtlx/procedural/randomfloat_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_procedural_randomfloat_float.nodedef_name = 'ND_randomfloat_float';
mtlx_procedural_randomfloat_float.nodedef_node = 'randomfloat';
mtlx_procedural_randomfloat_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/randomfloat.html';
LiteGraph.registerNodeType('mtlx/procedural/randomfloat_float',mtlx_procedural_randomfloat_float);

/**
  * @function mtlx_procedural_randomfloat_integer
  * @description Library: mtlx. Category: randomfloat. Type: float
  *   LiteGraph id: mtlx/procedural/randomfloat_integer
  */
function mtlx_procedural_randomfloat_integer() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_randomfloat_integer';
  this.nodedef_type = 'float';
  this.nodedef_node = 'randomfloat';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/randomfloat.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_randomfloat_integer_out_genglsl.png';
  this.nodedef_group = 'procedural';
  this.addInput('in','integer');
  this.addProperty('in', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Input","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('min','float');
  this.addProperty('min', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Minimum","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('max','float');
  this.addProperty('max', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Maximum","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('seed','integer');
  this.addProperty('seed', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Seed","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'randomfloat_float';
  this.desc = "MaterialX:mtlx/procedural/randomfloat_integer";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_procedural_randomfloat_integer.nodedef_name = 'ND_randomfloat_integer';
mtlx_procedural_randomfloat_integer.nodedef_node = 'randomfloat';
mtlx_procedural_randomfloat_integer.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/randomfloat.html';
LiteGraph.registerNodeType('mtlx/procedural/randomfloat_integer',mtlx_procedural_randomfloat_integer);

/**
  * @function mtlx_procedural3d_randomcolor_float
  * @description Library: mtlx. Category: randomfloat. Type: color3
  *   LiteGraph id: mtlx/procedural3d/randomcolor_float
  */
function mtlx_procedural3d_randomcolor_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_randomcolor_float';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'randomcolor';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/randomcolor.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_randomcolor_float_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Input","uimin":"0.0","uimax":"10.0","uifolder":"","defaultgeomprop":""});
  this.addInput('huelow','float');
  this.addProperty('huelow', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Hue Low","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('huehigh','float');
  this.addProperty('huehigh', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Hue High","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('saturationlow','float');
  this.addProperty('saturationlow', 0.825, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Saturation Low","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('saturationhigh','float');
  this.addProperty('saturationhigh', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Saturation High","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('brightnesslow','float');
  this.addProperty('brightnesslow', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Brightness Low","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('brightnesshigh','float');
  this.addProperty('brightnesshigh', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Brightness High","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('seed','integer');
  this.addProperty('seed', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Seed","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'randomcolor_color3';
  this.desc = "MaterialX:mtlx/procedural3d/randomcolor_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_procedural3d_randomcolor_float.nodedef_name = 'ND_randomcolor_float';
mtlx_procedural3d_randomcolor_float.nodedef_node = 'randomcolor';
mtlx_procedural3d_randomcolor_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/randomcolor.html';
LiteGraph.registerNodeType('mtlx/procedural3d/randomcolor_float',mtlx_procedural3d_randomcolor_float);

/**
  * @function mtlx_procedural3d_randomcolor_integer
  * @description Library: mtlx. Category: randomcolor. Type: color3
  *   LiteGraph id: mtlx/procedural3d/randomcolor_integer
  */
function mtlx_procedural3d_randomcolor_integer() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_randomcolor_integer';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'randomcolor';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/randomcolor.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_randomcolor_integer_out_genglsl.png';
  this.nodedef_group = 'procedural3d';
  this.addInput('in','integer');
  this.addProperty('in', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Input","uimin":"0","uimax":"10","uifolder":"","defaultgeomprop":""});
  this.addInput('huelow','float');
  this.addProperty('huelow', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Hue Low","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('huehigh','float');
  this.addProperty('huehigh', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Hue High","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('saturationlow','float');
  this.addProperty('saturationlow', 0.825, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Saturation Low","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('saturationhigh','float');
  this.addProperty('saturationhigh', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Saturation High","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('brightnesslow','float');
  this.addProperty('brightnesslow', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Brightness Low","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('brightnesshigh','float');
  this.addProperty('brightnesshigh', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Brightness High","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('seed','integer');
  this.addProperty('seed', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Seed","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'randomcolor_color3';
  this.desc = "MaterialX:mtlx/procedural3d/randomcolor_integer";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_procedural3d_randomcolor_integer.nodedef_name = 'ND_randomcolor_integer';
mtlx_procedural3d_randomcolor_integer.nodedef_node = 'randomcolor';
mtlx_procedural3d_randomcolor_integer.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/randomcolor.html';
LiteGraph.registerNodeType('mtlx/procedural3d/randomcolor_integer',mtlx_procedural3d_randomcolor_integer);

/**
  * @function mtlx_procedural2d_checkerboard_color3
  * @description Library: mtlx. Category: randomcolor. Type: color3
  *   LiteGraph id: mtlx/procedural2d/checkerboard_color3
  */
function mtlx_procedural2d_checkerboard_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_checkerboard_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'checkerboard';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/checkerboard.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_checkerboard_color3_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('color1','color3');
  this.addProperty('color1', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Color 1","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('color2','color3');
  this.addProperty('color2', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Color 2","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('uvtiling','vector2');
  this.addProperty('uvtiling', [8, 8], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"UV Tiling","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('uvoffset','vector2');
  this.addProperty('uvoffset', [0, 0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"UV Offset","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"Texture Coordinates","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addOutput('out','color3');
  this.title = 'checkerboard_color3';
  this.desc = "MaterialX:mtlx/procedural2d/checkerboard_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_procedural2d_checkerboard_color3.nodedef_name = 'ND_checkerboard_color3';
mtlx_procedural2d_checkerboard_color3.nodedef_node = 'checkerboard';
mtlx_procedural2d_checkerboard_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/checkerboard.html';
LiteGraph.registerNodeType('mtlx/procedural2d/checkerboard_color3',mtlx_procedural2d_checkerboard_color3);

/**
  * @function mtlx_procedural2d_line_float
  * @description Library: mtlx. Category: checkerboard. Type: float
  *   LiteGraph id: mtlx/procedural2d/line_float
  */
function mtlx_procedural2d_line_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_line_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'line';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/line.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_line_float_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('center','vector2');
  this.addProperty('center', [0, 0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('radius','float');
  this.addProperty('radius', 0.1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('point1','vector2');
  this.addProperty('point1', [0.25, 0.25], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('point2','vector2');
  this.addProperty('point2', [0.75, 0.75], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'line_float';
  this.desc = "MaterialX:mtlx/procedural2d/line_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_procedural2d_line_float.nodedef_name = 'ND_line_float';
mtlx_procedural2d_line_float.nodedef_node = 'line';
mtlx_procedural2d_line_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/line.html';
LiteGraph.registerNodeType('mtlx/procedural2d/line_float',mtlx_procedural2d_line_float);

/**
  * @function mtlx_procedural2d_circle_float
  * @description Library: mtlx. Category: line. Type: float
  *   LiteGraph id: mtlx/procedural2d/circle_float
  */
function mtlx_procedural2d_circle_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_circle_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'circle';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/circle.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_circle_float_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('center','vector2');
  this.addProperty('center', [0, 0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('radius','float');
  this.addProperty('radius', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'circle_float';
  this.desc = "MaterialX:mtlx/procedural2d/circle_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_procedural2d_circle_float.nodedef_name = 'ND_circle_float';
mtlx_procedural2d_circle_float.nodedef_node = 'circle';
mtlx_procedural2d_circle_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/circle.html';
LiteGraph.registerNodeType('mtlx/procedural2d/circle_float',mtlx_procedural2d_circle_float);

/**
  * @function mtlx_procedural2d_cloverleaf_float
  * @description Library: mtlx. Category: circle. Type: float
  *   LiteGraph id: mtlx/procedural2d/cloverleaf_float
  */
function mtlx_procedural2d_cloverleaf_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_cloverleaf_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'cloverleaf';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/cloverleaf.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_cloverleaf_float_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('center','vector2');
  this.addProperty('center', [0, 0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('radius','float');
  this.addProperty('radius', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'cloverleaf_float';
  this.desc = "MaterialX:mtlx/procedural2d/cloverleaf_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_procedural2d_cloverleaf_float.nodedef_name = 'ND_cloverleaf_float';
mtlx_procedural2d_cloverleaf_float.nodedef_node = 'cloverleaf';
mtlx_procedural2d_cloverleaf_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/cloverleaf.html';
LiteGraph.registerNodeType('mtlx/procedural2d/cloverleaf_float',mtlx_procedural2d_cloverleaf_float);

/**
  * @function mtlx_procedural2d_hexagon_float
  * @description Library: mtlx. Category: cloverleaf. Type: float
  *   LiteGraph id: mtlx/procedural2d/hexagon_float
  */
function mtlx_procedural2d_hexagon_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_hexagon_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'hexagon';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/hexagon.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_hexagon_float_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('center','vector2');
  this.addProperty('center', [0, 0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('radius','float');
  this.addProperty('radius', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'hexagon_float';
  this.desc = "MaterialX:mtlx/procedural2d/hexagon_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_procedural2d_hexagon_float.nodedef_name = 'ND_hexagon_float';
mtlx_procedural2d_hexagon_float.nodedef_node = 'hexagon';
mtlx_procedural2d_hexagon_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/hexagon.html';
LiteGraph.registerNodeType('mtlx/procedural2d/hexagon_float',mtlx_procedural2d_hexagon_float);

/**
  * @function mtlx_procedural2d_grid_color3
  * @description Library: mtlx. Category: hexagon. Type: color3
  *   LiteGraph id: mtlx/procedural2d/grid_color3
  */
function mtlx_procedural2d_grid_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_grid_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'grid';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/grid.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_grid_color3_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('uvtiling','vector2');
  this.addProperty('uvtiling', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('uvoffset','vector2');
  this.addProperty('uvoffset', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('thickness','float');
  this.addProperty('thickness', 0.05, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('staggered','boolean');
  this.addProperty('staggered', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'grid_color3';
  this.desc = "MaterialX:mtlx/procedural2d/grid_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_procedural2d_grid_color3.nodedef_name = 'ND_grid_color3';
mtlx_procedural2d_grid_color3.nodedef_node = 'grid';
mtlx_procedural2d_grid_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/grid.html';
LiteGraph.registerNodeType('mtlx/procedural2d/grid_color3',mtlx_procedural2d_grid_color3);

/**
  * @function mtlx_procedural2d_crosshatch_color3
  * @description Library: mtlx. Category: grid. Type: color3
  *   LiteGraph id: mtlx/procedural2d/crosshatch_color3
  */
function mtlx_procedural2d_crosshatch_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_crosshatch_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'crosshatch';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/crosshatch.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_crosshatch_color3_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('uvtiling','vector2');
  this.addProperty('uvtiling', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('uvoffset','vector2');
  this.addProperty('uvoffset', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('thickness','float');
  this.addProperty('thickness', 0.05, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('staggered','boolean');
  this.addProperty('staggered', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'crosshatch_color3';
  this.desc = "MaterialX:mtlx/procedural2d/crosshatch_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_procedural2d_crosshatch_color3.nodedef_name = 'ND_crosshatch_color3';
mtlx_procedural2d_crosshatch_color3.nodedef_node = 'crosshatch';
mtlx_procedural2d_crosshatch_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/crosshatch.html';
LiteGraph.registerNodeType('mtlx/procedural2d/crosshatch_color3',mtlx_procedural2d_crosshatch_color3);

/**
  * @function mtlx_procedural2d_tiledcircles_color3
  * @description Library: mtlx. Category: crosshatch. Type: color3
  *   LiteGraph id: mtlx/procedural2d/tiledcircles_color3
  */
function mtlx_procedural2d_tiledcircles_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_tiledcircles_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'tiledcircles';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tiledcircles.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_tiledcircles_color3_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('uvtiling','vector2');
  this.addProperty('uvtiling', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('uvoffset','vector2');
  this.addProperty('uvoffset', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('size','float');
  this.addProperty('size', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('staggered','boolean');
  this.addProperty('staggered', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'tiledcircles_color3';
  this.desc = "MaterialX:mtlx/procedural2d/tiledcircles_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_procedural2d_tiledcircles_color3.nodedef_name = 'ND_tiledcircles_color3';
mtlx_procedural2d_tiledcircles_color3.nodedef_node = 'tiledcircles';
mtlx_procedural2d_tiledcircles_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tiledcircles.html';
LiteGraph.registerNodeType('mtlx/procedural2d/tiledcircles_color3',mtlx_procedural2d_tiledcircles_color3);

/**
  * @function mtlx_procedural2d_tiledcloverleafs_color3
  * @description Library: mtlx. Category: tiledcircles. Type: color3
  *   LiteGraph id: mtlx/procedural2d/tiledcloverleafs_color3
  */
function mtlx_procedural2d_tiledcloverleafs_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_tiledcloverleafs_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'tiledcloverleafs';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tiledcloverleafs.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_tiledcloverleafs_color3_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('uvtiling','vector2');
  this.addProperty('uvtiling', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('uvoffset','vector2');
  this.addProperty('uvoffset', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('size','float');
  this.addProperty('size', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('staggered','boolean');
  this.addProperty('staggered', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'tiledcloverleafs_color3';
  this.desc = "MaterialX:mtlx/procedural2d/tiledcloverleafs_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_procedural2d_tiledcloverleafs_color3.nodedef_name = 'ND_tiledcloverleafs_color3';
mtlx_procedural2d_tiledcloverleafs_color3.nodedef_node = 'tiledcloverleafs';
mtlx_procedural2d_tiledcloverleafs_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tiledcloverleafs.html';
LiteGraph.registerNodeType('mtlx/procedural2d/tiledcloverleafs_color3',mtlx_procedural2d_tiledcloverleafs_color3);

/**
  * @function mtlx_procedural2d_tiledhexagons_color3
  * @description Library: mtlx. Category: tiledcloverleafs. Type: color3
  *   LiteGraph id: mtlx/procedural2d/tiledhexagons_color3
  */
function mtlx_procedural2d_tiledhexagons_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_tiledhexagons_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'tiledhexagons';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tiledhexagons.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_tiledhexagons_color3_out_genglsl.png';
  this.nodedef_group = 'procedural2d';
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('uvtiling','vector2');
  this.addProperty('uvtiling', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('uvoffset','vector2');
  this.addProperty('uvoffset', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('size','float');
  this.addProperty('size', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('staggered','boolean');
  this.addProperty('staggered', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'tiledhexagons_color3';
  this.desc = "MaterialX:mtlx/procedural2d/tiledhexagons_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_procedural2d_tiledhexagons_color3.nodedef_name = 'ND_tiledhexagons_color3';
mtlx_procedural2d_tiledhexagons_color3.nodedef_node = 'tiledhexagons';
mtlx_procedural2d_tiledhexagons_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tiledhexagons.html';
LiteGraph.registerNodeType('mtlx/procedural2d/tiledhexagons_color3',mtlx_procedural2d_tiledhexagons_color3);

/**
  * @function mtlx_geometric_position_vector3
  * @description Library: mtlx. Category: tiledhexagons. Type: vector3
  *   LiteGraph id: mtlx/geometric/position_vector3
  */
function mtlx_geometric_position_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_position_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'position';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/position.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_position_vector3_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('space','string');
  this.addProperty('space', 'object', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["model","object","world"]});
  this.addOutput('out','vector3');
  this.title = 'position_vector3';
  this.desc = "MaterialX:mtlx/geometric/position_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_geometric_position_vector3.nodedef_name = 'ND_position_vector3';
mtlx_geometric_position_vector3.nodedef_node = 'position';
mtlx_geometric_position_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/position.html';
LiteGraph.registerNodeType('mtlx/geometric/position_vector3',mtlx_geometric_position_vector3);

/**
  * @function mtlx_geometric_normal_vector3
  * @description Library: mtlx. Category: position. Type: vector3
  *   LiteGraph id: mtlx/geometric/normal_vector3
  */
function mtlx_geometric_normal_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_normal_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'normal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/normal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_normal_vector3_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('space','string');
  this.addProperty('space', 'object', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["model","object","world"]});
  this.addOutput('out','vector3');
  this.title = 'normal_vector3';
  this.desc = "MaterialX:mtlx/geometric/normal_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_geometric_normal_vector3.nodedef_name = 'ND_normal_vector3';
mtlx_geometric_normal_vector3.nodedef_node = 'normal';
mtlx_geometric_normal_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/normal.html';
LiteGraph.registerNodeType('mtlx/geometric/normal_vector3',mtlx_geometric_normal_vector3);

/**
  * @function mtlx_geometric_tangent_vector3
  * @description Library: mtlx. Category: normal. Type: vector3
  *   LiteGraph id: mtlx/geometric/tangent_vector3
  */
function mtlx_geometric_tangent_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_tangent_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'tangent';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tangent.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_tangent_vector3_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('space','string');
  this.addProperty('space', 'object', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["model","object","world"]});
  this.addInput('index','integer');
  this.addProperty('index', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'tangent_vector3';
  this.desc = "MaterialX:mtlx/geometric/tangent_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_geometric_tangent_vector3.nodedef_name = 'ND_tangent_vector3';
mtlx_geometric_tangent_vector3.nodedef_node = 'tangent';
mtlx_geometric_tangent_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tangent.html';
LiteGraph.registerNodeType('mtlx/geometric/tangent_vector3',mtlx_geometric_tangent_vector3);

/**
  * @function mtlx_geometric_bitangent_vector3
  * @description Library: mtlx. Category: tangent. Type: vector3
  *   LiteGraph id: mtlx/geometric/bitangent_vector3
  */
function mtlx_geometric_bitangent_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_bitangent_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'bitangent';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/bitangent.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_bitangent_vector3_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('space','string');
  this.addProperty('space', 'object', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["model","object","world"]});
  this.addInput('index','integer');
  this.addProperty('index', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'bitangent_vector3';
  this.desc = "MaterialX:mtlx/geometric/bitangent_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_geometric_bitangent_vector3.nodedef_name = 'ND_bitangent_vector3';
mtlx_geometric_bitangent_vector3.nodedef_node = 'bitangent';
mtlx_geometric_bitangent_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/bitangent.html';
LiteGraph.registerNodeType('mtlx/geometric/bitangent_vector3',mtlx_geometric_bitangent_vector3);

/**
  * @function mtlx_geometric_texcoord_vector2
  * @description Library: mtlx. Category: bitangent. Type: vector2
  *   LiteGraph id: mtlx/geometric/texcoord_vector2
  */
function mtlx_geometric_texcoord_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_texcoord_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'texcoord';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/texcoord.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_texcoord_vector2_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('index','integer');
  this.addProperty('index', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'texcoord_vector2';
  this.desc = "MaterialX:mtlx/geometric/texcoord_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_geometric_texcoord_vector2.nodedef_name = 'ND_texcoord_vector2';
mtlx_geometric_texcoord_vector2.nodedef_node = 'texcoord';
mtlx_geometric_texcoord_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/texcoord.html';
LiteGraph.registerNodeType('mtlx/geometric/texcoord_vector2',mtlx_geometric_texcoord_vector2);

/**
  * @function mtlx_geometric_texcoord_vector3
  * @description Library: mtlx. Category: texcoord. Type: vector3
  *   LiteGraph id: mtlx/geometric/texcoord_vector3
  */
function mtlx_geometric_texcoord_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_texcoord_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'texcoord';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/texcoord.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_texcoord_vector3_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('index','integer');
  this.addProperty('index', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'texcoord_vector3';
  this.desc = "MaterialX:mtlx/geometric/texcoord_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_geometric_texcoord_vector3.nodedef_name = 'ND_texcoord_vector3';
mtlx_geometric_texcoord_vector3.nodedef_node = 'texcoord';
mtlx_geometric_texcoord_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/texcoord.html';
LiteGraph.registerNodeType('mtlx/geometric/texcoord_vector3',mtlx_geometric_texcoord_vector3);

/**
  * @function mtlx_geometric_geomcolor_float
  * @description Library: mtlx. Category: texcoord. Type: float
  *   LiteGraph id: mtlx/geometric/geomcolor_float
  */
function mtlx_geometric_geomcolor_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_geomcolor_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'geomcolor';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geomcolor.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_geomcolor_float_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('index','integer');
  this.addProperty('index', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'geomcolor_float';
  this.desc = "MaterialX:mtlx/geometric/geomcolor_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_geometric_geomcolor_float.nodedef_name = 'ND_geomcolor_float';
mtlx_geometric_geomcolor_float.nodedef_node = 'geomcolor';
mtlx_geometric_geomcolor_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geomcolor.html';
LiteGraph.registerNodeType('mtlx/geometric/geomcolor_float',mtlx_geometric_geomcolor_float);

/**
  * @function mtlx_geometric_geomcolor_color3
  * @description Library: mtlx. Category: geomcolor. Type: color3
  *   LiteGraph id: mtlx/geometric/geomcolor_color3
  */
function mtlx_geometric_geomcolor_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_geomcolor_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'geomcolor';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geomcolor.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_geomcolor_color3_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('index','integer');
  this.addProperty('index', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'geomcolor_color3';
  this.desc = "MaterialX:mtlx/geometric/geomcolor_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_geometric_geomcolor_color3.nodedef_name = 'ND_geomcolor_color3';
mtlx_geometric_geomcolor_color3.nodedef_node = 'geomcolor';
mtlx_geometric_geomcolor_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geomcolor.html';
LiteGraph.registerNodeType('mtlx/geometric/geomcolor_color3',mtlx_geometric_geomcolor_color3);

/**
  * @function mtlx_geometric_geomcolor_color4
  * @description Library: mtlx. Category: geomcolor. Type: color4
  *   LiteGraph id: mtlx/geometric/geomcolor_color4
  */
function mtlx_geometric_geomcolor_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_geomcolor_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'geomcolor';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geomcolor.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_geomcolor_color4_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('index','integer');
  this.addProperty('index', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'geomcolor_color4';
  this.desc = "MaterialX:mtlx/geometric/geomcolor_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_geometric_geomcolor_color4.nodedef_name = 'ND_geomcolor_color4';
mtlx_geometric_geomcolor_color4.nodedef_node = 'geomcolor';
mtlx_geometric_geomcolor_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geomcolor.html';
LiteGraph.registerNodeType('mtlx/geometric/geomcolor_color4',mtlx_geometric_geomcolor_color4);

/**
  * @function mtlx_geometric_geompropvalue_integer
  * @description Library: mtlx. Category: geomcolor. Type: integer
  *   LiteGraph id: mtlx/geometric/geompropvalue_integer
  */
function mtlx_geometric_geompropvalue_integer() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_geompropvalue_integer';
  this.nodedef_type = 'integer';
  this.nodedef_node = 'geompropvalue';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geompropvalue.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_geompropvalue_integer_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('geomprop','string');
  this.addProperty('geomprop', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','integer');
  this.addProperty('default', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','integer');
  this.title = 'geompropvalue_integer';
  this.desc = "MaterialX:mtlx/geometric/geompropvalue_integer";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#A32';
}
mtlx_geometric_geompropvalue_integer.nodedef_name = 'ND_geompropvalue_integer';
mtlx_geometric_geompropvalue_integer.nodedef_node = 'geompropvalue';
mtlx_geometric_geompropvalue_integer.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geompropvalue.html';
LiteGraph.registerNodeType('mtlx/geometric/geompropvalue_integer',mtlx_geometric_geompropvalue_integer);

/**
  * @function mtlx_geometric_geompropvalue_boolean
  * @description Library: mtlx. Category: geompropvalue. Type: boolean
  *   LiteGraph id: mtlx/geometric/geompropvalue_boolean
  */
function mtlx_geometric_geompropvalue_boolean() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_geompropvalue_boolean';
  this.nodedef_type = 'boolean';
  this.nodedef_node = 'geompropvalue';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geompropvalue.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_geompropvalue_boolean_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('geomprop','string');
  this.addProperty('geomprop', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','boolean');
  this.addProperty('default', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','boolean');
  this.title = 'geompropvalue_boolean';
  this.desc = "MaterialX:mtlx/geometric/geompropvalue_boolean";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#060';
}
mtlx_geometric_geompropvalue_boolean.nodedef_name = 'ND_geompropvalue_boolean';
mtlx_geometric_geompropvalue_boolean.nodedef_node = 'geompropvalue';
mtlx_geometric_geompropvalue_boolean.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geompropvalue.html';
LiteGraph.registerNodeType('mtlx/geometric/geompropvalue_boolean',mtlx_geometric_geompropvalue_boolean);

/**
  * @function mtlx_geometric_geompropvalue_string
  * @description Library: mtlx. Category: geompropvalue. Type: string
  *   LiteGraph id: mtlx/geometric/geompropvalue_string
  */
function mtlx_geometric_geompropvalue_string() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_geompropvalue_string';
  this.nodedef_type = 'string';
  this.nodedef_node = 'geompropvalue';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geompropvalue.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_geompropvalue_string_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('geomprop','string');
  this.addProperty('geomprop', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','string');
  this.addProperty('default', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','string');
  this.title = 'geompropvalue_string';
  this.desc = "MaterialX:mtlx/geometric/geompropvalue_string";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#395';
}
mtlx_geometric_geompropvalue_string.nodedef_name = 'ND_geompropvalue_string';
mtlx_geometric_geompropvalue_string.nodedef_node = 'geompropvalue';
mtlx_geometric_geompropvalue_string.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geompropvalue.html';
LiteGraph.registerNodeType('mtlx/geometric/geompropvalue_string',mtlx_geometric_geompropvalue_string);

/**
  * @function mtlx_geometric_geompropvalue_float
  * @description Library: mtlx. Category: geompropvalue. Type: float
  *   LiteGraph id: mtlx/geometric/geompropvalue_float
  */
function mtlx_geometric_geompropvalue_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_geompropvalue_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'geompropvalue';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geompropvalue.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_geompropvalue_float_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('geomprop','string');
  this.addProperty('geomprop', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','float');
  this.addProperty('default', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'geompropvalue_float';
  this.desc = "MaterialX:mtlx/geometric/geompropvalue_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_geometric_geompropvalue_float.nodedef_name = 'ND_geompropvalue_float';
mtlx_geometric_geompropvalue_float.nodedef_node = 'geompropvalue';
mtlx_geometric_geompropvalue_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geompropvalue.html';
LiteGraph.registerNodeType('mtlx/geometric/geompropvalue_float',mtlx_geometric_geompropvalue_float);

/**
  * @function mtlx_geometric_geompropvalue_color3
  * @description Library: mtlx. Category: geompropvalue. Type: color3
  *   LiteGraph id: mtlx/geometric/geompropvalue_color3
  */
function mtlx_geometric_geompropvalue_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_geompropvalue_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'geompropvalue';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geompropvalue.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_geompropvalue_color3_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('geomprop','string');
  this.addProperty('geomprop', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','color3');
  this.addProperty('default', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'geompropvalue_color3';
  this.desc = "MaterialX:mtlx/geometric/geompropvalue_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_geometric_geompropvalue_color3.nodedef_name = 'ND_geompropvalue_color3';
mtlx_geometric_geompropvalue_color3.nodedef_node = 'geompropvalue';
mtlx_geometric_geompropvalue_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geompropvalue.html';
LiteGraph.registerNodeType('mtlx/geometric/geompropvalue_color3',mtlx_geometric_geompropvalue_color3);

/**
  * @function mtlx_geometric_geompropvalue_color4
  * @description Library: mtlx. Category: geompropvalue. Type: color4
  *   LiteGraph id: mtlx/geometric/geompropvalue_color4
  */
function mtlx_geometric_geompropvalue_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_geompropvalue_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'geompropvalue';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geompropvalue.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_geompropvalue_color4_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('geomprop','string');
  this.addProperty('geomprop', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','color4');
  this.addProperty('default', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'geompropvalue_color4';
  this.desc = "MaterialX:mtlx/geometric/geompropvalue_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_geometric_geompropvalue_color4.nodedef_name = 'ND_geompropvalue_color4';
mtlx_geometric_geompropvalue_color4.nodedef_node = 'geompropvalue';
mtlx_geometric_geompropvalue_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geompropvalue.html';
LiteGraph.registerNodeType('mtlx/geometric/geompropvalue_color4',mtlx_geometric_geompropvalue_color4);

/**
  * @function mtlx_geometric_geompropvalue_vector2
  * @description Library: mtlx. Category: geompropvalue. Type: vector2
  *   LiteGraph id: mtlx/geometric/geompropvalue_vector2
  */
function mtlx_geometric_geompropvalue_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_geompropvalue_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'geompropvalue';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geompropvalue.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_geompropvalue_vector2_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('geomprop','string');
  this.addProperty('geomprop', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','vector2');
  this.addProperty('default', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'geompropvalue_vector2';
  this.desc = "MaterialX:mtlx/geometric/geompropvalue_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_geometric_geompropvalue_vector2.nodedef_name = 'ND_geompropvalue_vector2';
mtlx_geometric_geompropvalue_vector2.nodedef_node = 'geompropvalue';
mtlx_geometric_geompropvalue_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geompropvalue.html';
LiteGraph.registerNodeType('mtlx/geometric/geompropvalue_vector2',mtlx_geometric_geompropvalue_vector2);

/**
  * @function mtlx_geometric_geompropvalue_vector3
  * @description Library: mtlx. Category: geompropvalue. Type: vector3
  *   LiteGraph id: mtlx/geometric/geompropvalue_vector3
  */
function mtlx_geometric_geompropvalue_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_geompropvalue_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'geompropvalue';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geompropvalue.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_geompropvalue_vector3_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('geomprop','string');
  this.addProperty('geomprop', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','vector3');
  this.addProperty('default', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'geompropvalue_vector3';
  this.desc = "MaterialX:mtlx/geometric/geompropvalue_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_geometric_geompropvalue_vector3.nodedef_name = 'ND_geompropvalue_vector3';
mtlx_geometric_geompropvalue_vector3.nodedef_node = 'geompropvalue';
mtlx_geometric_geompropvalue_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geompropvalue.html';
LiteGraph.registerNodeType('mtlx/geometric/geompropvalue_vector3',mtlx_geometric_geompropvalue_vector3);

/**
  * @function mtlx_geometric_geompropvalue_vector4
  * @description Library: mtlx. Category: geompropvalue. Type: vector4
  *   LiteGraph id: mtlx/geometric/geompropvalue_vector4
  */
function mtlx_geometric_geompropvalue_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_geompropvalue_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'geompropvalue';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geompropvalue.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_geompropvalue_vector4_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('geomprop','string');
  this.addProperty('geomprop', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','vector4');
  this.addProperty('default', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'geompropvalue_vector4';
  this.desc = "MaterialX:mtlx/geometric/geompropvalue_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_geometric_geompropvalue_vector4.nodedef_name = 'ND_geompropvalue_vector4';
mtlx_geometric_geompropvalue_vector4.nodedef_node = 'geompropvalue';
mtlx_geometric_geompropvalue_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/geompropvalue.html';
LiteGraph.registerNodeType('mtlx/geometric/geompropvalue_vector4',mtlx_geometric_geompropvalue_vector4);

/**
  * @function mtlx_geometric_bump_vector3
  * @description Library: mtlx. Category: geompropvalue. Type: vector3
  *   LiteGraph id: mtlx/geometric/bump_vector3
  */
function mtlx_geometric_bump_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_bump_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'bump';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/bump.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_bump_vector3_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('height','float');
  this.addProperty('height', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Height","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('scale','float');
  this.addProperty('scale', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Scale","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Normal","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nworld"});
  this.addInput('tangent','vector3');
  this.addProperty('tangent', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Tangent","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Tworld"});
  this.addOutput('out','vector3');
  this.title = 'bump_vector3';
  this.desc = "MaterialX:mtlx/geometric/bump_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_geometric_bump_vector3.nodedef_name = 'ND_bump_vector3';
mtlx_geometric_bump_vector3.nodedef_node = 'bump';
mtlx_geometric_bump_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/bump.html';
LiteGraph.registerNodeType('mtlx/geometric/bump_vector3',mtlx_geometric_bump_vector3);

/**
  * @function mtlx_global_ambientocclusion_float
  * @description Library: mtlx. Category: bump. Type: float
  *   LiteGraph id: mtlx/global/ambientocclusion_float
  */
function mtlx_global_ambientocclusion_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ambientocclusion_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'ambientocclusion';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ambientocclusion.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ambientocclusion_float_out_genglsl.png';
  this.nodedef_group = 'global';
  this.addInput('coneangle','float');
  this.addProperty('coneangle', 90.0, 'float',{"colorspace":"","unit":"degree","unittype":"angle","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('maxdistance','float');
  this.addProperty('maxdistance', 1e38, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'ambientocclusion_float';
  this.desc = "MaterialX:mtlx/global/ambientocclusion_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_global_ambientocclusion_float.nodedef_name = 'ND_ambientocclusion_float';
mtlx_global_ambientocclusion_float.nodedef_node = 'ambientocclusion';
mtlx_global_ambientocclusion_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ambientocclusion.html';
LiteGraph.registerNodeType('mtlx/global/ambientocclusion_float',mtlx_global_ambientocclusion_float);

/**
  * @function mtlx_application_frame_float
  * @description Library: mtlx. Category: ambientocclusion. Type: float
  *   LiteGraph id: mtlx/application/frame_float
  */
function mtlx_application_frame_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_frame_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'frame';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/frame.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_frame_float_out_genglsl.png';
  this.nodedef_group = 'application';
  this.addOutput('out','float');
  this.title = 'frame_float';
  this.desc = "MaterialX:mtlx/application/frame_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_application_frame_float.nodedef_name = 'ND_frame_float';
mtlx_application_frame_float.nodedef_node = 'frame';
mtlx_application_frame_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/frame.html';
LiteGraph.registerNodeType('mtlx/application/frame_float',mtlx_application_frame_float);

/**
  * @function mtlx_application_time_float
  * @description Library: mtlx. Category: frame. Type: float
  *   LiteGraph id: mtlx/application/time_float
  */
function mtlx_application_time_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_time_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'time';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/time.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_time_float_out_genglsl.png';
  this.nodedef_group = 'application';
  this.addInput('fps','float');
  this.addProperty('fps', 24.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'time_float';
  this.desc = "MaterialX:mtlx/application/time_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_application_time_float.nodedef_name = 'ND_time_float';
mtlx_application_time_float.nodedef_node = 'time';
mtlx_application_time_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/time.html';
LiteGraph.registerNodeType('mtlx/application/time_float',mtlx_application_time_float);

/**
  * @function mtlx_math_add_float
  * @description Library: mtlx. Category: time. Type: float
  *   LiteGraph id: mtlx/math/add_float
  */
function mtlx_math_add_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_add_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'add';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_add_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','float');
  this.addProperty('in1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'add_float';
  this.desc = "MaterialX:mtlx/math/add_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_add_float.nodedef_name = 'ND_add_float';
mtlx_math_add_float.nodedef_node = 'add';
mtlx_math_add_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
LiteGraph.registerNodeType('mtlx/math/add_float',mtlx_math_add_float);

/**
  * @function mtlx_math_add_integer
  * @description Library: mtlx. Category: add. Type: integer
  *   LiteGraph id: mtlx/math/add_integer
  */
function mtlx_math_add_integer() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_add_integer';
  this.nodedef_type = 'integer';
  this.nodedef_node = 'add';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_add_integer_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','integer');
  this.addProperty('in1', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','integer');
  this.addProperty('in2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','integer');
  this.title = 'add_integer';
  this.desc = "MaterialX:mtlx/math/add_integer";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#A32';
}
mtlx_math_add_integer.nodedef_name = 'ND_add_integer';
mtlx_math_add_integer.nodedef_node = 'add';
mtlx_math_add_integer.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
LiteGraph.registerNodeType('mtlx/math/add_integer',mtlx_math_add_integer);

/**
  * @function mtlx_math_add_color3
  * @description Library: mtlx. Category: add. Type: color3
  *   LiteGraph id: mtlx/math/add_color3
  */
function mtlx_math_add_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_add_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'add';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_add_color3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'add_color3';
  this.desc = "MaterialX:mtlx/math/add_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_add_color3.nodedef_name = 'ND_add_color3';
mtlx_math_add_color3.nodedef_node = 'add';
mtlx_math_add_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
LiteGraph.registerNodeType('mtlx/math/add_color3',mtlx_math_add_color3);

/**
  * @function mtlx_math_add_color4
  * @description Library: mtlx. Category: add. Type: color4
  *   LiteGraph id: mtlx/math/add_color4
  */
function mtlx_math_add_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_add_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'add';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_add_color4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'add_color4';
  this.desc = "MaterialX:mtlx/math/add_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_add_color4.nodedef_name = 'ND_add_color4';
mtlx_math_add_color4.nodedef_node = 'add';
mtlx_math_add_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
LiteGraph.registerNodeType('mtlx/math/add_color4',mtlx_math_add_color4);

/**
  * @function mtlx_math_add_vector2
  * @description Library: mtlx. Category: add. Type: vector2
  *   LiteGraph id: mtlx/math/add_vector2
  */
function mtlx_math_add_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_add_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'add';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_add_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector2');
  this.addProperty('in2', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'add_vector2';
  this.desc = "MaterialX:mtlx/math/add_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_add_vector2.nodedef_name = 'ND_add_vector2';
mtlx_math_add_vector2.nodedef_node = 'add';
mtlx_math_add_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
LiteGraph.registerNodeType('mtlx/math/add_vector2',mtlx_math_add_vector2);

/**
  * @function mtlx_math_add_vector3
  * @description Library: mtlx. Category: add. Type: vector3
  *   LiteGraph id: mtlx/math/add_vector3
  */
function mtlx_math_add_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_add_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'add';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_add_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'add_vector3';
  this.desc = "MaterialX:mtlx/math/add_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_add_vector3.nodedef_name = 'ND_add_vector3';
mtlx_math_add_vector3.nodedef_node = 'add';
mtlx_math_add_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
LiteGraph.registerNodeType('mtlx/math/add_vector3',mtlx_math_add_vector3);

/**
  * @function mtlx_math_add_vector4
  * @description Library: mtlx. Category: add. Type: vector4
  *   LiteGraph id: mtlx/math/add_vector4
  */
function mtlx_math_add_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_add_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'add';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_add_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'add_vector4';
  this.desc = "MaterialX:mtlx/math/add_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_add_vector4.nodedef_name = 'ND_add_vector4';
mtlx_math_add_vector4.nodedef_node = 'add';
mtlx_math_add_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
LiteGraph.registerNodeType('mtlx/math/add_vector4',mtlx_math_add_vector4);

/**
  * @function mtlx_math_add_matrix33
  * @description Library: mtlx. Category: add. Type: matrix33
  *   LiteGraph id: mtlx/math/add_matrix33
  */
function mtlx_math_add_matrix33() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_add_matrix33';
  this.nodedef_type = 'matrix33';
  this.nodedef_node = 'add';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_add_matrix33_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','matrix33');
  this.addProperty('in1', [1.0,0.0,0.0, 0.0,1.0,0.0, 0.0,0.0,1.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix33');
  this.addProperty('in2', [0.0,0.0,0.0, 0.0,0.0,0.0, 0.0,0.0,0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix33');
  this.title = 'add_matrix33';
  this.desc = "MaterialX:mtlx/math/add_matrix33";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#333';
}
mtlx_math_add_matrix33.nodedef_name = 'ND_add_matrix33';
mtlx_math_add_matrix33.nodedef_node = 'add';
mtlx_math_add_matrix33.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
LiteGraph.registerNodeType('mtlx/math/add_matrix33',mtlx_math_add_matrix33);

/**
  * @function mtlx_math_add_matrix44
  * @description Library: mtlx. Category: add. Type: matrix44
  *   LiteGraph id: mtlx/math/add_matrix44
  */
function mtlx_math_add_matrix44() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_add_matrix44';
  this.nodedef_type = 'matrix44';
  this.nodedef_node = 'add';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_add_matrix44_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','matrix44');
  this.addProperty('in1', [1.0,0.0,0.0,0.0, 0.0,1.0,0.0,0.0, 0.0,0.0,1.0,0.0, 0.0,0.0,0.0,1.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix44');
  this.addProperty('in2', [0.0,0.0,0.0,0.0, 0.0,0.0,0.0,0.0, 0.0,0.0,0.0,0.0, 0.0,0.0,0.0,0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix44');
  this.title = 'add_matrix44';
  this.desc = "MaterialX:mtlx/math/add_matrix44";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#444';
}
mtlx_math_add_matrix44.nodedef_name = 'ND_add_matrix44';
mtlx_math_add_matrix44.nodedef_node = 'add';
mtlx_math_add_matrix44.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
LiteGraph.registerNodeType('mtlx/math/add_matrix44',mtlx_math_add_matrix44);

/**
  * @function mtlx_math_add_color3FA
  * @description Library: mtlx. Category: add. Type: color3
  *   LiteGraph id: mtlx/math/add_color3FA
  */
function mtlx_math_add_color3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_add_color3FA';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'add';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_add_color3FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'add_color3';
  this.desc = "MaterialX:mtlx/math/add_color3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_add_color3FA.nodedef_name = 'ND_add_color3FA';
mtlx_math_add_color3FA.nodedef_node = 'add';
mtlx_math_add_color3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
LiteGraph.registerNodeType('mtlx/math/add_color3FA',mtlx_math_add_color3FA);

/**
  * @function mtlx_math_add_color4FA
  * @description Library: mtlx. Category: add. Type: color4
  *   LiteGraph id: mtlx/math/add_color4FA
  */
function mtlx_math_add_color4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_add_color4FA';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'add';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_add_color4FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'add_color4';
  this.desc = "MaterialX:mtlx/math/add_color4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_add_color4FA.nodedef_name = 'ND_add_color4FA';
mtlx_math_add_color4FA.nodedef_node = 'add';
mtlx_math_add_color4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
LiteGraph.registerNodeType('mtlx/math/add_color4FA',mtlx_math_add_color4FA);

/**
  * @function mtlx_math_add_vector2FA
  * @description Library: mtlx. Category: add. Type: vector2
  *   LiteGraph id: mtlx/math/add_vector2FA
  */
function mtlx_math_add_vector2FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_add_vector2FA';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'add';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_add_vector2FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'add_vector2';
  this.desc = "MaterialX:mtlx/math/add_vector2FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_add_vector2FA.nodedef_name = 'ND_add_vector2FA';
mtlx_math_add_vector2FA.nodedef_node = 'add';
mtlx_math_add_vector2FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
LiteGraph.registerNodeType('mtlx/math/add_vector2FA',mtlx_math_add_vector2FA);

/**
  * @function mtlx_math_add_vector3FA
  * @description Library: mtlx. Category: add. Type: vector3
  *   LiteGraph id: mtlx/math/add_vector3FA
  */
function mtlx_math_add_vector3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_add_vector3FA';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'add';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_add_vector3FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'add_vector3';
  this.desc = "MaterialX:mtlx/math/add_vector3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_add_vector3FA.nodedef_name = 'ND_add_vector3FA';
mtlx_math_add_vector3FA.nodedef_node = 'add';
mtlx_math_add_vector3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
LiteGraph.registerNodeType('mtlx/math/add_vector3FA',mtlx_math_add_vector3FA);

/**
  * @function mtlx_math_add_vector4FA
  * @description Library: mtlx. Category: add. Type: vector4
  *   LiteGraph id: mtlx/math/add_vector4FA
  */
function mtlx_math_add_vector4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_add_vector4FA';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'add';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_add_vector4FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'add_vector4';
  this.desc = "MaterialX:mtlx/math/add_vector4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_add_vector4FA.nodedef_name = 'ND_add_vector4FA';
mtlx_math_add_vector4FA.nodedef_node = 'add';
mtlx_math_add_vector4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
LiteGraph.registerNodeType('mtlx/math/add_vector4FA',mtlx_math_add_vector4FA);

/**
  * @function mtlx_math_add_matrix33FA
  * @description Library: mtlx. Category: add. Type: matrix33
  *   LiteGraph id: mtlx/math/add_matrix33FA
  */
function mtlx_math_add_matrix33FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_add_matrix33FA';
  this.nodedef_type = 'matrix33';
  this.nodedef_node = 'add';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_add_matrix33FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','matrix33');
  this.addProperty('in1', [1.0,0.0,0.0, 0.0,1.0,0.0, 0.0,0.0,1.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix33');
  this.title = 'add_matrix33';
  this.desc = "MaterialX:mtlx/math/add_matrix33FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#333';
}
mtlx_math_add_matrix33FA.nodedef_name = 'ND_add_matrix33FA';
mtlx_math_add_matrix33FA.nodedef_node = 'add';
mtlx_math_add_matrix33FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
LiteGraph.registerNodeType('mtlx/math/add_matrix33FA',mtlx_math_add_matrix33FA);

/**
  * @function mtlx_math_add_matrix44FA
  * @description Library: mtlx. Category: add. Type: matrix44
  *   LiteGraph id: mtlx/math/add_matrix44FA
  */
function mtlx_math_add_matrix44FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_add_matrix44FA';
  this.nodedef_type = 'matrix44';
  this.nodedef_node = 'add';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_add_matrix44FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','matrix44');
  this.addProperty('in1', [1.0,0.0,0.0,0.0, 0.0,1.0,0.0,0.0, 0.0,0.0,1.0,0.0, 0.0,0.0,0.0,1.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix44');
  this.title = 'add_matrix44';
  this.desc = "MaterialX:mtlx/math/add_matrix44FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#444';
}
mtlx_math_add_matrix44FA.nodedef_name = 'ND_add_matrix44FA';
mtlx_math_add_matrix44FA.nodedef_node = 'add';
mtlx_math_add_matrix44FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
LiteGraph.registerNodeType('mtlx/math/add_matrix44FA',mtlx_math_add_matrix44FA);

/**
  * @function mtlx_math_subtract_float
  * @description Library: mtlx. Category: add. Type: float
  *   LiteGraph id: mtlx/math/subtract_float
  */
function mtlx_math_subtract_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_subtract_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'subtract';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_subtract_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','float');
  this.addProperty('in1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'subtract_float';
  this.desc = "MaterialX:mtlx/math/subtract_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_subtract_float.nodedef_name = 'ND_subtract_float';
mtlx_math_subtract_float.nodedef_node = 'subtract';
mtlx_math_subtract_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
LiteGraph.registerNodeType('mtlx/math/subtract_float',mtlx_math_subtract_float);

/**
  * @function mtlx_math_subtract_integer
  * @description Library: mtlx. Category: subtract. Type: integer
  *   LiteGraph id: mtlx/math/subtract_integer
  */
function mtlx_math_subtract_integer() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_subtract_integer';
  this.nodedef_type = 'integer';
  this.nodedef_node = 'subtract';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_subtract_integer_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','integer');
  this.addProperty('in1', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','integer');
  this.addProperty('in2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','integer');
  this.title = 'subtract_integer';
  this.desc = "MaterialX:mtlx/math/subtract_integer";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#A32';
}
mtlx_math_subtract_integer.nodedef_name = 'ND_subtract_integer';
mtlx_math_subtract_integer.nodedef_node = 'subtract';
mtlx_math_subtract_integer.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
LiteGraph.registerNodeType('mtlx/math/subtract_integer',mtlx_math_subtract_integer);

/**
  * @function mtlx_math_subtract_color3
  * @description Library: mtlx. Category: subtract. Type: color3
  *   LiteGraph id: mtlx/math/subtract_color3
  */
function mtlx_math_subtract_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_subtract_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'subtract';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_subtract_color3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'subtract_color3';
  this.desc = "MaterialX:mtlx/math/subtract_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_subtract_color3.nodedef_name = 'ND_subtract_color3';
mtlx_math_subtract_color3.nodedef_node = 'subtract';
mtlx_math_subtract_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
LiteGraph.registerNodeType('mtlx/math/subtract_color3',mtlx_math_subtract_color3);

/**
  * @function mtlx_math_subtract_color4
  * @description Library: mtlx. Category: subtract. Type: color4
  *   LiteGraph id: mtlx/math/subtract_color4
  */
function mtlx_math_subtract_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_subtract_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'subtract';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_subtract_color4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'subtract_color4';
  this.desc = "MaterialX:mtlx/math/subtract_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_subtract_color4.nodedef_name = 'ND_subtract_color4';
mtlx_math_subtract_color4.nodedef_node = 'subtract';
mtlx_math_subtract_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
LiteGraph.registerNodeType('mtlx/math/subtract_color4',mtlx_math_subtract_color4);

/**
  * @function mtlx_math_subtract_vector2
  * @description Library: mtlx. Category: subtract. Type: vector2
  *   LiteGraph id: mtlx/math/subtract_vector2
  */
function mtlx_math_subtract_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_subtract_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'subtract';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_subtract_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector2');
  this.addProperty('in2', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'subtract_vector2';
  this.desc = "MaterialX:mtlx/math/subtract_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_subtract_vector2.nodedef_name = 'ND_subtract_vector2';
mtlx_math_subtract_vector2.nodedef_node = 'subtract';
mtlx_math_subtract_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
LiteGraph.registerNodeType('mtlx/math/subtract_vector2',mtlx_math_subtract_vector2);

/**
  * @function mtlx_math_subtract_vector3
  * @description Library: mtlx. Category: subtract. Type: vector3
  *   LiteGraph id: mtlx/math/subtract_vector3
  */
function mtlx_math_subtract_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_subtract_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'subtract';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_subtract_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'subtract_vector3';
  this.desc = "MaterialX:mtlx/math/subtract_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_subtract_vector3.nodedef_name = 'ND_subtract_vector3';
mtlx_math_subtract_vector3.nodedef_node = 'subtract';
mtlx_math_subtract_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
LiteGraph.registerNodeType('mtlx/math/subtract_vector3',mtlx_math_subtract_vector3);

/**
  * @function mtlx_math_subtract_vector4
  * @description Library: mtlx. Category: subtract. Type: vector4
  *   LiteGraph id: mtlx/math/subtract_vector4
  */
function mtlx_math_subtract_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_subtract_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'subtract';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_subtract_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'subtract_vector4';
  this.desc = "MaterialX:mtlx/math/subtract_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_subtract_vector4.nodedef_name = 'ND_subtract_vector4';
mtlx_math_subtract_vector4.nodedef_node = 'subtract';
mtlx_math_subtract_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
LiteGraph.registerNodeType('mtlx/math/subtract_vector4',mtlx_math_subtract_vector4);

/**
  * @function mtlx_math_subtract_matrix33
  * @description Library: mtlx. Category: subtract. Type: matrix33
  *   LiteGraph id: mtlx/math/subtract_matrix33
  */
function mtlx_math_subtract_matrix33() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_subtract_matrix33';
  this.nodedef_type = 'matrix33';
  this.nodedef_node = 'subtract';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_subtract_matrix33_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','matrix33');
  this.addProperty('in1', [1.0,0.0,0.0, 0.0,1.0,0.0, 0.0,0.0,1.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix33');
  this.addProperty('in2', [0.0,0.0,0.0, 0.0,0.0,0.0, 0.0,0.0,0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix33');
  this.title = 'subtract_matrix33';
  this.desc = "MaterialX:mtlx/math/subtract_matrix33";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#333';
}
mtlx_math_subtract_matrix33.nodedef_name = 'ND_subtract_matrix33';
mtlx_math_subtract_matrix33.nodedef_node = 'subtract';
mtlx_math_subtract_matrix33.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
LiteGraph.registerNodeType('mtlx/math/subtract_matrix33',mtlx_math_subtract_matrix33);

/**
  * @function mtlx_math_subtract_matrix44
  * @description Library: mtlx. Category: subtract. Type: matrix44
  *   LiteGraph id: mtlx/math/subtract_matrix44
  */
function mtlx_math_subtract_matrix44() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_subtract_matrix44';
  this.nodedef_type = 'matrix44';
  this.nodedef_node = 'subtract';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_subtract_matrix44_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','matrix44');
  this.addProperty('in1', [1.0,0.0,0.0,0.0, 0.0,1.0,0.0,0.0, 0.0,0.0,1.0,0.0, 0.0,0.0,0.0,1.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix44');
  this.addProperty('in2', [0.0,0.0,0.0,0.0, 0.0,0.0,0.0,0.0, 0.0,0.0,0.0,0.0, 0.0,0.0,0.0,0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix44');
  this.title = 'subtract_matrix44';
  this.desc = "MaterialX:mtlx/math/subtract_matrix44";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#444';
}
mtlx_math_subtract_matrix44.nodedef_name = 'ND_subtract_matrix44';
mtlx_math_subtract_matrix44.nodedef_node = 'subtract';
mtlx_math_subtract_matrix44.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
LiteGraph.registerNodeType('mtlx/math/subtract_matrix44',mtlx_math_subtract_matrix44);

/**
  * @function mtlx_math_subtract_color3FA
  * @description Library: mtlx. Category: subtract. Type: color3
  *   LiteGraph id: mtlx/math/subtract_color3FA
  */
function mtlx_math_subtract_color3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_subtract_color3FA';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'subtract';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_subtract_color3FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'subtract_color3';
  this.desc = "MaterialX:mtlx/math/subtract_color3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_subtract_color3FA.nodedef_name = 'ND_subtract_color3FA';
mtlx_math_subtract_color3FA.nodedef_node = 'subtract';
mtlx_math_subtract_color3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
LiteGraph.registerNodeType('mtlx/math/subtract_color3FA',mtlx_math_subtract_color3FA);

/**
  * @function mtlx_math_subtract_color4FA
  * @description Library: mtlx. Category: subtract. Type: color4
  *   LiteGraph id: mtlx/math/subtract_color4FA
  */
function mtlx_math_subtract_color4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_subtract_color4FA';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'subtract';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_subtract_color4FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'subtract_color4';
  this.desc = "MaterialX:mtlx/math/subtract_color4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_subtract_color4FA.nodedef_name = 'ND_subtract_color4FA';
mtlx_math_subtract_color4FA.nodedef_node = 'subtract';
mtlx_math_subtract_color4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
LiteGraph.registerNodeType('mtlx/math/subtract_color4FA',mtlx_math_subtract_color4FA);

/**
  * @function mtlx_math_subtract_vector2FA
  * @description Library: mtlx. Category: subtract. Type: vector2
  *   LiteGraph id: mtlx/math/subtract_vector2FA
  */
function mtlx_math_subtract_vector2FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_subtract_vector2FA';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'subtract';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_subtract_vector2FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'subtract_vector2';
  this.desc = "MaterialX:mtlx/math/subtract_vector2FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_subtract_vector2FA.nodedef_name = 'ND_subtract_vector2FA';
mtlx_math_subtract_vector2FA.nodedef_node = 'subtract';
mtlx_math_subtract_vector2FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
LiteGraph.registerNodeType('mtlx/math/subtract_vector2FA',mtlx_math_subtract_vector2FA);

/**
  * @function mtlx_math_subtract_vector3FA
  * @description Library: mtlx. Category: subtract. Type: vector3
  *   LiteGraph id: mtlx/math/subtract_vector3FA
  */
function mtlx_math_subtract_vector3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_subtract_vector3FA';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'subtract';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_subtract_vector3FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'subtract_vector3';
  this.desc = "MaterialX:mtlx/math/subtract_vector3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_subtract_vector3FA.nodedef_name = 'ND_subtract_vector3FA';
mtlx_math_subtract_vector3FA.nodedef_node = 'subtract';
mtlx_math_subtract_vector3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
LiteGraph.registerNodeType('mtlx/math/subtract_vector3FA',mtlx_math_subtract_vector3FA);

/**
  * @function mtlx_math_subtract_vector4FA
  * @description Library: mtlx. Category: subtract. Type: vector4
  *   LiteGraph id: mtlx/math/subtract_vector4FA
  */
function mtlx_math_subtract_vector4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_subtract_vector4FA';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'subtract';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_subtract_vector4FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'subtract_vector4';
  this.desc = "MaterialX:mtlx/math/subtract_vector4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_subtract_vector4FA.nodedef_name = 'ND_subtract_vector4FA';
mtlx_math_subtract_vector4FA.nodedef_node = 'subtract';
mtlx_math_subtract_vector4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
LiteGraph.registerNodeType('mtlx/math/subtract_vector4FA',mtlx_math_subtract_vector4FA);

/**
  * @function mtlx_math_subtract_matrix33FA
  * @description Library: mtlx. Category: subtract. Type: matrix33
  *   LiteGraph id: mtlx/math/subtract_matrix33FA
  */
function mtlx_math_subtract_matrix33FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_subtract_matrix33FA';
  this.nodedef_type = 'matrix33';
  this.nodedef_node = 'subtract';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_subtract_matrix33FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','matrix33');
  this.addProperty('in1', [1.0,0.0,0.0, 0.0,1.0,0.0, 0.0,0.0,1.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix33');
  this.title = 'subtract_matrix33';
  this.desc = "MaterialX:mtlx/math/subtract_matrix33FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#333';
}
mtlx_math_subtract_matrix33FA.nodedef_name = 'ND_subtract_matrix33FA';
mtlx_math_subtract_matrix33FA.nodedef_node = 'subtract';
mtlx_math_subtract_matrix33FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
LiteGraph.registerNodeType('mtlx/math/subtract_matrix33FA',mtlx_math_subtract_matrix33FA);

/**
  * @function mtlx_math_subtract_matrix44FA
  * @description Library: mtlx. Category: subtract. Type: matrix44
  *   LiteGraph id: mtlx/math/subtract_matrix44FA
  */
function mtlx_math_subtract_matrix44FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_subtract_matrix44FA';
  this.nodedef_type = 'matrix44';
  this.nodedef_node = 'subtract';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_subtract_matrix44FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','matrix44');
  this.addProperty('in1', [1.0,0.0,0.0,0.0, 0.0,1.0,0.0,0.0, 0.0,0.0,1.0,0.0, 0.0,0.0,0.0,1.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix44');
  this.title = 'subtract_matrix44';
  this.desc = "MaterialX:mtlx/math/subtract_matrix44FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#444';
}
mtlx_math_subtract_matrix44FA.nodedef_name = 'ND_subtract_matrix44FA';
mtlx_math_subtract_matrix44FA.nodedef_node = 'subtract';
mtlx_math_subtract_matrix44FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subtract.html';
LiteGraph.registerNodeType('mtlx/math/subtract_matrix44FA',mtlx_math_subtract_matrix44FA);

/**
  * @function mtlx_math_multiply_float
  * @description Library: mtlx. Category: subtract. Type: float
  *   LiteGraph id: mtlx/math/multiply_float
  */
function mtlx_math_multiply_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_multiply_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'multiply';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_multiply_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','float');
  this.addProperty('in1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'multiply_float';
  this.desc = "MaterialX:mtlx/math/multiply_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_multiply_float.nodedef_name = 'ND_multiply_float';
mtlx_math_multiply_float.nodedef_node = 'multiply';
mtlx_math_multiply_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
LiteGraph.registerNodeType('mtlx/math/multiply_float',mtlx_math_multiply_float);

/**
  * @function mtlx_math_multiply_color3
  * @description Library: mtlx. Category: multiply. Type: color3
  *   LiteGraph id: mtlx/math/multiply_color3
  */
function mtlx_math_multiply_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_multiply_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'multiply';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_multiply_color3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color3');
  this.addProperty('in2', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'multiply_color3';
  this.desc = "MaterialX:mtlx/math/multiply_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_multiply_color3.nodedef_name = 'ND_multiply_color3';
mtlx_math_multiply_color3.nodedef_node = 'multiply';
mtlx_math_multiply_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
LiteGraph.registerNodeType('mtlx/math/multiply_color3',mtlx_math_multiply_color3);

/**
  * @function mtlx_math_multiply_color4
  * @description Library: mtlx. Category: multiply. Type: color4
  *   LiteGraph id: mtlx/math/multiply_color4
  */
function mtlx_math_multiply_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_multiply_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'multiply';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_multiply_color4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color4');
  this.addProperty('in2', [1.0, 1.0, 1.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'multiply_color4';
  this.desc = "MaterialX:mtlx/math/multiply_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_multiply_color4.nodedef_name = 'ND_multiply_color4';
mtlx_math_multiply_color4.nodedef_node = 'multiply';
mtlx_math_multiply_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
LiteGraph.registerNodeType('mtlx/math/multiply_color4',mtlx_math_multiply_color4);

/**
  * @function mtlx_math_multiply_vector2
  * @description Library: mtlx. Category: multiply. Type: vector2
  *   LiteGraph id: mtlx/math/multiply_vector2
  */
function mtlx_math_multiply_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_multiply_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'multiply';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_multiply_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector2');
  this.addProperty('in2', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'multiply_vector2';
  this.desc = "MaterialX:mtlx/math/multiply_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_multiply_vector2.nodedef_name = 'ND_multiply_vector2';
mtlx_math_multiply_vector2.nodedef_node = 'multiply';
mtlx_math_multiply_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
LiteGraph.registerNodeType('mtlx/math/multiply_vector2',mtlx_math_multiply_vector2);

/**
  * @function mtlx_math_multiply_vector3
  * @description Library: mtlx. Category: multiply. Type: vector3
  *   LiteGraph id: mtlx/math/multiply_vector3
  */
function mtlx_math_multiply_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_multiply_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'multiply';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_multiply_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector3');
  this.addProperty('in2', [1.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'multiply_vector3';
  this.desc = "MaterialX:mtlx/math/multiply_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_multiply_vector3.nodedef_name = 'ND_multiply_vector3';
mtlx_math_multiply_vector3.nodedef_node = 'multiply';
mtlx_math_multiply_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
LiteGraph.registerNodeType('mtlx/math/multiply_vector3',mtlx_math_multiply_vector3);

/**
  * @function mtlx_math_multiply_vector4
  * @description Library: mtlx. Category: multiply. Type: vector4
  *   LiteGraph id: mtlx/math/multiply_vector4
  */
function mtlx_math_multiply_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_multiply_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'multiply';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_multiply_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector4');
  this.addProperty('in2', [1.0, 1.0, 1.0, 1.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'multiply_vector4';
  this.desc = "MaterialX:mtlx/math/multiply_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_multiply_vector4.nodedef_name = 'ND_multiply_vector4';
mtlx_math_multiply_vector4.nodedef_node = 'multiply';
mtlx_math_multiply_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
LiteGraph.registerNodeType('mtlx/math/multiply_vector4',mtlx_math_multiply_vector4);

/**
  * @function mtlx_math_multiply_matrix33
  * @description Library: mtlx. Category: multiply. Type: matrix33
  *   LiteGraph id: mtlx/math/multiply_matrix33
  */
function mtlx_math_multiply_matrix33() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_multiply_matrix33';
  this.nodedef_type = 'matrix33';
  this.nodedef_node = 'multiply';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_multiply_matrix33_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','matrix33');
  this.addProperty('in1', [1.0,0.0,0.0, 0.0,1.0,0.0, 0.0,0.0,1.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix33');
  this.addProperty('in2', [1.0,0.0,0.0, 0.0,1.0,0.0, 0.0,0.0,1.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix33');
  this.title = 'multiply_matrix33';
  this.desc = "MaterialX:mtlx/math/multiply_matrix33";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#333';
}
mtlx_math_multiply_matrix33.nodedef_name = 'ND_multiply_matrix33';
mtlx_math_multiply_matrix33.nodedef_node = 'multiply';
mtlx_math_multiply_matrix33.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
LiteGraph.registerNodeType('mtlx/math/multiply_matrix33',mtlx_math_multiply_matrix33);

/**
  * @function mtlx_math_multiply_matrix44
  * @description Library: mtlx. Category: multiply. Type: matrix44
  *   LiteGraph id: mtlx/math/multiply_matrix44
  */
function mtlx_math_multiply_matrix44() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_multiply_matrix44';
  this.nodedef_type = 'matrix44';
  this.nodedef_node = 'multiply';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_multiply_matrix44_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','matrix44');
  this.addProperty('in1', [1.0,0.0,0.0,0.0, 0.0,1.0,0.0,0.0, 0.0,0.0,1.0,0.0, 0.0,0.0,0.0,1.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix44');
  this.addProperty('in2', [1.0,0.0,0.0,0.0, 0.0,1.0,0.0,0.0, 0.0,0.0,1.0,0.0, 0.0,0.0,0.0,1.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix44');
  this.title = 'multiply_matrix44';
  this.desc = "MaterialX:mtlx/math/multiply_matrix44";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#444';
}
mtlx_math_multiply_matrix44.nodedef_name = 'ND_multiply_matrix44';
mtlx_math_multiply_matrix44.nodedef_node = 'multiply';
mtlx_math_multiply_matrix44.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
LiteGraph.registerNodeType('mtlx/math/multiply_matrix44',mtlx_math_multiply_matrix44);

/**
  * @function mtlx_math_multiply_color3FA
  * @description Library: mtlx. Category: multiply. Type: color3
  *   LiteGraph id: mtlx/math/multiply_color3FA
  */
function mtlx_math_multiply_color3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_multiply_color3FA';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'multiply';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_multiply_color3FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'multiply_color3';
  this.desc = "MaterialX:mtlx/math/multiply_color3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_multiply_color3FA.nodedef_name = 'ND_multiply_color3FA';
mtlx_math_multiply_color3FA.nodedef_node = 'multiply';
mtlx_math_multiply_color3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
LiteGraph.registerNodeType('mtlx/math/multiply_color3FA',mtlx_math_multiply_color3FA);

/**
  * @function mtlx_math_multiply_color4FA
  * @description Library: mtlx. Category: multiply. Type: color4
  *   LiteGraph id: mtlx/math/multiply_color4FA
  */
function mtlx_math_multiply_color4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_multiply_color4FA';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'multiply';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_multiply_color4FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'multiply_color4';
  this.desc = "MaterialX:mtlx/math/multiply_color4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_multiply_color4FA.nodedef_name = 'ND_multiply_color4FA';
mtlx_math_multiply_color4FA.nodedef_node = 'multiply';
mtlx_math_multiply_color4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
LiteGraph.registerNodeType('mtlx/math/multiply_color4FA',mtlx_math_multiply_color4FA);

/**
  * @function mtlx_math_multiply_vector2FA
  * @description Library: mtlx. Category: multiply. Type: vector2
  *   LiteGraph id: mtlx/math/multiply_vector2FA
  */
function mtlx_math_multiply_vector2FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_multiply_vector2FA';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'multiply';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_multiply_vector2FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'multiply_vector2';
  this.desc = "MaterialX:mtlx/math/multiply_vector2FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_multiply_vector2FA.nodedef_name = 'ND_multiply_vector2FA';
mtlx_math_multiply_vector2FA.nodedef_node = 'multiply';
mtlx_math_multiply_vector2FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
LiteGraph.registerNodeType('mtlx/math/multiply_vector2FA',mtlx_math_multiply_vector2FA);

/**
  * @function mtlx_math_multiply_vector3FA
  * @description Library: mtlx. Category: multiply. Type: vector3
  *   LiteGraph id: mtlx/math/multiply_vector3FA
  */
function mtlx_math_multiply_vector3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_multiply_vector3FA';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'multiply';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_multiply_vector3FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'multiply_vector3';
  this.desc = "MaterialX:mtlx/math/multiply_vector3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_multiply_vector3FA.nodedef_name = 'ND_multiply_vector3FA';
mtlx_math_multiply_vector3FA.nodedef_node = 'multiply';
mtlx_math_multiply_vector3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
LiteGraph.registerNodeType('mtlx/math/multiply_vector3FA',mtlx_math_multiply_vector3FA);

/**
  * @function mtlx_math_multiply_vector4FA
  * @description Library: mtlx. Category: multiply. Type: vector4
  *   LiteGraph id: mtlx/math/multiply_vector4FA
  */
function mtlx_math_multiply_vector4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_multiply_vector4FA';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'multiply';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_multiply_vector4FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'multiply_vector4';
  this.desc = "MaterialX:mtlx/math/multiply_vector4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_multiply_vector4FA.nodedef_name = 'ND_multiply_vector4FA';
mtlx_math_multiply_vector4FA.nodedef_node = 'multiply';
mtlx_math_multiply_vector4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
LiteGraph.registerNodeType('mtlx/math/multiply_vector4FA',mtlx_math_multiply_vector4FA);

/**
  * @function mtlx_math_divide_float
  * @description Library: mtlx. Category: multiply. Type: float
  *   LiteGraph id: mtlx/math/divide_float
  */
function mtlx_math_divide_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_divide_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'divide';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_divide_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','float');
  this.addProperty('in1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'divide_float';
  this.desc = "MaterialX:mtlx/math/divide_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_divide_float.nodedef_name = 'ND_divide_float';
mtlx_math_divide_float.nodedef_node = 'divide';
mtlx_math_divide_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
LiteGraph.registerNodeType('mtlx/math/divide_float',mtlx_math_divide_float);

/**
  * @function mtlx_math_divide_color3
  * @description Library: mtlx. Category: divide. Type: color3
  *   LiteGraph id: mtlx/math/divide_color3
  */
function mtlx_math_divide_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_divide_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'divide';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_divide_color3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color3');
  this.addProperty('in2', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'divide_color3';
  this.desc = "MaterialX:mtlx/math/divide_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_divide_color3.nodedef_name = 'ND_divide_color3';
mtlx_math_divide_color3.nodedef_node = 'divide';
mtlx_math_divide_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
LiteGraph.registerNodeType('mtlx/math/divide_color3',mtlx_math_divide_color3);

/**
  * @function mtlx_math_divide_color4
  * @description Library: mtlx. Category: divide. Type: color4
  *   LiteGraph id: mtlx/math/divide_color4
  */
function mtlx_math_divide_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_divide_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'divide';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_divide_color4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color4');
  this.addProperty('in2', [1.0, 1.0, 1.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'divide_color4';
  this.desc = "MaterialX:mtlx/math/divide_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_divide_color4.nodedef_name = 'ND_divide_color4';
mtlx_math_divide_color4.nodedef_node = 'divide';
mtlx_math_divide_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
LiteGraph.registerNodeType('mtlx/math/divide_color4',mtlx_math_divide_color4);

/**
  * @function mtlx_math_divide_vector2
  * @description Library: mtlx. Category: divide. Type: vector2
  *   LiteGraph id: mtlx/math/divide_vector2
  */
function mtlx_math_divide_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_divide_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'divide';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_divide_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector2');
  this.addProperty('in2', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'divide_vector2';
  this.desc = "MaterialX:mtlx/math/divide_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_divide_vector2.nodedef_name = 'ND_divide_vector2';
mtlx_math_divide_vector2.nodedef_node = 'divide';
mtlx_math_divide_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
LiteGraph.registerNodeType('mtlx/math/divide_vector2',mtlx_math_divide_vector2);

/**
  * @function mtlx_math_divide_vector3
  * @description Library: mtlx. Category: divide. Type: vector3
  *   LiteGraph id: mtlx/math/divide_vector3
  */
function mtlx_math_divide_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_divide_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'divide';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_divide_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector3');
  this.addProperty('in2', [1.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'divide_vector3';
  this.desc = "MaterialX:mtlx/math/divide_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_divide_vector3.nodedef_name = 'ND_divide_vector3';
mtlx_math_divide_vector3.nodedef_node = 'divide';
mtlx_math_divide_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
LiteGraph.registerNodeType('mtlx/math/divide_vector3',mtlx_math_divide_vector3);

/**
  * @function mtlx_math_divide_vector4
  * @description Library: mtlx. Category: divide. Type: vector4
  *   LiteGraph id: mtlx/math/divide_vector4
  */
function mtlx_math_divide_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_divide_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'divide';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_divide_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector4');
  this.addProperty('in2', [1.0, 1.0, 1.0, 1.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'divide_vector4';
  this.desc = "MaterialX:mtlx/math/divide_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_divide_vector4.nodedef_name = 'ND_divide_vector4';
mtlx_math_divide_vector4.nodedef_node = 'divide';
mtlx_math_divide_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
LiteGraph.registerNodeType('mtlx/math/divide_vector4',mtlx_math_divide_vector4);

/**
  * @function mtlx_math_divide_matrix33
  * @description Library: mtlx. Category: divide. Type: matrix33
  *   LiteGraph id: mtlx/math/divide_matrix33
  */
function mtlx_math_divide_matrix33() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_divide_matrix33';
  this.nodedef_type = 'matrix33';
  this.nodedef_node = 'divide';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_divide_matrix33_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','matrix33');
  this.addProperty('in1', [1.0,0.0,0.0, 0.0,1.0,0.0, 0.0,0.0,1.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix33');
  this.addProperty('in2', [1.0,0.0,0.0, 0.0,1.0,0.0, 0.0,0.0,1.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix33');
  this.title = 'divide_matrix33';
  this.desc = "MaterialX:mtlx/math/divide_matrix33";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#333';
}
mtlx_math_divide_matrix33.nodedef_name = 'ND_divide_matrix33';
mtlx_math_divide_matrix33.nodedef_node = 'divide';
mtlx_math_divide_matrix33.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
LiteGraph.registerNodeType('mtlx/math/divide_matrix33',mtlx_math_divide_matrix33);

/**
  * @function mtlx_math_divide_matrix44
  * @description Library: mtlx. Category: divide. Type: matrix44
  *   LiteGraph id: mtlx/math/divide_matrix44
  */
function mtlx_math_divide_matrix44() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_divide_matrix44';
  this.nodedef_type = 'matrix44';
  this.nodedef_node = 'divide';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_divide_matrix44_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','matrix44');
  this.addProperty('in1', [1.0,0.0,0.0,0.0, 0.0,1.0,0.0,0.0, 0.0,0.0,1.0,0.0, 0.0,0.0,0.0,1.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix44');
  this.addProperty('in2', [1.0,0.0,0.0,0.0, 0.0,1.0,0.0,0.0, 0.0,0.0,1.0,0.0, 0.0,0.0,0.0,1.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix44');
  this.title = 'divide_matrix44';
  this.desc = "MaterialX:mtlx/math/divide_matrix44";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#444';
}
mtlx_math_divide_matrix44.nodedef_name = 'ND_divide_matrix44';
mtlx_math_divide_matrix44.nodedef_node = 'divide';
mtlx_math_divide_matrix44.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
LiteGraph.registerNodeType('mtlx/math/divide_matrix44',mtlx_math_divide_matrix44);

/**
  * @function mtlx_math_divide_color3FA
  * @description Library: mtlx. Category: divide. Type: color3
  *   LiteGraph id: mtlx/math/divide_color3FA
  */
function mtlx_math_divide_color3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_divide_color3FA';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'divide';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_divide_color3FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'divide_color3';
  this.desc = "MaterialX:mtlx/math/divide_color3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_divide_color3FA.nodedef_name = 'ND_divide_color3FA';
mtlx_math_divide_color3FA.nodedef_node = 'divide';
mtlx_math_divide_color3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
LiteGraph.registerNodeType('mtlx/math/divide_color3FA',mtlx_math_divide_color3FA);

/**
  * @function mtlx_math_divide_color4FA
  * @description Library: mtlx. Category: divide. Type: color4
  *   LiteGraph id: mtlx/math/divide_color4FA
  */
function mtlx_math_divide_color4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_divide_color4FA';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'divide';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_divide_color4FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'divide_color4';
  this.desc = "MaterialX:mtlx/math/divide_color4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_divide_color4FA.nodedef_name = 'ND_divide_color4FA';
mtlx_math_divide_color4FA.nodedef_node = 'divide';
mtlx_math_divide_color4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
LiteGraph.registerNodeType('mtlx/math/divide_color4FA',mtlx_math_divide_color4FA);

/**
  * @function mtlx_math_divide_vector2FA
  * @description Library: mtlx. Category: divide. Type: vector2
  *   LiteGraph id: mtlx/math/divide_vector2FA
  */
function mtlx_math_divide_vector2FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_divide_vector2FA';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'divide';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_divide_vector2FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'divide_vector2';
  this.desc = "MaterialX:mtlx/math/divide_vector2FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_divide_vector2FA.nodedef_name = 'ND_divide_vector2FA';
mtlx_math_divide_vector2FA.nodedef_node = 'divide';
mtlx_math_divide_vector2FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
LiteGraph.registerNodeType('mtlx/math/divide_vector2FA',mtlx_math_divide_vector2FA);

/**
  * @function mtlx_math_divide_vector3FA
  * @description Library: mtlx. Category: divide. Type: vector3
  *   LiteGraph id: mtlx/math/divide_vector3FA
  */
function mtlx_math_divide_vector3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_divide_vector3FA';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'divide';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_divide_vector3FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'divide_vector3';
  this.desc = "MaterialX:mtlx/math/divide_vector3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_divide_vector3FA.nodedef_name = 'ND_divide_vector3FA';
mtlx_math_divide_vector3FA.nodedef_node = 'divide';
mtlx_math_divide_vector3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
LiteGraph.registerNodeType('mtlx/math/divide_vector3FA',mtlx_math_divide_vector3FA);

/**
  * @function mtlx_math_divide_vector4FA
  * @description Library: mtlx. Category: divide. Type: vector4
  *   LiteGraph id: mtlx/math/divide_vector4FA
  */
function mtlx_math_divide_vector4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_divide_vector4FA';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'divide';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_divide_vector4FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'divide_vector4';
  this.desc = "MaterialX:mtlx/math/divide_vector4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_divide_vector4FA.nodedef_name = 'ND_divide_vector4FA';
mtlx_math_divide_vector4FA.nodedef_node = 'divide';
mtlx_math_divide_vector4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/divide.html';
LiteGraph.registerNodeType('mtlx/math/divide_vector4FA',mtlx_math_divide_vector4FA);

/**
  * @function mtlx_math_modulo_float
  * @description Library: mtlx. Category: divide. Type: float
  *   LiteGraph id: mtlx/math/modulo_float
  */
function mtlx_math_modulo_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_modulo_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'modulo';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/modulo.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_modulo_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','float');
  this.addProperty('in1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'modulo_float';
  this.desc = "MaterialX:mtlx/math/modulo_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_modulo_float.nodedef_name = 'ND_modulo_float';
mtlx_math_modulo_float.nodedef_node = 'modulo';
mtlx_math_modulo_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/modulo.html';
LiteGraph.registerNodeType('mtlx/math/modulo_float',mtlx_math_modulo_float);

/**
  * @function mtlx_math_modulo_color3
  * @description Library: mtlx. Category: modulo. Type: color3
  *   LiteGraph id: mtlx/math/modulo_color3
  */
function mtlx_math_modulo_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_modulo_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'modulo';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/modulo.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_modulo_color3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color3');
  this.addProperty('in2', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'modulo_color3';
  this.desc = "MaterialX:mtlx/math/modulo_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_modulo_color3.nodedef_name = 'ND_modulo_color3';
mtlx_math_modulo_color3.nodedef_node = 'modulo';
mtlx_math_modulo_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/modulo.html';
LiteGraph.registerNodeType('mtlx/math/modulo_color3',mtlx_math_modulo_color3);

/**
  * @function mtlx_math_modulo_color4
  * @description Library: mtlx. Category: modulo. Type: color4
  *   LiteGraph id: mtlx/math/modulo_color4
  */
function mtlx_math_modulo_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_modulo_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'modulo';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/modulo.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_modulo_color4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color4');
  this.addProperty('in2', [1.0, 1.0, 1.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'modulo_color4';
  this.desc = "MaterialX:mtlx/math/modulo_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_modulo_color4.nodedef_name = 'ND_modulo_color4';
mtlx_math_modulo_color4.nodedef_node = 'modulo';
mtlx_math_modulo_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/modulo.html';
LiteGraph.registerNodeType('mtlx/math/modulo_color4',mtlx_math_modulo_color4);

/**
  * @function mtlx_math_modulo_vector2
  * @description Library: mtlx. Category: modulo. Type: vector2
  *   LiteGraph id: mtlx/math/modulo_vector2
  */
function mtlx_math_modulo_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_modulo_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'modulo';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/modulo.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_modulo_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector2');
  this.addProperty('in2', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'modulo_vector2';
  this.desc = "MaterialX:mtlx/math/modulo_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_modulo_vector2.nodedef_name = 'ND_modulo_vector2';
mtlx_math_modulo_vector2.nodedef_node = 'modulo';
mtlx_math_modulo_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/modulo.html';
LiteGraph.registerNodeType('mtlx/math/modulo_vector2',mtlx_math_modulo_vector2);

/**
  * @function mtlx_math_modulo_vector3
  * @description Library: mtlx. Category: modulo. Type: vector3
  *   LiteGraph id: mtlx/math/modulo_vector3
  */
function mtlx_math_modulo_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_modulo_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'modulo';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/modulo.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_modulo_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector3');
  this.addProperty('in2', [1.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'modulo_vector3';
  this.desc = "MaterialX:mtlx/math/modulo_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_modulo_vector3.nodedef_name = 'ND_modulo_vector3';
mtlx_math_modulo_vector3.nodedef_node = 'modulo';
mtlx_math_modulo_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/modulo.html';
LiteGraph.registerNodeType('mtlx/math/modulo_vector3',mtlx_math_modulo_vector3);

/**
  * @function mtlx_math_modulo_vector4
  * @description Library: mtlx. Category: modulo. Type: vector4
  *   LiteGraph id: mtlx/math/modulo_vector4
  */
function mtlx_math_modulo_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_modulo_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'modulo';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/modulo.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_modulo_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector4');
  this.addProperty('in2', [1.0, 1.0, 1.0, 1.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'modulo_vector4';
  this.desc = "MaterialX:mtlx/math/modulo_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_modulo_vector4.nodedef_name = 'ND_modulo_vector4';
mtlx_math_modulo_vector4.nodedef_node = 'modulo';
mtlx_math_modulo_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/modulo.html';
LiteGraph.registerNodeType('mtlx/math/modulo_vector4',mtlx_math_modulo_vector4);

/**
  * @function mtlx_math_modulo_color3FA
  * @description Library: mtlx. Category: modulo. Type: color3
  *   LiteGraph id: mtlx/math/modulo_color3FA
  */
function mtlx_math_modulo_color3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_modulo_color3FA';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'modulo';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/modulo.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_modulo_color3FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'modulo_color3';
  this.desc = "MaterialX:mtlx/math/modulo_color3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_modulo_color3FA.nodedef_name = 'ND_modulo_color3FA';
mtlx_math_modulo_color3FA.nodedef_node = 'modulo';
mtlx_math_modulo_color3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/modulo.html';
LiteGraph.registerNodeType('mtlx/math/modulo_color3FA',mtlx_math_modulo_color3FA);

/**
  * @function mtlx_math_modulo_color4FA
  * @description Library: mtlx. Category: modulo. Type: color4
  *   LiteGraph id: mtlx/math/modulo_color4FA
  */
function mtlx_math_modulo_color4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_modulo_color4FA';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'modulo';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/modulo.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_modulo_color4FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'modulo_color4';
  this.desc = "MaterialX:mtlx/math/modulo_color4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_modulo_color4FA.nodedef_name = 'ND_modulo_color4FA';
mtlx_math_modulo_color4FA.nodedef_node = 'modulo';
mtlx_math_modulo_color4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/modulo.html';
LiteGraph.registerNodeType('mtlx/math/modulo_color4FA',mtlx_math_modulo_color4FA);

/**
  * @function mtlx_math_modulo_vector2FA
  * @description Library: mtlx. Category: modulo. Type: vector2
  *   LiteGraph id: mtlx/math/modulo_vector2FA
  */
function mtlx_math_modulo_vector2FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_modulo_vector2FA';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'modulo';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/modulo.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_modulo_vector2FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'modulo_vector2';
  this.desc = "MaterialX:mtlx/math/modulo_vector2FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_modulo_vector2FA.nodedef_name = 'ND_modulo_vector2FA';
mtlx_math_modulo_vector2FA.nodedef_node = 'modulo';
mtlx_math_modulo_vector2FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/modulo.html';
LiteGraph.registerNodeType('mtlx/math/modulo_vector2FA',mtlx_math_modulo_vector2FA);

/**
  * @function mtlx_math_modulo_vector3FA
  * @description Library: mtlx. Category: modulo. Type: vector3
  *   LiteGraph id: mtlx/math/modulo_vector3FA
  */
function mtlx_math_modulo_vector3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_modulo_vector3FA';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'modulo';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/modulo.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_modulo_vector3FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'modulo_vector3';
  this.desc = "MaterialX:mtlx/math/modulo_vector3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_modulo_vector3FA.nodedef_name = 'ND_modulo_vector3FA';
mtlx_math_modulo_vector3FA.nodedef_node = 'modulo';
mtlx_math_modulo_vector3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/modulo.html';
LiteGraph.registerNodeType('mtlx/math/modulo_vector3FA',mtlx_math_modulo_vector3FA);

/**
  * @function mtlx_math_modulo_vector4FA
  * @description Library: mtlx. Category: modulo. Type: vector4
  *   LiteGraph id: mtlx/math/modulo_vector4FA
  */
function mtlx_math_modulo_vector4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_modulo_vector4FA';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'modulo';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/modulo.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_modulo_vector4FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'modulo_vector4';
  this.desc = "MaterialX:mtlx/math/modulo_vector4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_modulo_vector4FA.nodedef_name = 'ND_modulo_vector4FA';
mtlx_math_modulo_vector4FA.nodedef_node = 'modulo';
mtlx_math_modulo_vector4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/modulo.html';
LiteGraph.registerNodeType('mtlx/math/modulo_vector4FA',mtlx_math_modulo_vector4FA);

/**
  * @function mtlx_math_invert_float
  * @description Library: mtlx. Category: modulo. Type: float
  *   LiteGraph id: mtlx/math/invert_float
  */
function mtlx_math_invert_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_invert_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'invert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_invert_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','float');
  this.addProperty('amount', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'invert_float';
  this.desc = "MaterialX:mtlx/math/invert_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_invert_float.nodedef_name = 'ND_invert_float';
mtlx_math_invert_float.nodedef_node = 'invert';
mtlx_math_invert_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invert.html';
LiteGraph.registerNodeType('mtlx/math/invert_float',mtlx_math_invert_float);

/**
  * @function mtlx_math_invert_color3
  * @description Library: mtlx. Category: invert. Type: color3
  *   LiteGraph id: mtlx/math/invert_color3
  */
function mtlx_math_invert_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_invert_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'invert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_invert_color3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','color3');
  this.addProperty('amount', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'invert_color3';
  this.desc = "MaterialX:mtlx/math/invert_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_invert_color3.nodedef_name = 'ND_invert_color3';
mtlx_math_invert_color3.nodedef_node = 'invert';
mtlx_math_invert_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invert.html';
LiteGraph.registerNodeType('mtlx/math/invert_color3',mtlx_math_invert_color3);

/**
  * @function mtlx_math_invert_color4
  * @description Library: mtlx. Category: invert. Type: color4
  *   LiteGraph id: mtlx/math/invert_color4
  */
function mtlx_math_invert_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_invert_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'invert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_invert_color4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','color4');
  this.addProperty('amount', [1.0, 1.0, 1.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'invert_color4';
  this.desc = "MaterialX:mtlx/math/invert_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_invert_color4.nodedef_name = 'ND_invert_color4';
mtlx_math_invert_color4.nodedef_node = 'invert';
mtlx_math_invert_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invert.html';
LiteGraph.registerNodeType('mtlx/math/invert_color4',mtlx_math_invert_color4);

/**
  * @function mtlx_math_invert_vector2
  * @description Library: mtlx. Category: invert. Type: vector2
  *   LiteGraph id: mtlx/math/invert_vector2
  */
function mtlx_math_invert_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_invert_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'invert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_invert_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','vector2');
  this.addProperty('amount', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'invert_vector2';
  this.desc = "MaterialX:mtlx/math/invert_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_invert_vector2.nodedef_name = 'ND_invert_vector2';
mtlx_math_invert_vector2.nodedef_node = 'invert';
mtlx_math_invert_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invert.html';
LiteGraph.registerNodeType('mtlx/math/invert_vector2',mtlx_math_invert_vector2);

/**
  * @function mtlx_math_invert_vector3
  * @description Library: mtlx. Category: invert. Type: vector3
  *   LiteGraph id: mtlx/math/invert_vector3
  */
function mtlx_math_invert_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_invert_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'invert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_invert_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','vector3');
  this.addProperty('amount', [1.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'invert_vector3';
  this.desc = "MaterialX:mtlx/math/invert_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_invert_vector3.nodedef_name = 'ND_invert_vector3';
mtlx_math_invert_vector3.nodedef_node = 'invert';
mtlx_math_invert_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invert.html';
LiteGraph.registerNodeType('mtlx/math/invert_vector3',mtlx_math_invert_vector3);

/**
  * @function mtlx_math_invert_vector4
  * @description Library: mtlx. Category: invert. Type: vector4
  *   LiteGraph id: mtlx/math/invert_vector4
  */
function mtlx_math_invert_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_invert_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'invert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_invert_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','vector4');
  this.addProperty('amount', [1.0, 1.0, 1.0, 1.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'invert_vector4';
  this.desc = "MaterialX:mtlx/math/invert_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_invert_vector4.nodedef_name = 'ND_invert_vector4';
mtlx_math_invert_vector4.nodedef_node = 'invert';
mtlx_math_invert_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invert.html';
LiteGraph.registerNodeType('mtlx/math/invert_vector4',mtlx_math_invert_vector4);

/**
  * @function mtlx_math_invert_color3FA
  * @description Library: mtlx. Category: invert. Type: color3
  *   LiteGraph id: mtlx/math/invert_color3FA
  */
function mtlx_math_invert_color3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_invert_color3FA';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'invert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_invert_color3FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','float');
  this.addProperty('amount', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'invert_color3';
  this.desc = "MaterialX:mtlx/math/invert_color3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_invert_color3FA.nodedef_name = 'ND_invert_color3FA';
mtlx_math_invert_color3FA.nodedef_node = 'invert';
mtlx_math_invert_color3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invert.html';
LiteGraph.registerNodeType('mtlx/math/invert_color3FA',mtlx_math_invert_color3FA);

/**
  * @function mtlx_math_invert_color4FA
  * @description Library: mtlx. Category: invert. Type: color4
  *   LiteGraph id: mtlx/math/invert_color4FA
  */
function mtlx_math_invert_color4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_invert_color4FA';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'invert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_invert_color4FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','float');
  this.addProperty('amount', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'invert_color4';
  this.desc = "MaterialX:mtlx/math/invert_color4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_invert_color4FA.nodedef_name = 'ND_invert_color4FA';
mtlx_math_invert_color4FA.nodedef_node = 'invert';
mtlx_math_invert_color4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invert.html';
LiteGraph.registerNodeType('mtlx/math/invert_color4FA',mtlx_math_invert_color4FA);

/**
  * @function mtlx_math_invert_vector2FA
  * @description Library: mtlx. Category: invert. Type: vector2
  *   LiteGraph id: mtlx/math/invert_vector2FA
  */
function mtlx_math_invert_vector2FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_invert_vector2FA';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'invert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_invert_vector2FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','float');
  this.addProperty('amount', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'invert_vector2';
  this.desc = "MaterialX:mtlx/math/invert_vector2FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_invert_vector2FA.nodedef_name = 'ND_invert_vector2FA';
mtlx_math_invert_vector2FA.nodedef_node = 'invert';
mtlx_math_invert_vector2FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invert.html';
LiteGraph.registerNodeType('mtlx/math/invert_vector2FA',mtlx_math_invert_vector2FA);

/**
  * @function mtlx_math_invert_vector3FA
  * @description Library: mtlx. Category: invert. Type: vector3
  *   LiteGraph id: mtlx/math/invert_vector3FA
  */
function mtlx_math_invert_vector3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_invert_vector3FA';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'invert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_invert_vector3FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','float');
  this.addProperty('amount', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'invert_vector3';
  this.desc = "MaterialX:mtlx/math/invert_vector3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_invert_vector3FA.nodedef_name = 'ND_invert_vector3FA';
mtlx_math_invert_vector3FA.nodedef_node = 'invert';
mtlx_math_invert_vector3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invert.html';
LiteGraph.registerNodeType('mtlx/math/invert_vector3FA',mtlx_math_invert_vector3FA);

/**
  * @function mtlx_math_invert_vector4FA
  * @description Library: mtlx. Category: invert. Type: vector4
  *   LiteGraph id: mtlx/math/invert_vector4FA
  */
function mtlx_math_invert_vector4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_invert_vector4FA';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'invert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_invert_vector4FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','float');
  this.addProperty('amount', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'invert_vector4';
  this.desc = "MaterialX:mtlx/math/invert_vector4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_invert_vector4FA.nodedef_name = 'ND_invert_vector4FA';
mtlx_math_invert_vector4FA.nodedef_node = 'invert';
mtlx_math_invert_vector4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invert.html';
LiteGraph.registerNodeType('mtlx/math/invert_vector4FA',mtlx_math_invert_vector4FA);

/**
  * @function mtlx_math_absval_float
  * @description Library: mtlx. Category: invert. Type: float
  *   LiteGraph id: mtlx/math/absval_float
  */
function mtlx_math_absval_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_absval_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'absval';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/absval.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_absval_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'absval_float';
  this.desc = "MaterialX:mtlx/math/absval_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_absval_float.nodedef_name = 'ND_absval_float';
mtlx_math_absval_float.nodedef_node = 'absval';
mtlx_math_absval_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/absval.html';
LiteGraph.registerNodeType('mtlx/math/absval_float',mtlx_math_absval_float);

/**
  * @function mtlx_math_absval_color3
  * @description Library: mtlx. Category: absval. Type: color3
  *   LiteGraph id: mtlx/math/absval_color3
  */
function mtlx_math_absval_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_absval_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'absval';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/absval.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_absval_color3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'absval_color3';
  this.desc = "MaterialX:mtlx/math/absval_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_absval_color3.nodedef_name = 'ND_absval_color3';
mtlx_math_absval_color3.nodedef_node = 'absval';
mtlx_math_absval_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/absval.html';
LiteGraph.registerNodeType('mtlx/math/absval_color3',mtlx_math_absval_color3);

/**
  * @function mtlx_math_absval_color4
  * @description Library: mtlx. Category: absval. Type: color4
  *   LiteGraph id: mtlx/math/absval_color4
  */
function mtlx_math_absval_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_absval_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'absval';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/absval.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_absval_color4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'absval_color4';
  this.desc = "MaterialX:mtlx/math/absval_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_absval_color4.nodedef_name = 'ND_absval_color4';
mtlx_math_absval_color4.nodedef_node = 'absval';
mtlx_math_absval_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/absval.html';
LiteGraph.registerNodeType('mtlx/math/absval_color4',mtlx_math_absval_color4);

/**
  * @function mtlx_math_absval_vector2
  * @description Library: mtlx. Category: absval. Type: vector2
  *   LiteGraph id: mtlx/math/absval_vector2
  */
function mtlx_math_absval_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_absval_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'absval';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/absval.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_absval_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'absval_vector2';
  this.desc = "MaterialX:mtlx/math/absval_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_absval_vector2.nodedef_name = 'ND_absval_vector2';
mtlx_math_absval_vector2.nodedef_node = 'absval';
mtlx_math_absval_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/absval.html';
LiteGraph.registerNodeType('mtlx/math/absval_vector2',mtlx_math_absval_vector2);

/**
  * @function mtlx_math_absval_vector3
  * @description Library: mtlx. Category: absval. Type: vector3
  *   LiteGraph id: mtlx/math/absval_vector3
  */
function mtlx_math_absval_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_absval_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'absval';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/absval.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_absval_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'absval_vector3';
  this.desc = "MaterialX:mtlx/math/absval_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_absval_vector3.nodedef_name = 'ND_absval_vector3';
mtlx_math_absval_vector3.nodedef_node = 'absval';
mtlx_math_absval_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/absval.html';
LiteGraph.registerNodeType('mtlx/math/absval_vector3',mtlx_math_absval_vector3);

/**
  * @function mtlx_math_absval_vector4
  * @description Library: mtlx. Category: absval. Type: vector4
  *   LiteGraph id: mtlx/math/absval_vector4
  */
function mtlx_math_absval_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_absval_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'absval';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/absval.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_absval_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'absval_vector4';
  this.desc = "MaterialX:mtlx/math/absval_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_absval_vector4.nodedef_name = 'ND_absval_vector4';
mtlx_math_absval_vector4.nodedef_node = 'absval';
mtlx_math_absval_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/absval.html';
LiteGraph.registerNodeType('mtlx/math/absval_vector4',mtlx_math_absval_vector4);

/**
  * @function mtlx_math_floor_float
  * @description Library: mtlx. Category: absval. Type: float
  *   LiteGraph id: mtlx/math/floor_float
  */
function mtlx_math_floor_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_floor_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'floor';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/floor.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_floor_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'floor_float';
  this.desc = "MaterialX:mtlx/math/floor_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_floor_float.nodedef_name = 'ND_floor_float';
mtlx_math_floor_float.nodedef_node = 'floor';
mtlx_math_floor_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/floor.html';
LiteGraph.registerNodeType('mtlx/math/floor_float',mtlx_math_floor_float);

/**
  * @function mtlx_math_floor_color3
  * @description Library: mtlx. Category: floor. Type: color3
  *   LiteGraph id: mtlx/math/floor_color3
  */
function mtlx_math_floor_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_floor_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'floor';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/floor.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_floor_color3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'floor_color3';
  this.desc = "MaterialX:mtlx/math/floor_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_floor_color3.nodedef_name = 'ND_floor_color3';
mtlx_math_floor_color3.nodedef_node = 'floor';
mtlx_math_floor_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/floor.html';
LiteGraph.registerNodeType('mtlx/math/floor_color3',mtlx_math_floor_color3);

/**
  * @function mtlx_math_floor_color4
  * @description Library: mtlx. Category: floor. Type: color4
  *   LiteGraph id: mtlx/math/floor_color4
  */
function mtlx_math_floor_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_floor_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'floor';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/floor.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_floor_color4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'floor_color4';
  this.desc = "MaterialX:mtlx/math/floor_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_floor_color4.nodedef_name = 'ND_floor_color4';
mtlx_math_floor_color4.nodedef_node = 'floor';
mtlx_math_floor_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/floor.html';
LiteGraph.registerNodeType('mtlx/math/floor_color4',mtlx_math_floor_color4);

/**
  * @function mtlx_math_floor_vector2
  * @description Library: mtlx. Category: floor. Type: vector2
  *   LiteGraph id: mtlx/math/floor_vector2
  */
function mtlx_math_floor_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_floor_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'floor';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/floor.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_floor_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'floor_vector2';
  this.desc = "MaterialX:mtlx/math/floor_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_floor_vector2.nodedef_name = 'ND_floor_vector2';
mtlx_math_floor_vector2.nodedef_node = 'floor';
mtlx_math_floor_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/floor.html';
LiteGraph.registerNodeType('mtlx/math/floor_vector2',mtlx_math_floor_vector2);

/**
  * @function mtlx_math_floor_vector3
  * @description Library: mtlx. Category: floor. Type: vector3
  *   LiteGraph id: mtlx/math/floor_vector3
  */
function mtlx_math_floor_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_floor_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'floor';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/floor.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_floor_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'floor_vector3';
  this.desc = "MaterialX:mtlx/math/floor_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_floor_vector3.nodedef_name = 'ND_floor_vector3';
mtlx_math_floor_vector3.nodedef_node = 'floor';
mtlx_math_floor_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/floor.html';
LiteGraph.registerNodeType('mtlx/math/floor_vector3',mtlx_math_floor_vector3);

/**
  * @function mtlx_math_floor_vector4
  * @description Library: mtlx. Category: floor. Type: vector4
  *   LiteGraph id: mtlx/math/floor_vector4
  */
function mtlx_math_floor_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_floor_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'floor';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/floor.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_floor_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'floor_vector4';
  this.desc = "MaterialX:mtlx/math/floor_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_floor_vector4.nodedef_name = 'ND_floor_vector4';
mtlx_math_floor_vector4.nodedef_node = 'floor';
mtlx_math_floor_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/floor.html';
LiteGraph.registerNodeType('mtlx/math/floor_vector4',mtlx_math_floor_vector4);

/**
  * @function mtlx_math_floor_integer
  * @description Library: mtlx. Category: floor. Type: integer
  *   LiteGraph id: mtlx/math/floor_integer
  */
function mtlx_math_floor_integer() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_floor_integer';
  this.nodedef_type = 'integer';
  this.nodedef_node = 'floor';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/floor.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_floor_integer_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','integer');
  this.title = 'floor_integer';
  this.desc = "MaterialX:mtlx/math/floor_integer";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#A32';
}
mtlx_math_floor_integer.nodedef_name = 'ND_floor_integer';
mtlx_math_floor_integer.nodedef_node = 'floor';
mtlx_math_floor_integer.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/floor.html';
LiteGraph.registerNodeType('mtlx/math/floor_integer',mtlx_math_floor_integer);

/**
  * @function mtlx_math_ceil_float
  * @description Library: mtlx. Category: floor. Type: float
  *   LiteGraph id: mtlx/math/ceil_float
  */
function mtlx_math_ceil_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ceil_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'ceil';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ceil.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ceil_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'ceil_float';
  this.desc = "MaterialX:mtlx/math/ceil_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_ceil_float.nodedef_name = 'ND_ceil_float';
mtlx_math_ceil_float.nodedef_node = 'ceil';
mtlx_math_ceil_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ceil.html';
LiteGraph.registerNodeType('mtlx/math/ceil_float',mtlx_math_ceil_float);

/**
  * @function mtlx_math_ceil_color3
  * @description Library: mtlx. Category: ceil. Type: color3
  *   LiteGraph id: mtlx/math/ceil_color3
  */
function mtlx_math_ceil_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ceil_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'ceil';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ceil.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ceil_color3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'ceil_color3';
  this.desc = "MaterialX:mtlx/math/ceil_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_ceil_color3.nodedef_name = 'ND_ceil_color3';
mtlx_math_ceil_color3.nodedef_node = 'ceil';
mtlx_math_ceil_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ceil.html';
LiteGraph.registerNodeType('mtlx/math/ceil_color3',mtlx_math_ceil_color3);

/**
  * @function mtlx_math_ceil_color4
  * @description Library: mtlx. Category: ceil. Type: color4
  *   LiteGraph id: mtlx/math/ceil_color4
  */
function mtlx_math_ceil_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ceil_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'ceil';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ceil.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ceil_color4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'ceil_color4';
  this.desc = "MaterialX:mtlx/math/ceil_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_ceil_color4.nodedef_name = 'ND_ceil_color4';
mtlx_math_ceil_color4.nodedef_node = 'ceil';
mtlx_math_ceil_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ceil.html';
LiteGraph.registerNodeType('mtlx/math/ceil_color4',mtlx_math_ceil_color4);

/**
  * @function mtlx_math_ceil_vector2
  * @description Library: mtlx. Category: ceil. Type: vector2
  *   LiteGraph id: mtlx/math/ceil_vector2
  */
function mtlx_math_ceil_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ceil_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'ceil';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ceil.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ceil_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'ceil_vector2';
  this.desc = "MaterialX:mtlx/math/ceil_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_ceil_vector2.nodedef_name = 'ND_ceil_vector2';
mtlx_math_ceil_vector2.nodedef_node = 'ceil';
mtlx_math_ceil_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ceil.html';
LiteGraph.registerNodeType('mtlx/math/ceil_vector2',mtlx_math_ceil_vector2);

/**
  * @function mtlx_math_ceil_vector3
  * @description Library: mtlx. Category: ceil. Type: vector3
  *   LiteGraph id: mtlx/math/ceil_vector3
  */
function mtlx_math_ceil_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ceil_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'ceil';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ceil.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ceil_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'ceil_vector3';
  this.desc = "MaterialX:mtlx/math/ceil_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_ceil_vector3.nodedef_name = 'ND_ceil_vector3';
mtlx_math_ceil_vector3.nodedef_node = 'ceil';
mtlx_math_ceil_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ceil.html';
LiteGraph.registerNodeType('mtlx/math/ceil_vector3',mtlx_math_ceil_vector3);

/**
  * @function mtlx_math_ceil_vector4
  * @description Library: mtlx. Category: ceil. Type: vector4
  *   LiteGraph id: mtlx/math/ceil_vector4
  */
function mtlx_math_ceil_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ceil_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'ceil';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ceil.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ceil_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'ceil_vector4';
  this.desc = "MaterialX:mtlx/math/ceil_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_ceil_vector4.nodedef_name = 'ND_ceil_vector4';
mtlx_math_ceil_vector4.nodedef_node = 'ceil';
mtlx_math_ceil_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ceil.html';
LiteGraph.registerNodeType('mtlx/math/ceil_vector4',mtlx_math_ceil_vector4);

/**
  * @function mtlx_math_ceil_integer
  * @description Library: mtlx. Category: ceil. Type: integer
  *   LiteGraph id: mtlx/math/ceil_integer
  */
function mtlx_math_ceil_integer() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ceil_integer';
  this.nodedef_type = 'integer';
  this.nodedef_node = 'ceil';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ceil.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ceil_integer_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','integer');
  this.title = 'ceil_integer';
  this.desc = "MaterialX:mtlx/math/ceil_integer";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#A32';
}
mtlx_math_ceil_integer.nodedef_name = 'ND_ceil_integer';
mtlx_math_ceil_integer.nodedef_node = 'ceil';
mtlx_math_ceil_integer.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ceil.html';
LiteGraph.registerNodeType('mtlx/math/ceil_integer',mtlx_math_ceil_integer);

/**
  * @function mtlx_math_round_float
  * @description Library: mtlx. Category: ceil. Type: float
  *   LiteGraph id: mtlx/math/round_float
  */
function mtlx_math_round_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_round_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'round';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/round.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_round_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'round_float';
  this.desc = "MaterialX:mtlx/math/round_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_round_float.nodedef_name = 'ND_round_float';
mtlx_math_round_float.nodedef_node = 'round';
mtlx_math_round_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/round.html';
LiteGraph.registerNodeType('mtlx/math/round_float',mtlx_math_round_float);

/**
  * @function mtlx_math_round_color3
  * @description Library: mtlx. Category: round. Type: color3
  *   LiteGraph id: mtlx/math/round_color3
  */
function mtlx_math_round_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_round_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'round';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/round.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_round_color3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'round_color3';
  this.desc = "MaterialX:mtlx/math/round_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_round_color3.nodedef_name = 'ND_round_color3';
mtlx_math_round_color3.nodedef_node = 'round';
mtlx_math_round_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/round.html';
LiteGraph.registerNodeType('mtlx/math/round_color3',mtlx_math_round_color3);

/**
  * @function mtlx_math_round_color4
  * @description Library: mtlx. Category: round. Type: color4
  *   LiteGraph id: mtlx/math/round_color4
  */
function mtlx_math_round_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_round_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'round';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/round.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_round_color4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'round_color4';
  this.desc = "MaterialX:mtlx/math/round_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_round_color4.nodedef_name = 'ND_round_color4';
mtlx_math_round_color4.nodedef_node = 'round';
mtlx_math_round_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/round.html';
LiteGraph.registerNodeType('mtlx/math/round_color4',mtlx_math_round_color4);

/**
  * @function mtlx_math_round_vector2
  * @description Library: mtlx. Category: round. Type: vector2
  *   LiteGraph id: mtlx/math/round_vector2
  */
function mtlx_math_round_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_round_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'round';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/round.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_round_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'round_vector2';
  this.desc = "MaterialX:mtlx/math/round_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_round_vector2.nodedef_name = 'ND_round_vector2';
mtlx_math_round_vector2.nodedef_node = 'round';
mtlx_math_round_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/round.html';
LiteGraph.registerNodeType('mtlx/math/round_vector2',mtlx_math_round_vector2);

/**
  * @function mtlx_math_round_vector3
  * @description Library: mtlx. Category: round. Type: vector3
  *   LiteGraph id: mtlx/math/round_vector3
  */
function mtlx_math_round_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_round_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'round';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/round.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_round_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'round_vector3';
  this.desc = "MaterialX:mtlx/math/round_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_round_vector3.nodedef_name = 'ND_round_vector3';
mtlx_math_round_vector3.nodedef_node = 'round';
mtlx_math_round_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/round.html';
LiteGraph.registerNodeType('mtlx/math/round_vector3',mtlx_math_round_vector3);

/**
  * @function mtlx_math_round_vector4
  * @description Library: mtlx. Category: round. Type: vector4
  *   LiteGraph id: mtlx/math/round_vector4
  */
function mtlx_math_round_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_round_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'round';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/round.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_round_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'round_vector4';
  this.desc = "MaterialX:mtlx/math/round_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_round_vector4.nodedef_name = 'ND_round_vector4';
mtlx_math_round_vector4.nodedef_node = 'round';
mtlx_math_round_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/round.html';
LiteGraph.registerNodeType('mtlx/math/round_vector4',mtlx_math_round_vector4);

/**
  * @function mtlx_math_round_integer
  * @description Library: mtlx. Category: round. Type: integer
  *   LiteGraph id: mtlx/math/round_integer
  */
function mtlx_math_round_integer() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_round_integer';
  this.nodedef_type = 'integer';
  this.nodedef_node = 'round';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/round.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_round_integer_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','integer');
  this.title = 'round_integer';
  this.desc = "MaterialX:mtlx/math/round_integer";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#A32';
}
mtlx_math_round_integer.nodedef_name = 'ND_round_integer';
mtlx_math_round_integer.nodedef_node = 'round';
mtlx_math_round_integer.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/round.html';
LiteGraph.registerNodeType('mtlx/math/round_integer',mtlx_math_round_integer);

/**
  * @function mtlx_math_power_float
  * @description Library: mtlx. Category: round. Type: float
  *   LiteGraph id: mtlx/math/power_float
  */
function mtlx_math_power_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_power_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'power';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/power.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_power_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','float');
  this.addProperty('in1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'power_float';
  this.desc = "MaterialX:mtlx/math/power_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_power_float.nodedef_name = 'ND_power_float';
mtlx_math_power_float.nodedef_node = 'power';
mtlx_math_power_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/power.html';
LiteGraph.registerNodeType('mtlx/math/power_float',mtlx_math_power_float);

/**
  * @function mtlx_math_power_color3
  * @description Library: mtlx. Category: power. Type: color3
  *   LiteGraph id: mtlx/math/power_color3
  */
function mtlx_math_power_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_power_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'power';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/power.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_power_color3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color3');
  this.addProperty('in2', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'power_color3';
  this.desc = "MaterialX:mtlx/math/power_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_power_color3.nodedef_name = 'ND_power_color3';
mtlx_math_power_color3.nodedef_node = 'power';
mtlx_math_power_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/power.html';
LiteGraph.registerNodeType('mtlx/math/power_color3',mtlx_math_power_color3);

/**
  * @function mtlx_math_power_color4
  * @description Library: mtlx. Category: power. Type: color4
  *   LiteGraph id: mtlx/math/power_color4
  */
function mtlx_math_power_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_power_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'power';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/power.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_power_color4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color4');
  this.addProperty('in2', [1.0, 1.0, 1.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'power_color4';
  this.desc = "MaterialX:mtlx/math/power_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_power_color4.nodedef_name = 'ND_power_color4';
mtlx_math_power_color4.nodedef_node = 'power';
mtlx_math_power_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/power.html';
LiteGraph.registerNodeType('mtlx/math/power_color4',mtlx_math_power_color4);

/**
  * @function mtlx_math_power_vector2
  * @description Library: mtlx. Category: power. Type: vector2
  *   LiteGraph id: mtlx/math/power_vector2
  */
function mtlx_math_power_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_power_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'power';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/power.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_power_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector2');
  this.addProperty('in2', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'power_vector2';
  this.desc = "MaterialX:mtlx/math/power_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_power_vector2.nodedef_name = 'ND_power_vector2';
mtlx_math_power_vector2.nodedef_node = 'power';
mtlx_math_power_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/power.html';
LiteGraph.registerNodeType('mtlx/math/power_vector2',mtlx_math_power_vector2);

/**
  * @function mtlx_math_power_vector3
  * @description Library: mtlx. Category: power. Type: vector3
  *   LiteGraph id: mtlx/math/power_vector3
  */
function mtlx_math_power_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_power_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'power';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/power.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_power_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector3');
  this.addProperty('in2', [1.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'power_vector3';
  this.desc = "MaterialX:mtlx/math/power_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_power_vector3.nodedef_name = 'ND_power_vector3';
mtlx_math_power_vector3.nodedef_node = 'power';
mtlx_math_power_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/power.html';
LiteGraph.registerNodeType('mtlx/math/power_vector3',mtlx_math_power_vector3);

/**
  * @function mtlx_math_power_vector4
  * @description Library: mtlx. Category: power. Type: vector4
  *   LiteGraph id: mtlx/math/power_vector4
  */
function mtlx_math_power_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_power_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'power';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/power.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_power_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector4');
  this.addProperty('in2', [1.0, 1.0, 1.0, 1.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'power_vector4';
  this.desc = "MaterialX:mtlx/math/power_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_power_vector4.nodedef_name = 'ND_power_vector4';
mtlx_math_power_vector4.nodedef_node = 'power';
mtlx_math_power_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/power.html';
LiteGraph.registerNodeType('mtlx/math/power_vector4',mtlx_math_power_vector4);

/**
  * @function mtlx_math_power_color3FA
  * @description Library: mtlx. Category: power. Type: color3
  *   LiteGraph id: mtlx/math/power_color3FA
  */
function mtlx_math_power_color3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_power_color3FA';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'power';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/power.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_power_color3FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'power_color3';
  this.desc = "MaterialX:mtlx/math/power_color3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_power_color3FA.nodedef_name = 'ND_power_color3FA';
mtlx_math_power_color3FA.nodedef_node = 'power';
mtlx_math_power_color3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/power.html';
LiteGraph.registerNodeType('mtlx/math/power_color3FA',mtlx_math_power_color3FA);

/**
  * @function mtlx_math_power_color4FA
  * @description Library: mtlx. Category: power. Type: color4
  *   LiteGraph id: mtlx/math/power_color4FA
  */
function mtlx_math_power_color4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_power_color4FA';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'power';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/power.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_power_color4FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'power_color4';
  this.desc = "MaterialX:mtlx/math/power_color4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_power_color4FA.nodedef_name = 'ND_power_color4FA';
mtlx_math_power_color4FA.nodedef_node = 'power';
mtlx_math_power_color4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/power.html';
LiteGraph.registerNodeType('mtlx/math/power_color4FA',mtlx_math_power_color4FA);

/**
  * @function mtlx_math_power_vector2FA
  * @description Library: mtlx. Category: power. Type: vector2
  *   LiteGraph id: mtlx/math/power_vector2FA
  */
function mtlx_math_power_vector2FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_power_vector2FA';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'power';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/power.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_power_vector2FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'power_vector2';
  this.desc = "MaterialX:mtlx/math/power_vector2FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_power_vector2FA.nodedef_name = 'ND_power_vector2FA';
mtlx_math_power_vector2FA.nodedef_node = 'power';
mtlx_math_power_vector2FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/power.html';
LiteGraph.registerNodeType('mtlx/math/power_vector2FA',mtlx_math_power_vector2FA);

/**
  * @function mtlx_math_power_vector3FA
  * @description Library: mtlx. Category: power. Type: vector3
  *   LiteGraph id: mtlx/math/power_vector3FA
  */
function mtlx_math_power_vector3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_power_vector3FA';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'power';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/power.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_power_vector3FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'power_vector3';
  this.desc = "MaterialX:mtlx/math/power_vector3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_power_vector3FA.nodedef_name = 'ND_power_vector3FA';
mtlx_math_power_vector3FA.nodedef_node = 'power';
mtlx_math_power_vector3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/power.html';
LiteGraph.registerNodeType('mtlx/math/power_vector3FA',mtlx_math_power_vector3FA);

/**
  * @function mtlx_math_power_vector4FA
  * @description Library: mtlx. Category: power. Type: vector4
  *   LiteGraph id: mtlx/math/power_vector4FA
  */
function mtlx_math_power_vector4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_power_vector4FA';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'power';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/power.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_power_vector4FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'power_vector4';
  this.desc = "MaterialX:mtlx/math/power_vector4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_power_vector4FA.nodedef_name = 'ND_power_vector4FA';
mtlx_math_power_vector4FA.nodedef_node = 'power';
mtlx_math_power_vector4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/power.html';
LiteGraph.registerNodeType('mtlx/math/power_vector4FA',mtlx_math_power_vector4FA);

/**
  * @function mtlx_math_safepower_float
  * @description Library: mtlx. Category: power. Type: float
  *   LiteGraph id: mtlx/math/safepower_float
  */
function mtlx_math_safepower_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_safepower_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'safepower';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/safepower.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_safepower_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','float');
  this.addProperty('in1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'safepower_float';
  this.desc = "MaterialX:mtlx/math/safepower_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_safepower_float.nodedef_name = 'ND_safepower_float';
mtlx_math_safepower_float.nodedef_node = 'safepower';
mtlx_math_safepower_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/safepower.html';
LiteGraph.registerNodeType('mtlx/math/safepower_float',mtlx_math_safepower_float);

/**
  * @function mtlx_math_safepower_color3
  * @description Library: mtlx. Category: safepower. Type: color3
  *   LiteGraph id: mtlx/math/safepower_color3
  */
function mtlx_math_safepower_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_safepower_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'safepower';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/safepower.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_safepower_color3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color3');
  this.addProperty('in2', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'safepower_color3';
  this.desc = "MaterialX:mtlx/math/safepower_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_safepower_color3.nodedef_name = 'ND_safepower_color3';
mtlx_math_safepower_color3.nodedef_node = 'safepower';
mtlx_math_safepower_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/safepower.html';
LiteGraph.registerNodeType('mtlx/math/safepower_color3',mtlx_math_safepower_color3);

/**
  * @function mtlx_math_safepower_color4
  * @description Library: mtlx. Category: safepower. Type: color4
  *   LiteGraph id: mtlx/math/safepower_color4
  */
function mtlx_math_safepower_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_safepower_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'safepower';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/safepower.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_safepower_color4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color4');
  this.addProperty('in2', [1.0, 1.0, 1.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'safepower_color4';
  this.desc = "MaterialX:mtlx/math/safepower_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_safepower_color4.nodedef_name = 'ND_safepower_color4';
mtlx_math_safepower_color4.nodedef_node = 'safepower';
mtlx_math_safepower_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/safepower.html';
LiteGraph.registerNodeType('mtlx/math/safepower_color4',mtlx_math_safepower_color4);

/**
  * @function mtlx_math_safepower_vector2
  * @description Library: mtlx. Category: safepower. Type: vector2
  *   LiteGraph id: mtlx/math/safepower_vector2
  */
function mtlx_math_safepower_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_safepower_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'safepower';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/safepower.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_safepower_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector2');
  this.addProperty('in2', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'safepower_vector2';
  this.desc = "MaterialX:mtlx/math/safepower_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_safepower_vector2.nodedef_name = 'ND_safepower_vector2';
mtlx_math_safepower_vector2.nodedef_node = 'safepower';
mtlx_math_safepower_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/safepower.html';
LiteGraph.registerNodeType('mtlx/math/safepower_vector2',mtlx_math_safepower_vector2);

/**
  * @function mtlx_math_safepower_vector3
  * @description Library: mtlx. Category: safepower. Type: vector3
  *   LiteGraph id: mtlx/math/safepower_vector3
  */
function mtlx_math_safepower_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_safepower_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'safepower';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/safepower.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_safepower_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector3');
  this.addProperty('in2', [1.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'safepower_vector3';
  this.desc = "MaterialX:mtlx/math/safepower_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_safepower_vector3.nodedef_name = 'ND_safepower_vector3';
mtlx_math_safepower_vector3.nodedef_node = 'safepower';
mtlx_math_safepower_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/safepower.html';
LiteGraph.registerNodeType('mtlx/math/safepower_vector3',mtlx_math_safepower_vector3);

/**
  * @function mtlx_math_safepower_vector4
  * @description Library: mtlx. Category: safepower. Type: vector4
  *   LiteGraph id: mtlx/math/safepower_vector4
  */
function mtlx_math_safepower_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_safepower_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'safepower';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/safepower.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_safepower_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector4');
  this.addProperty('in2', [1.0, 1.0, 1.0, 1.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'safepower_vector4';
  this.desc = "MaterialX:mtlx/math/safepower_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_safepower_vector4.nodedef_name = 'ND_safepower_vector4';
mtlx_math_safepower_vector4.nodedef_node = 'safepower';
mtlx_math_safepower_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/safepower.html';
LiteGraph.registerNodeType('mtlx/math/safepower_vector4',mtlx_math_safepower_vector4);

/**
  * @function mtlx_math_safepower_color3FA
  * @description Library: mtlx. Category: safepower. Type: color3
  *   LiteGraph id: mtlx/math/safepower_color3FA
  */
function mtlx_math_safepower_color3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_safepower_color3FA';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'safepower';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/safepower.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_safepower_color3FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'safepower_color3';
  this.desc = "MaterialX:mtlx/math/safepower_color3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_safepower_color3FA.nodedef_name = 'ND_safepower_color3FA';
mtlx_math_safepower_color3FA.nodedef_node = 'safepower';
mtlx_math_safepower_color3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/safepower.html';
LiteGraph.registerNodeType('mtlx/math/safepower_color3FA',mtlx_math_safepower_color3FA);

/**
  * @function mtlx_math_safepower_color4FA
  * @description Library: mtlx. Category: safepower. Type: color4
  *   LiteGraph id: mtlx/math/safepower_color4FA
  */
function mtlx_math_safepower_color4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_safepower_color4FA';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'safepower';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/safepower.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_safepower_color4FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'safepower_color4';
  this.desc = "MaterialX:mtlx/math/safepower_color4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_safepower_color4FA.nodedef_name = 'ND_safepower_color4FA';
mtlx_math_safepower_color4FA.nodedef_node = 'safepower';
mtlx_math_safepower_color4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/safepower.html';
LiteGraph.registerNodeType('mtlx/math/safepower_color4FA',mtlx_math_safepower_color4FA);

/**
  * @function mtlx_math_safepower_vector2FA
  * @description Library: mtlx. Category: safepower. Type: vector2
  *   LiteGraph id: mtlx/math/safepower_vector2FA
  */
function mtlx_math_safepower_vector2FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_safepower_vector2FA';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'safepower';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/safepower.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_safepower_vector2FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'safepower_vector2';
  this.desc = "MaterialX:mtlx/math/safepower_vector2FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_safepower_vector2FA.nodedef_name = 'ND_safepower_vector2FA';
mtlx_math_safepower_vector2FA.nodedef_node = 'safepower';
mtlx_math_safepower_vector2FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/safepower.html';
LiteGraph.registerNodeType('mtlx/math/safepower_vector2FA',mtlx_math_safepower_vector2FA);

/**
  * @function mtlx_math_safepower_vector3FA
  * @description Library: mtlx. Category: safepower. Type: vector3
  *   LiteGraph id: mtlx/math/safepower_vector3FA
  */
function mtlx_math_safepower_vector3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_safepower_vector3FA';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'safepower';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/safepower.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_safepower_vector3FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'safepower_vector3';
  this.desc = "MaterialX:mtlx/math/safepower_vector3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_safepower_vector3FA.nodedef_name = 'ND_safepower_vector3FA';
mtlx_math_safepower_vector3FA.nodedef_node = 'safepower';
mtlx_math_safepower_vector3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/safepower.html';
LiteGraph.registerNodeType('mtlx/math/safepower_vector3FA',mtlx_math_safepower_vector3FA);

/**
  * @function mtlx_math_safepower_vector4FA
  * @description Library: mtlx. Category: safepower. Type: vector4
  *   LiteGraph id: mtlx/math/safepower_vector4FA
  */
function mtlx_math_safepower_vector4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_safepower_vector4FA';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'safepower';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/safepower.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_safepower_vector4FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'safepower_vector4';
  this.desc = "MaterialX:mtlx/math/safepower_vector4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_safepower_vector4FA.nodedef_name = 'ND_safepower_vector4FA';
mtlx_math_safepower_vector4FA.nodedef_node = 'safepower';
mtlx_math_safepower_vector4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/safepower.html';
LiteGraph.registerNodeType('mtlx/math/safepower_vector4FA',mtlx_math_safepower_vector4FA);

/**
  * @function mtlx_math_sin_float
  * @description Library: mtlx. Category: safepower. Type: float
  *   LiteGraph id: mtlx/math/sin_float
  */
function mtlx_math_sin_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_sin_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'sin';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sin.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_sin_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'sin_float';
  this.desc = "MaterialX:mtlx/math/sin_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_sin_float.nodedef_name = 'ND_sin_float';
mtlx_math_sin_float.nodedef_node = 'sin';
mtlx_math_sin_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sin.html';
LiteGraph.registerNodeType('mtlx/math/sin_float',mtlx_math_sin_float);

/**
  * @function mtlx_math_cos_float
  * @description Library: mtlx. Category: sin. Type: float
  *   LiteGraph id: mtlx/math/cos_float
  */
function mtlx_math_cos_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_cos_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'cos';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/cos.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_cos_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'cos_float';
  this.desc = "MaterialX:mtlx/math/cos_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_cos_float.nodedef_name = 'ND_cos_float';
mtlx_math_cos_float.nodedef_node = 'cos';
mtlx_math_cos_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/cos.html';
LiteGraph.registerNodeType('mtlx/math/cos_float',mtlx_math_cos_float);

/**
  * @function mtlx_math_tan_float
  * @description Library: mtlx. Category: cos. Type: float
  *   LiteGraph id: mtlx/math/tan_float
  */
function mtlx_math_tan_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_tan_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'tan';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tan.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_tan_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'tan_float';
  this.desc = "MaterialX:mtlx/math/tan_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_tan_float.nodedef_name = 'ND_tan_float';
mtlx_math_tan_float.nodedef_node = 'tan';
mtlx_math_tan_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tan.html';
LiteGraph.registerNodeType('mtlx/math/tan_float',mtlx_math_tan_float);

/**
  * @function mtlx_math_asin_float
  * @description Library: mtlx. Category: tan. Type: float
  *   LiteGraph id: mtlx/math/asin_float
  */
function mtlx_math_asin_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_asin_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'asin';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/asin.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_asin_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'asin_float';
  this.desc = "MaterialX:mtlx/math/asin_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_asin_float.nodedef_name = 'ND_asin_float';
mtlx_math_asin_float.nodedef_node = 'asin';
mtlx_math_asin_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/asin.html';
LiteGraph.registerNodeType('mtlx/math/asin_float',mtlx_math_asin_float);

/**
  * @function mtlx_math_acos_float
  * @description Library: mtlx. Category: asin. Type: float
  *   LiteGraph id: mtlx/math/acos_float
  */
function mtlx_math_acos_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_acos_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'acos';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/acos.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_acos_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'acos_float';
  this.desc = "MaterialX:mtlx/math/acos_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_acos_float.nodedef_name = 'ND_acos_float';
mtlx_math_acos_float.nodedef_node = 'acos';
mtlx_math_acos_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/acos.html';
LiteGraph.registerNodeType('mtlx/math/acos_float',mtlx_math_acos_float);

/**
  * @function mtlx_math_atan2_float
  * @description Library: mtlx. Category: acos. Type: float
  *   LiteGraph id: mtlx/math/atan2_float
  */
function mtlx_math_atan2_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_atan2_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'atan2';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/atan2.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_atan2_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('iny','float');
  this.addProperty('iny', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inx','float');
  this.addProperty('inx', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'atan2_float';
  this.desc = "MaterialX:mtlx/math/atan2_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_atan2_float.nodedef_name = 'ND_atan2_float';
mtlx_math_atan2_float.nodedef_node = 'atan2';
mtlx_math_atan2_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/atan2.html';
LiteGraph.registerNodeType('mtlx/math/atan2_float',mtlx_math_atan2_float);

/**
  * @function mtlx_math_sin_vector2
  * @description Library: mtlx. Category: atan2. Type: vector2
  *   LiteGraph id: mtlx/math/sin_vector2
  */
function mtlx_math_sin_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_sin_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'sin';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sin.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_sin_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'sin_vector2';
  this.desc = "MaterialX:mtlx/math/sin_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_sin_vector2.nodedef_name = 'ND_sin_vector2';
mtlx_math_sin_vector2.nodedef_node = 'sin';
mtlx_math_sin_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sin.html';
LiteGraph.registerNodeType('mtlx/math/sin_vector2',mtlx_math_sin_vector2);

/**
  * @function mtlx_math_cos_vector2
  * @description Library: mtlx. Category: sin. Type: vector2
  *   LiteGraph id: mtlx/math/cos_vector2
  */
function mtlx_math_cos_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_cos_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'cos';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/cos.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_cos_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'cos_vector2';
  this.desc = "MaterialX:mtlx/math/cos_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_cos_vector2.nodedef_name = 'ND_cos_vector2';
mtlx_math_cos_vector2.nodedef_node = 'cos';
mtlx_math_cos_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/cos.html';
LiteGraph.registerNodeType('mtlx/math/cos_vector2',mtlx_math_cos_vector2);

/**
  * @function mtlx_math_tan_vector2
  * @description Library: mtlx. Category: cos. Type: vector2
  *   LiteGraph id: mtlx/math/tan_vector2
  */
function mtlx_math_tan_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_tan_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'tan';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tan.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_tan_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'tan_vector2';
  this.desc = "MaterialX:mtlx/math/tan_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_tan_vector2.nodedef_name = 'ND_tan_vector2';
mtlx_math_tan_vector2.nodedef_node = 'tan';
mtlx_math_tan_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tan.html';
LiteGraph.registerNodeType('mtlx/math/tan_vector2',mtlx_math_tan_vector2);

/**
  * @function mtlx_math_asin_vector2
  * @description Library: mtlx. Category: tan. Type: vector2
  *   LiteGraph id: mtlx/math/asin_vector2
  */
function mtlx_math_asin_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_asin_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'asin';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/asin.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_asin_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'asin_vector2';
  this.desc = "MaterialX:mtlx/math/asin_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_asin_vector2.nodedef_name = 'ND_asin_vector2';
mtlx_math_asin_vector2.nodedef_node = 'asin';
mtlx_math_asin_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/asin.html';
LiteGraph.registerNodeType('mtlx/math/asin_vector2',mtlx_math_asin_vector2);

/**
  * @function mtlx_math_acos_vector2
  * @description Library: mtlx. Category: asin. Type: vector2
  *   LiteGraph id: mtlx/math/acos_vector2
  */
function mtlx_math_acos_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_acos_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'acos';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/acos.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_acos_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'acos_vector2';
  this.desc = "MaterialX:mtlx/math/acos_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_acos_vector2.nodedef_name = 'ND_acos_vector2';
mtlx_math_acos_vector2.nodedef_node = 'acos';
mtlx_math_acos_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/acos.html';
LiteGraph.registerNodeType('mtlx/math/acos_vector2',mtlx_math_acos_vector2);

/**
  * @function mtlx_math_atan2_vector2
  * @description Library: mtlx. Category: acos. Type: vector2
  *   LiteGraph id: mtlx/math/atan2_vector2
  */
function mtlx_math_atan2_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_atan2_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'atan2';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/atan2.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_atan2_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('iny','vector2');
  this.addProperty('iny', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inx','vector2');
  this.addProperty('inx', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'atan2_vector2';
  this.desc = "MaterialX:mtlx/math/atan2_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_atan2_vector2.nodedef_name = 'ND_atan2_vector2';
mtlx_math_atan2_vector2.nodedef_node = 'atan2';
mtlx_math_atan2_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/atan2.html';
LiteGraph.registerNodeType('mtlx/math/atan2_vector2',mtlx_math_atan2_vector2);

/**
  * @function mtlx_math_sin_vector3
  * @description Library: mtlx. Category: atan2. Type: vector3
  *   LiteGraph id: mtlx/math/sin_vector3
  */
function mtlx_math_sin_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_sin_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'sin';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sin.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_sin_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'sin_vector3';
  this.desc = "MaterialX:mtlx/math/sin_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_sin_vector3.nodedef_name = 'ND_sin_vector3';
mtlx_math_sin_vector3.nodedef_node = 'sin';
mtlx_math_sin_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sin.html';
LiteGraph.registerNodeType('mtlx/math/sin_vector3',mtlx_math_sin_vector3);

/**
  * @function mtlx_math_cos_vector3
  * @description Library: mtlx. Category: sin. Type: vector3
  *   LiteGraph id: mtlx/math/cos_vector3
  */
function mtlx_math_cos_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_cos_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'cos';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/cos.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_cos_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'cos_vector3';
  this.desc = "MaterialX:mtlx/math/cos_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_cos_vector3.nodedef_name = 'ND_cos_vector3';
mtlx_math_cos_vector3.nodedef_node = 'cos';
mtlx_math_cos_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/cos.html';
LiteGraph.registerNodeType('mtlx/math/cos_vector3',mtlx_math_cos_vector3);

/**
  * @function mtlx_math_tan_vector3
  * @description Library: mtlx. Category: cos. Type: vector3
  *   LiteGraph id: mtlx/math/tan_vector3
  */
function mtlx_math_tan_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_tan_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'tan';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tan.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_tan_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'tan_vector3';
  this.desc = "MaterialX:mtlx/math/tan_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_tan_vector3.nodedef_name = 'ND_tan_vector3';
mtlx_math_tan_vector3.nodedef_node = 'tan';
mtlx_math_tan_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tan.html';
LiteGraph.registerNodeType('mtlx/math/tan_vector3',mtlx_math_tan_vector3);

/**
  * @function mtlx_math_asin_vector3
  * @description Library: mtlx. Category: tan. Type: vector3
  *   LiteGraph id: mtlx/math/asin_vector3
  */
function mtlx_math_asin_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_asin_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'asin';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/asin.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_asin_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'asin_vector3';
  this.desc = "MaterialX:mtlx/math/asin_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_asin_vector3.nodedef_name = 'ND_asin_vector3';
mtlx_math_asin_vector3.nodedef_node = 'asin';
mtlx_math_asin_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/asin.html';
LiteGraph.registerNodeType('mtlx/math/asin_vector3',mtlx_math_asin_vector3);

/**
  * @function mtlx_math_acos_vector3
  * @description Library: mtlx. Category: asin. Type: vector3
  *   LiteGraph id: mtlx/math/acos_vector3
  */
function mtlx_math_acos_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_acos_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'acos';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/acos.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_acos_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'acos_vector3';
  this.desc = "MaterialX:mtlx/math/acos_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_acos_vector3.nodedef_name = 'ND_acos_vector3';
mtlx_math_acos_vector3.nodedef_node = 'acos';
mtlx_math_acos_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/acos.html';
LiteGraph.registerNodeType('mtlx/math/acos_vector3',mtlx_math_acos_vector3);

/**
  * @function mtlx_math_atan2_vector3
  * @description Library: mtlx. Category: acos. Type: vector3
  *   LiteGraph id: mtlx/math/atan2_vector3
  */
function mtlx_math_atan2_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_atan2_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'atan2';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/atan2.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_atan2_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('iny','vector3');
  this.addProperty('iny', [1.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inx','vector3');
  this.addProperty('inx', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'atan2_vector3';
  this.desc = "MaterialX:mtlx/math/atan2_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_atan2_vector3.nodedef_name = 'ND_atan2_vector3';
mtlx_math_atan2_vector3.nodedef_node = 'atan2';
mtlx_math_atan2_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/atan2.html';
LiteGraph.registerNodeType('mtlx/math/atan2_vector3',mtlx_math_atan2_vector3);

/**
  * @function mtlx_math_sin_vector4
  * @description Library: mtlx. Category: atan2. Type: vector4
  *   LiteGraph id: mtlx/math/sin_vector4
  */
function mtlx_math_sin_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_sin_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'sin';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sin.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_sin_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'sin_vector4';
  this.desc = "MaterialX:mtlx/math/sin_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_sin_vector4.nodedef_name = 'ND_sin_vector4';
mtlx_math_sin_vector4.nodedef_node = 'sin';
mtlx_math_sin_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sin.html';
LiteGraph.registerNodeType('mtlx/math/sin_vector4',mtlx_math_sin_vector4);

/**
  * @function mtlx_math_cos_vector4
  * @description Library: mtlx. Category: sin. Type: vector4
  *   LiteGraph id: mtlx/math/cos_vector4
  */
function mtlx_math_cos_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_cos_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'cos';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/cos.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_cos_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'cos_vector4';
  this.desc = "MaterialX:mtlx/math/cos_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_cos_vector4.nodedef_name = 'ND_cos_vector4';
mtlx_math_cos_vector4.nodedef_node = 'cos';
mtlx_math_cos_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/cos.html';
LiteGraph.registerNodeType('mtlx/math/cos_vector4',mtlx_math_cos_vector4);

/**
  * @function mtlx_math_tan_vector4
  * @description Library: mtlx. Category: cos. Type: vector4
  *   LiteGraph id: mtlx/math/tan_vector4
  */
function mtlx_math_tan_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_tan_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'tan';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tan.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_tan_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'tan_vector4';
  this.desc = "MaterialX:mtlx/math/tan_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_tan_vector4.nodedef_name = 'ND_tan_vector4';
mtlx_math_tan_vector4.nodedef_node = 'tan';
mtlx_math_tan_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/tan.html';
LiteGraph.registerNodeType('mtlx/math/tan_vector4',mtlx_math_tan_vector4);

/**
  * @function mtlx_math_asin_vector4
  * @description Library: mtlx. Category: tan. Type: vector4
  *   LiteGraph id: mtlx/math/asin_vector4
  */
function mtlx_math_asin_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_asin_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'asin';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/asin.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_asin_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'asin_vector4';
  this.desc = "MaterialX:mtlx/math/asin_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_asin_vector4.nodedef_name = 'ND_asin_vector4';
mtlx_math_asin_vector4.nodedef_node = 'asin';
mtlx_math_asin_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/asin.html';
LiteGraph.registerNodeType('mtlx/math/asin_vector4',mtlx_math_asin_vector4);

/**
  * @function mtlx_math_acos_vector4
  * @description Library: mtlx. Category: asin. Type: vector4
  *   LiteGraph id: mtlx/math/acos_vector4
  */
function mtlx_math_acos_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_acos_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'acos';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/acos.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_acos_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'acos_vector4';
  this.desc = "MaterialX:mtlx/math/acos_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_acos_vector4.nodedef_name = 'ND_acos_vector4';
mtlx_math_acos_vector4.nodedef_node = 'acos';
mtlx_math_acos_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/acos.html';
LiteGraph.registerNodeType('mtlx/math/acos_vector4',mtlx_math_acos_vector4);

/**
  * @function mtlx_math_atan2_vector4
  * @description Library: mtlx. Category: acos. Type: vector4
  *   LiteGraph id: mtlx/math/atan2_vector4
  */
function mtlx_math_atan2_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_atan2_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'atan2';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/atan2.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_atan2_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('iny','vector4');
  this.addProperty('iny', [1.0, 1.0, 1.0, 1.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inx','vector4');
  this.addProperty('inx', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'atan2_vector4';
  this.desc = "MaterialX:mtlx/math/atan2_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_atan2_vector4.nodedef_name = 'ND_atan2_vector4';
mtlx_math_atan2_vector4.nodedef_node = 'atan2';
mtlx_math_atan2_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/atan2.html';
LiteGraph.registerNodeType('mtlx/math/atan2_vector4',mtlx_math_atan2_vector4);

/**
  * @function mtlx_math_sqrt_float
  * @description Library: mtlx. Category: atan2. Type: float
  *   LiteGraph id: mtlx/math/sqrt_float
  */
function mtlx_math_sqrt_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_sqrt_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'sqrt';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sqrt.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_sqrt_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'sqrt_float';
  this.desc = "MaterialX:mtlx/math/sqrt_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_sqrt_float.nodedef_name = 'ND_sqrt_float';
mtlx_math_sqrt_float.nodedef_node = 'sqrt';
mtlx_math_sqrt_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sqrt.html';
LiteGraph.registerNodeType('mtlx/math/sqrt_float',mtlx_math_sqrt_float);

/**
  * @function mtlx_math_ln_float
  * @description Library: mtlx. Category: sqrt. Type: float
  *   LiteGraph id: mtlx/math/ln_float
  */
function mtlx_math_ln_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ln_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'ln';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ln.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ln_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','float');
  this.addProperty('in', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'ln_float';
  this.desc = "MaterialX:mtlx/math/ln_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_ln_float.nodedef_name = 'ND_ln_float';
mtlx_math_ln_float.nodedef_node = 'ln';
mtlx_math_ln_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ln.html';
LiteGraph.registerNodeType('mtlx/math/ln_float',mtlx_math_ln_float);

/**
  * @function mtlx_math_exp_float
  * @description Library: mtlx. Category: ln. Type: float
  *   LiteGraph id: mtlx/math/exp_float
  */
function mtlx_math_exp_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_exp_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'exp';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/exp.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_exp_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'exp_float';
  this.desc = "MaterialX:mtlx/math/exp_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_exp_float.nodedef_name = 'ND_exp_float';
mtlx_math_exp_float.nodedef_node = 'exp';
mtlx_math_exp_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/exp.html';
LiteGraph.registerNodeType('mtlx/math/exp_float',mtlx_math_exp_float);

/**
  * @function mtlx_math_sqrt_vector2
  * @description Library: mtlx. Category: exp. Type: vector2
  *   LiteGraph id: mtlx/math/sqrt_vector2
  */
function mtlx_math_sqrt_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_sqrt_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'sqrt';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sqrt.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_sqrt_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'sqrt_vector2';
  this.desc = "MaterialX:mtlx/math/sqrt_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_sqrt_vector2.nodedef_name = 'ND_sqrt_vector2';
mtlx_math_sqrt_vector2.nodedef_node = 'sqrt';
mtlx_math_sqrt_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sqrt.html';
LiteGraph.registerNodeType('mtlx/math/sqrt_vector2',mtlx_math_sqrt_vector2);

/**
  * @function mtlx_math_ln_vector2
  * @description Library: mtlx. Category: sqrt. Type: vector2
  *   LiteGraph id: mtlx/math/ln_vector2
  */
function mtlx_math_ln_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ln_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'ln';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ln.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ln_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector2');
  this.addProperty('in', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'ln_vector2';
  this.desc = "MaterialX:mtlx/math/ln_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_ln_vector2.nodedef_name = 'ND_ln_vector2';
mtlx_math_ln_vector2.nodedef_node = 'ln';
mtlx_math_ln_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ln.html';
LiteGraph.registerNodeType('mtlx/math/ln_vector2',mtlx_math_ln_vector2);

/**
  * @function mtlx_math_exp_vector2
  * @description Library: mtlx. Category: ln. Type: vector2
  *   LiteGraph id: mtlx/math/exp_vector2
  */
function mtlx_math_exp_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_exp_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'exp';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/exp.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_exp_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'exp_vector2';
  this.desc = "MaterialX:mtlx/math/exp_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_exp_vector2.nodedef_name = 'ND_exp_vector2';
mtlx_math_exp_vector2.nodedef_node = 'exp';
mtlx_math_exp_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/exp.html';
LiteGraph.registerNodeType('mtlx/math/exp_vector2',mtlx_math_exp_vector2);

/**
  * @function mtlx_math_sqrt_vector3
  * @description Library: mtlx. Category: exp. Type: vector3
  *   LiteGraph id: mtlx/math/sqrt_vector3
  */
function mtlx_math_sqrt_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_sqrt_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'sqrt';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sqrt.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_sqrt_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'sqrt_vector3';
  this.desc = "MaterialX:mtlx/math/sqrt_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_sqrt_vector3.nodedef_name = 'ND_sqrt_vector3';
mtlx_math_sqrt_vector3.nodedef_node = 'sqrt';
mtlx_math_sqrt_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sqrt.html';
LiteGraph.registerNodeType('mtlx/math/sqrt_vector3',mtlx_math_sqrt_vector3);

/**
  * @function mtlx_math_ln_vector3
  * @description Library: mtlx. Category: sqrt. Type: vector3
  *   LiteGraph id: mtlx/math/ln_vector3
  */
function mtlx_math_ln_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ln_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'ln';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ln.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ln_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [1.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'ln_vector3';
  this.desc = "MaterialX:mtlx/math/ln_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_ln_vector3.nodedef_name = 'ND_ln_vector3';
mtlx_math_ln_vector3.nodedef_node = 'ln';
mtlx_math_ln_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ln.html';
LiteGraph.registerNodeType('mtlx/math/ln_vector3',mtlx_math_ln_vector3);

/**
  * @function mtlx_math_exp_vector3
  * @description Library: mtlx. Category: ln. Type: vector3
  *   LiteGraph id: mtlx/math/exp_vector3
  */
function mtlx_math_exp_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_exp_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'exp';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/exp.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_exp_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'exp_vector3';
  this.desc = "MaterialX:mtlx/math/exp_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_exp_vector3.nodedef_name = 'ND_exp_vector3';
mtlx_math_exp_vector3.nodedef_node = 'exp';
mtlx_math_exp_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/exp.html';
LiteGraph.registerNodeType('mtlx/math/exp_vector3',mtlx_math_exp_vector3);

/**
  * @function mtlx_math_sqrt_vector4
  * @description Library: mtlx. Category: exp. Type: vector4
  *   LiteGraph id: mtlx/math/sqrt_vector4
  */
function mtlx_math_sqrt_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_sqrt_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'sqrt';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sqrt.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_sqrt_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'sqrt_vector4';
  this.desc = "MaterialX:mtlx/math/sqrt_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_sqrt_vector4.nodedef_name = 'ND_sqrt_vector4';
mtlx_math_sqrt_vector4.nodedef_node = 'sqrt';
mtlx_math_sqrt_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sqrt.html';
LiteGraph.registerNodeType('mtlx/math/sqrt_vector4',mtlx_math_sqrt_vector4);

/**
  * @function mtlx_math_ln_vector4
  * @description Library: mtlx. Category: sqrt. Type: vector4
  *   LiteGraph id: mtlx/math/ln_vector4
  */
function mtlx_math_ln_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ln_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'ln';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ln.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ln_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector4');
  this.addProperty('in', [1.0, 1.0, 1.0, 1.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'ln_vector4';
  this.desc = "MaterialX:mtlx/math/ln_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_ln_vector4.nodedef_name = 'ND_ln_vector4';
mtlx_math_ln_vector4.nodedef_node = 'ln';
mtlx_math_ln_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ln.html';
LiteGraph.registerNodeType('mtlx/math/ln_vector4',mtlx_math_ln_vector4);

/**
  * @function mtlx_math_exp_vector4
  * @description Library: mtlx. Category: ln. Type: vector4
  *   LiteGraph id: mtlx/math/exp_vector4
  */
function mtlx_math_exp_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_exp_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'exp';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/exp.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_exp_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'exp_vector4';
  this.desc = "MaterialX:mtlx/math/exp_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_exp_vector4.nodedef_name = 'ND_exp_vector4';
mtlx_math_exp_vector4.nodedef_node = 'exp';
mtlx_math_exp_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/exp.html';
LiteGraph.registerNodeType('mtlx/math/exp_vector4',mtlx_math_exp_vector4);

/**
  * @function mtlx_math_sign_float
  * @description Library: mtlx. Category: exp. Type: float
  *   LiteGraph id: mtlx/math/sign_float
  */
function mtlx_math_sign_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_sign_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'sign';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sign.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_sign_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'sign_float';
  this.desc = "MaterialX:mtlx/math/sign_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_sign_float.nodedef_name = 'ND_sign_float';
mtlx_math_sign_float.nodedef_node = 'sign';
mtlx_math_sign_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sign.html';
LiteGraph.registerNodeType('mtlx/math/sign_float',mtlx_math_sign_float);

/**
  * @function mtlx_math_sign_color3
  * @description Library: mtlx. Category: sign. Type: color3
  *   LiteGraph id: mtlx/math/sign_color3
  */
function mtlx_math_sign_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_sign_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'sign';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sign.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_sign_color3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'sign_color3';
  this.desc = "MaterialX:mtlx/math/sign_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_sign_color3.nodedef_name = 'ND_sign_color3';
mtlx_math_sign_color3.nodedef_node = 'sign';
mtlx_math_sign_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sign.html';
LiteGraph.registerNodeType('mtlx/math/sign_color3',mtlx_math_sign_color3);

/**
  * @function mtlx_math_sign_color4
  * @description Library: mtlx. Category: sign. Type: color4
  *   LiteGraph id: mtlx/math/sign_color4
  */
function mtlx_math_sign_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_sign_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'sign';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sign.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_sign_color4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'sign_color4';
  this.desc = "MaterialX:mtlx/math/sign_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_sign_color4.nodedef_name = 'ND_sign_color4';
mtlx_math_sign_color4.nodedef_node = 'sign';
mtlx_math_sign_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sign.html';
LiteGraph.registerNodeType('mtlx/math/sign_color4',mtlx_math_sign_color4);

/**
  * @function mtlx_math_sign_vector2
  * @description Library: mtlx. Category: sign. Type: vector2
  *   LiteGraph id: mtlx/math/sign_vector2
  */
function mtlx_math_sign_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_sign_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'sign';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sign.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_sign_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'sign_vector2';
  this.desc = "MaterialX:mtlx/math/sign_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_sign_vector2.nodedef_name = 'ND_sign_vector2';
mtlx_math_sign_vector2.nodedef_node = 'sign';
mtlx_math_sign_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sign.html';
LiteGraph.registerNodeType('mtlx/math/sign_vector2',mtlx_math_sign_vector2);

/**
  * @function mtlx_math_sign_vector3
  * @description Library: mtlx. Category: sign. Type: vector3
  *   LiteGraph id: mtlx/math/sign_vector3
  */
function mtlx_math_sign_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_sign_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'sign';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sign.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_sign_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'sign_vector3';
  this.desc = "MaterialX:mtlx/math/sign_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_sign_vector3.nodedef_name = 'ND_sign_vector3';
mtlx_math_sign_vector3.nodedef_node = 'sign';
mtlx_math_sign_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sign.html';
LiteGraph.registerNodeType('mtlx/math/sign_vector3',mtlx_math_sign_vector3);

/**
  * @function mtlx_math_sign_vector4
  * @description Library: mtlx. Category: sign. Type: vector4
  *   LiteGraph id: mtlx/math/sign_vector4
  */
function mtlx_math_sign_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_sign_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'sign';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sign.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_sign_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'sign_vector4';
  this.desc = "MaterialX:mtlx/math/sign_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_sign_vector4.nodedef_name = 'ND_sign_vector4';
mtlx_math_sign_vector4.nodedef_node = 'sign';
mtlx_math_sign_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sign.html';
LiteGraph.registerNodeType('mtlx/math/sign_vector4',mtlx_math_sign_vector4);

/**
  * @function mtlx_math_clamp_float
  * @description Library: mtlx. Category: sign. Type: float
  *   LiteGraph id: mtlx/math/clamp_float
  */
function mtlx_math_clamp_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_clamp_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'clamp';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/clamp.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_clamp_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('low','float');
  this.addProperty('low', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('high','float');
  this.addProperty('high', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'clamp_float';
  this.desc = "MaterialX:mtlx/math/clamp_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_clamp_float.nodedef_name = 'ND_clamp_float';
mtlx_math_clamp_float.nodedef_node = 'clamp';
mtlx_math_clamp_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/clamp.html';
LiteGraph.registerNodeType('mtlx/math/clamp_float',mtlx_math_clamp_float);

/**
  * @function mtlx_math_clamp_color3
  * @description Library: mtlx. Category: clamp. Type: color3
  *   LiteGraph id: mtlx/math/clamp_color3
  */
function mtlx_math_clamp_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_clamp_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'clamp';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/clamp.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_clamp_color3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('low','color3');
  this.addProperty('low', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('high','color3');
  this.addProperty('high', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'clamp_color3';
  this.desc = "MaterialX:mtlx/math/clamp_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_clamp_color3.nodedef_name = 'ND_clamp_color3';
mtlx_math_clamp_color3.nodedef_node = 'clamp';
mtlx_math_clamp_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/clamp.html';
LiteGraph.registerNodeType('mtlx/math/clamp_color3',mtlx_math_clamp_color3);

/**
  * @function mtlx_math_clamp_color4
  * @description Library: mtlx. Category: clamp. Type: color4
  *   LiteGraph id: mtlx/math/clamp_color4
  */
function mtlx_math_clamp_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_clamp_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'clamp';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/clamp.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_clamp_color4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('low','color4');
  this.addProperty('low', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('high','color4');
  this.addProperty('high', [1.0, 1.0, 1.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'clamp_color4';
  this.desc = "MaterialX:mtlx/math/clamp_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_clamp_color4.nodedef_name = 'ND_clamp_color4';
mtlx_math_clamp_color4.nodedef_node = 'clamp';
mtlx_math_clamp_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/clamp.html';
LiteGraph.registerNodeType('mtlx/math/clamp_color4',mtlx_math_clamp_color4);

/**
  * @function mtlx_math_clamp_vector2
  * @description Library: mtlx. Category: clamp. Type: vector2
  *   LiteGraph id: mtlx/math/clamp_vector2
  */
function mtlx_math_clamp_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_clamp_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'clamp';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/clamp.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_clamp_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('low','vector2');
  this.addProperty('low', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('high','vector2');
  this.addProperty('high', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'clamp_vector2';
  this.desc = "MaterialX:mtlx/math/clamp_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_clamp_vector2.nodedef_name = 'ND_clamp_vector2';
mtlx_math_clamp_vector2.nodedef_node = 'clamp';
mtlx_math_clamp_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/clamp.html';
LiteGraph.registerNodeType('mtlx/math/clamp_vector2',mtlx_math_clamp_vector2);

/**
  * @function mtlx_math_clamp_vector3
  * @description Library: mtlx. Category: clamp. Type: vector3
  *   LiteGraph id: mtlx/math/clamp_vector3
  */
function mtlx_math_clamp_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_clamp_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'clamp';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/clamp.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_clamp_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('low','vector3');
  this.addProperty('low', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('high','vector3');
  this.addProperty('high', [1.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'clamp_vector3';
  this.desc = "MaterialX:mtlx/math/clamp_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_clamp_vector3.nodedef_name = 'ND_clamp_vector3';
mtlx_math_clamp_vector3.nodedef_node = 'clamp';
mtlx_math_clamp_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/clamp.html';
LiteGraph.registerNodeType('mtlx/math/clamp_vector3',mtlx_math_clamp_vector3);

/**
  * @function mtlx_math_clamp_vector4
  * @description Library: mtlx. Category: clamp. Type: vector4
  *   LiteGraph id: mtlx/math/clamp_vector4
  */
function mtlx_math_clamp_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_clamp_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'clamp';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/clamp.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_clamp_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('low','vector4');
  this.addProperty('low', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('high','vector4');
  this.addProperty('high', [1.0, 1.0, 1.0, 1.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'clamp_vector4';
  this.desc = "MaterialX:mtlx/math/clamp_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_clamp_vector4.nodedef_name = 'ND_clamp_vector4';
mtlx_math_clamp_vector4.nodedef_node = 'clamp';
mtlx_math_clamp_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/clamp.html';
LiteGraph.registerNodeType('mtlx/math/clamp_vector4',mtlx_math_clamp_vector4);

/**
  * @function mtlx_math_clamp_color3FA
  * @description Library: mtlx. Category: clamp. Type: color3
  *   LiteGraph id: mtlx/math/clamp_color3FA
  */
function mtlx_math_clamp_color3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_clamp_color3FA';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'clamp';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/clamp.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_clamp_color3FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('low','float');
  this.addProperty('low', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('high','float');
  this.addProperty('high', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'clamp_color3';
  this.desc = "MaterialX:mtlx/math/clamp_color3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_clamp_color3FA.nodedef_name = 'ND_clamp_color3FA';
mtlx_math_clamp_color3FA.nodedef_node = 'clamp';
mtlx_math_clamp_color3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/clamp.html';
LiteGraph.registerNodeType('mtlx/math/clamp_color3FA',mtlx_math_clamp_color3FA);

/**
  * @function mtlx_math_clamp_color4FA
  * @description Library: mtlx. Category: clamp. Type: color4
  *   LiteGraph id: mtlx/math/clamp_color4FA
  */
function mtlx_math_clamp_color4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_clamp_color4FA';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'clamp';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/clamp.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_clamp_color4FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('low','float');
  this.addProperty('low', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('high','float');
  this.addProperty('high', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'clamp_color4';
  this.desc = "MaterialX:mtlx/math/clamp_color4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_clamp_color4FA.nodedef_name = 'ND_clamp_color4FA';
mtlx_math_clamp_color4FA.nodedef_node = 'clamp';
mtlx_math_clamp_color4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/clamp.html';
LiteGraph.registerNodeType('mtlx/math/clamp_color4FA',mtlx_math_clamp_color4FA);

/**
  * @function mtlx_math_clamp_vector2FA
  * @description Library: mtlx. Category: clamp. Type: vector2
  *   LiteGraph id: mtlx/math/clamp_vector2FA
  */
function mtlx_math_clamp_vector2FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_clamp_vector2FA';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'clamp';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/clamp.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_clamp_vector2FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('low','float');
  this.addProperty('low', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('high','float');
  this.addProperty('high', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'clamp_vector2';
  this.desc = "MaterialX:mtlx/math/clamp_vector2FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_clamp_vector2FA.nodedef_name = 'ND_clamp_vector2FA';
mtlx_math_clamp_vector2FA.nodedef_node = 'clamp';
mtlx_math_clamp_vector2FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/clamp.html';
LiteGraph.registerNodeType('mtlx/math/clamp_vector2FA',mtlx_math_clamp_vector2FA);

/**
  * @function mtlx_math_clamp_vector3FA
  * @description Library: mtlx. Category: clamp. Type: vector3
  *   LiteGraph id: mtlx/math/clamp_vector3FA
  */
function mtlx_math_clamp_vector3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_clamp_vector3FA';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'clamp';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/clamp.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_clamp_vector3FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('low','float');
  this.addProperty('low', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('high','float');
  this.addProperty('high', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'clamp_vector3';
  this.desc = "MaterialX:mtlx/math/clamp_vector3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_clamp_vector3FA.nodedef_name = 'ND_clamp_vector3FA';
mtlx_math_clamp_vector3FA.nodedef_node = 'clamp';
mtlx_math_clamp_vector3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/clamp.html';
LiteGraph.registerNodeType('mtlx/math/clamp_vector3FA',mtlx_math_clamp_vector3FA);

/**
  * @function mtlx_math_clamp_vector4FA
  * @description Library: mtlx. Category: clamp. Type: vector4
  *   LiteGraph id: mtlx/math/clamp_vector4FA
  */
function mtlx_math_clamp_vector4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_clamp_vector4FA';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'clamp';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/clamp.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_clamp_vector4FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('low','float');
  this.addProperty('low', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('high','float');
  this.addProperty('high', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'clamp_vector4';
  this.desc = "MaterialX:mtlx/math/clamp_vector4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_clamp_vector4FA.nodedef_name = 'ND_clamp_vector4FA';
mtlx_math_clamp_vector4FA.nodedef_node = 'clamp';
mtlx_math_clamp_vector4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/clamp.html';
LiteGraph.registerNodeType('mtlx/math/clamp_vector4FA',mtlx_math_clamp_vector4FA);

/**
  * @function mtlx_math_min_float
  * @description Library: mtlx. Category: clamp. Type: float
  *   LiteGraph id: mtlx/math/min_float
  */
function mtlx_math_min_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_min_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'min';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/min.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_min_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','float');
  this.addProperty('in1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'min_float';
  this.desc = "MaterialX:mtlx/math/min_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_min_float.nodedef_name = 'ND_min_float';
mtlx_math_min_float.nodedef_node = 'min';
mtlx_math_min_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/min.html';
LiteGraph.registerNodeType('mtlx/math/min_float',mtlx_math_min_float);

/**
  * @function mtlx_math_min_color3
  * @description Library: mtlx. Category: min. Type: color3
  *   LiteGraph id: mtlx/math/min_color3
  */
function mtlx_math_min_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_min_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'min';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/min.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_min_color3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'min_color3';
  this.desc = "MaterialX:mtlx/math/min_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_min_color3.nodedef_name = 'ND_min_color3';
mtlx_math_min_color3.nodedef_node = 'min';
mtlx_math_min_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/min.html';
LiteGraph.registerNodeType('mtlx/math/min_color3',mtlx_math_min_color3);

/**
  * @function mtlx_math_min_color4
  * @description Library: mtlx. Category: min. Type: color4
  *   LiteGraph id: mtlx/math/min_color4
  */
function mtlx_math_min_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_min_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'min';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/min.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_min_color4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'min_color4';
  this.desc = "MaterialX:mtlx/math/min_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_min_color4.nodedef_name = 'ND_min_color4';
mtlx_math_min_color4.nodedef_node = 'min';
mtlx_math_min_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/min.html';
LiteGraph.registerNodeType('mtlx/math/min_color4',mtlx_math_min_color4);

/**
  * @function mtlx_math_min_vector2
  * @description Library: mtlx. Category: min. Type: vector2
  *   LiteGraph id: mtlx/math/min_vector2
  */
function mtlx_math_min_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_min_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'min';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/min.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_min_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector2');
  this.addProperty('in2', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'min_vector2';
  this.desc = "MaterialX:mtlx/math/min_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_min_vector2.nodedef_name = 'ND_min_vector2';
mtlx_math_min_vector2.nodedef_node = 'min';
mtlx_math_min_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/min.html';
LiteGraph.registerNodeType('mtlx/math/min_vector2',mtlx_math_min_vector2);

/**
  * @function mtlx_math_min_vector3
  * @description Library: mtlx. Category: min. Type: vector3
  *   LiteGraph id: mtlx/math/min_vector3
  */
function mtlx_math_min_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_min_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'min';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/min.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_min_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'min_vector3';
  this.desc = "MaterialX:mtlx/math/min_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_min_vector3.nodedef_name = 'ND_min_vector3';
mtlx_math_min_vector3.nodedef_node = 'min';
mtlx_math_min_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/min.html';
LiteGraph.registerNodeType('mtlx/math/min_vector3',mtlx_math_min_vector3);

/**
  * @function mtlx_math_min_vector4
  * @description Library: mtlx. Category: min. Type: vector4
  *   LiteGraph id: mtlx/math/min_vector4
  */
function mtlx_math_min_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_min_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'min';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/min.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_min_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'min_vector4';
  this.desc = "MaterialX:mtlx/math/min_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_min_vector4.nodedef_name = 'ND_min_vector4';
mtlx_math_min_vector4.nodedef_node = 'min';
mtlx_math_min_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/min.html';
LiteGraph.registerNodeType('mtlx/math/min_vector4',mtlx_math_min_vector4);

/**
  * @function mtlx_math_min_color3FA
  * @description Library: mtlx. Category: min. Type: color3
  *   LiteGraph id: mtlx/math/min_color3FA
  */
function mtlx_math_min_color3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_min_color3FA';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'min';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/min.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_min_color3FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'min_color3';
  this.desc = "MaterialX:mtlx/math/min_color3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_min_color3FA.nodedef_name = 'ND_min_color3FA';
mtlx_math_min_color3FA.nodedef_node = 'min';
mtlx_math_min_color3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/min.html';
LiteGraph.registerNodeType('mtlx/math/min_color3FA',mtlx_math_min_color3FA);

/**
  * @function mtlx_math_min_color4FA
  * @description Library: mtlx. Category: min. Type: color4
  *   LiteGraph id: mtlx/math/min_color4FA
  */
function mtlx_math_min_color4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_min_color4FA';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'min';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/min.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_min_color4FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'min_color4';
  this.desc = "MaterialX:mtlx/math/min_color4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_min_color4FA.nodedef_name = 'ND_min_color4FA';
mtlx_math_min_color4FA.nodedef_node = 'min';
mtlx_math_min_color4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/min.html';
LiteGraph.registerNodeType('mtlx/math/min_color4FA',mtlx_math_min_color4FA);

/**
  * @function mtlx_math_min_vector2FA
  * @description Library: mtlx. Category: min. Type: vector2
  *   LiteGraph id: mtlx/math/min_vector2FA
  */
function mtlx_math_min_vector2FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_min_vector2FA';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'min';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/min.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_min_vector2FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'min_vector2';
  this.desc = "MaterialX:mtlx/math/min_vector2FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_min_vector2FA.nodedef_name = 'ND_min_vector2FA';
mtlx_math_min_vector2FA.nodedef_node = 'min';
mtlx_math_min_vector2FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/min.html';
LiteGraph.registerNodeType('mtlx/math/min_vector2FA',mtlx_math_min_vector2FA);

/**
  * @function mtlx_math_min_vector3FA
  * @description Library: mtlx. Category: min. Type: vector3
  *   LiteGraph id: mtlx/math/min_vector3FA
  */
function mtlx_math_min_vector3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_min_vector3FA';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'min';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/min.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_min_vector3FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'min_vector3';
  this.desc = "MaterialX:mtlx/math/min_vector3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_min_vector3FA.nodedef_name = 'ND_min_vector3FA';
mtlx_math_min_vector3FA.nodedef_node = 'min';
mtlx_math_min_vector3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/min.html';
LiteGraph.registerNodeType('mtlx/math/min_vector3FA',mtlx_math_min_vector3FA);

/**
  * @function mtlx_math_min_vector4FA
  * @description Library: mtlx. Category: min. Type: vector4
  *   LiteGraph id: mtlx/math/min_vector4FA
  */
function mtlx_math_min_vector4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_min_vector4FA';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'min';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/min.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_min_vector4FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'min_vector4';
  this.desc = "MaterialX:mtlx/math/min_vector4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_min_vector4FA.nodedef_name = 'ND_min_vector4FA';
mtlx_math_min_vector4FA.nodedef_node = 'min';
mtlx_math_min_vector4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/min.html';
LiteGraph.registerNodeType('mtlx/math/min_vector4FA',mtlx_math_min_vector4FA);

/**
  * @function mtlx_math_max_float
  * @description Library: mtlx. Category: min. Type: float
  *   LiteGraph id: mtlx/math/max_float
  */
function mtlx_math_max_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_max_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'max';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/max.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_max_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','float');
  this.addProperty('in1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'max_float';
  this.desc = "MaterialX:mtlx/math/max_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_max_float.nodedef_name = 'ND_max_float';
mtlx_math_max_float.nodedef_node = 'max';
mtlx_math_max_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/max.html';
LiteGraph.registerNodeType('mtlx/math/max_float',mtlx_math_max_float);

/**
  * @function mtlx_math_max_color3
  * @description Library: mtlx. Category: max. Type: color3
  *   LiteGraph id: mtlx/math/max_color3
  */
function mtlx_math_max_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_max_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'max';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/max.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_max_color3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'max_color3';
  this.desc = "MaterialX:mtlx/math/max_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_max_color3.nodedef_name = 'ND_max_color3';
mtlx_math_max_color3.nodedef_node = 'max';
mtlx_math_max_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/max.html';
LiteGraph.registerNodeType('mtlx/math/max_color3',mtlx_math_max_color3);

/**
  * @function mtlx_math_max_color4
  * @description Library: mtlx. Category: max. Type: color4
  *   LiteGraph id: mtlx/math/max_color4
  */
function mtlx_math_max_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_max_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'max';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/max.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_max_color4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'max_color4';
  this.desc = "MaterialX:mtlx/math/max_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_max_color4.nodedef_name = 'ND_max_color4';
mtlx_math_max_color4.nodedef_node = 'max';
mtlx_math_max_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/max.html';
LiteGraph.registerNodeType('mtlx/math/max_color4',mtlx_math_max_color4);

/**
  * @function mtlx_math_max_vector2
  * @description Library: mtlx. Category: max. Type: vector2
  *   LiteGraph id: mtlx/math/max_vector2
  */
function mtlx_math_max_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_max_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'max';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/max.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_max_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector2');
  this.addProperty('in2', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'max_vector2';
  this.desc = "MaterialX:mtlx/math/max_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_max_vector2.nodedef_name = 'ND_max_vector2';
mtlx_math_max_vector2.nodedef_node = 'max';
mtlx_math_max_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/max.html';
LiteGraph.registerNodeType('mtlx/math/max_vector2',mtlx_math_max_vector2);

/**
  * @function mtlx_math_max_vector3
  * @description Library: mtlx. Category: max. Type: vector3
  *   LiteGraph id: mtlx/math/max_vector3
  */
function mtlx_math_max_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_max_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'max';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/max.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_max_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'max_vector3';
  this.desc = "MaterialX:mtlx/math/max_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_max_vector3.nodedef_name = 'ND_max_vector3';
mtlx_math_max_vector3.nodedef_node = 'max';
mtlx_math_max_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/max.html';
LiteGraph.registerNodeType('mtlx/math/max_vector3',mtlx_math_max_vector3);

/**
  * @function mtlx_math_max_vector4
  * @description Library: mtlx. Category: max. Type: vector4
  *   LiteGraph id: mtlx/math/max_vector4
  */
function mtlx_math_max_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_max_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'max';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/max.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_max_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'max_vector4';
  this.desc = "MaterialX:mtlx/math/max_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_max_vector4.nodedef_name = 'ND_max_vector4';
mtlx_math_max_vector4.nodedef_node = 'max';
mtlx_math_max_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/max.html';
LiteGraph.registerNodeType('mtlx/math/max_vector4',mtlx_math_max_vector4);

/**
  * @function mtlx_math_max_color3FA
  * @description Library: mtlx. Category: max. Type: color3
  *   LiteGraph id: mtlx/math/max_color3FA
  */
function mtlx_math_max_color3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_max_color3FA';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'max';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/max.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_max_color3FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'max_color3';
  this.desc = "MaterialX:mtlx/math/max_color3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_math_max_color3FA.nodedef_name = 'ND_max_color3FA';
mtlx_math_max_color3FA.nodedef_node = 'max';
mtlx_math_max_color3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/max.html';
LiteGraph.registerNodeType('mtlx/math/max_color3FA',mtlx_math_max_color3FA);

/**
  * @function mtlx_math_max_color4FA
  * @description Library: mtlx. Category: max. Type: color4
  *   LiteGraph id: mtlx/math/max_color4FA
  */
function mtlx_math_max_color4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_max_color4FA';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'max';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/max.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_max_color4FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'max_color4';
  this.desc = "MaterialX:mtlx/math/max_color4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_math_max_color4FA.nodedef_name = 'ND_max_color4FA';
mtlx_math_max_color4FA.nodedef_node = 'max';
mtlx_math_max_color4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/max.html';
LiteGraph.registerNodeType('mtlx/math/max_color4FA',mtlx_math_max_color4FA);

/**
  * @function mtlx_math_max_vector2FA
  * @description Library: mtlx. Category: max. Type: vector2
  *   LiteGraph id: mtlx/math/max_vector2FA
  */
function mtlx_math_max_vector2FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_max_vector2FA';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'max';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/max.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_max_vector2FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'max_vector2';
  this.desc = "MaterialX:mtlx/math/max_vector2FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_max_vector2FA.nodedef_name = 'ND_max_vector2FA';
mtlx_math_max_vector2FA.nodedef_node = 'max';
mtlx_math_max_vector2FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/max.html';
LiteGraph.registerNodeType('mtlx/math/max_vector2FA',mtlx_math_max_vector2FA);

/**
  * @function mtlx_math_max_vector3FA
  * @description Library: mtlx. Category: max. Type: vector3
  *   LiteGraph id: mtlx/math/max_vector3FA
  */
function mtlx_math_max_vector3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_max_vector3FA';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'max';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/max.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_max_vector3FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'max_vector3';
  this.desc = "MaterialX:mtlx/math/max_vector3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_max_vector3FA.nodedef_name = 'ND_max_vector3FA';
mtlx_math_max_vector3FA.nodedef_node = 'max';
mtlx_math_max_vector3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/max.html';
LiteGraph.registerNodeType('mtlx/math/max_vector3FA',mtlx_math_max_vector3FA);

/**
  * @function mtlx_math_max_vector4FA
  * @description Library: mtlx. Category: max. Type: vector4
  *   LiteGraph id: mtlx/math/max_vector4FA
  */
function mtlx_math_max_vector4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_max_vector4FA';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'max';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/max.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_max_vector4FA_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'max_vector4';
  this.desc = "MaterialX:mtlx/math/max_vector4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_max_vector4FA.nodedef_name = 'ND_max_vector4FA';
mtlx_math_max_vector4FA.nodedef_node = 'max';
mtlx_math_max_vector4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/max.html';
LiteGraph.registerNodeType('mtlx/math/max_vector4FA',mtlx_math_max_vector4FA);

/**
  * @function mtlx_math_normalize_vector2
  * @description Library: mtlx. Category: max. Type: vector2
  *   LiteGraph id: mtlx/math/normalize_vector2
  */
function mtlx_math_normalize_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_normalize_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'normalize';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/normalize.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_normalize_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'normalize_vector2';
  this.desc = "MaterialX:mtlx/math/normalize_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_normalize_vector2.nodedef_name = 'ND_normalize_vector2';
mtlx_math_normalize_vector2.nodedef_node = 'normalize';
mtlx_math_normalize_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/normalize.html';
LiteGraph.registerNodeType('mtlx/math/normalize_vector2',mtlx_math_normalize_vector2);

/**
  * @function mtlx_math_normalize_vector3
  * @description Library: mtlx. Category: normalize. Type: vector3
  *   LiteGraph id: mtlx/math/normalize_vector3
  */
function mtlx_math_normalize_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_normalize_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'normalize';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/normalize.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_normalize_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'normalize_vector3';
  this.desc = "MaterialX:mtlx/math/normalize_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_normalize_vector3.nodedef_name = 'ND_normalize_vector3';
mtlx_math_normalize_vector3.nodedef_node = 'normalize';
mtlx_math_normalize_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/normalize.html';
LiteGraph.registerNodeType('mtlx/math/normalize_vector3',mtlx_math_normalize_vector3);

/**
  * @function mtlx_math_normalize_vector4
  * @description Library: mtlx. Category: normalize. Type: vector4
  *   LiteGraph id: mtlx/math/normalize_vector4
  */
function mtlx_math_normalize_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_normalize_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'normalize';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/normalize.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_normalize_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'normalize_vector4';
  this.desc = "MaterialX:mtlx/math/normalize_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_normalize_vector4.nodedef_name = 'ND_normalize_vector4';
mtlx_math_normalize_vector4.nodedef_node = 'normalize';
mtlx_math_normalize_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/normalize.html';
LiteGraph.registerNodeType('mtlx/math/normalize_vector4',mtlx_math_normalize_vector4);

/**
  * @function mtlx_math_magnitude_vector2
  * @description Library: mtlx. Category: normalize. Type: float
  *   LiteGraph id: mtlx/math/magnitude_vector2
  */
function mtlx_math_magnitude_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_magnitude_vector2';
  this.nodedef_type = 'float';
  this.nodedef_node = 'magnitude';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/magnitude.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_magnitude_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'magnitude_float';
  this.desc = "MaterialX:mtlx/math/magnitude_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_magnitude_vector2.nodedef_name = 'ND_magnitude_vector2';
mtlx_math_magnitude_vector2.nodedef_node = 'magnitude';
mtlx_math_magnitude_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/magnitude.html';
LiteGraph.registerNodeType('mtlx/math/magnitude_vector2',mtlx_math_magnitude_vector2);

/**
  * @function mtlx_math_magnitude_vector3
  * @description Library: mtlx. Category: magnitude. Type: float
  *   LiteGraph id: mtlx/math/magnitude_vector3
  */
function mtlx_math_magnitude_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_magnitude_vector3';
  this.nodedef_type = 'float';
  this.nodedef_node = 'magnitude';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/magnitude.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_magnitude_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'magnitude_float';
  this.desc = "MaterialX:mtlx/math/magnitude_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_magnitude_vector3.nodedef_name = 'ND_magnitude_vector3';
mtlx_math_magnitude_vector3.nodedef_node = 'magnitude';
mtlx_math_magnitude_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/magnitude.html';
LiteGraph.registerNodeType('mtlx/math/magnitude_vector3',mtlx_math_magnitude_vector3);

/**
  * @function mtlx_math_magnitude_vector4
  * @description Library: mtlx. Category: magnitude. Type: float
  *   LiteGraph id: mtlx/math/magnitude_vector4
  */
function mtlx_math_magnitude_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_magnitude_vector4';
  this.nodedef_type = 'float';
  this.nodedef_node = 'magnitude';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/magnitude.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_magnitude_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'magnitude_float';
  this.desc = "MaterialX:mtlx/math/magnitude_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_magnitude_vector4.nodedef_name = 'ND_magnitude_vector4';
mtlx_math_magnitude_vector4.nodedef_node = 'magnitude';
mtlx_math_magnitude_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/magnitude.html';
LiteGraph.registerNodeType('mtlx/math/magnitude_vector4',mtlx_math_magnitude_vector4);

/**
  * @function mtlx_math_distance_vector2
  * @description Library: mtlx. Category: magnitude. Type: float
  *   LiteGraph id: mtlx/math/distance_vector2
  */
function mtlx_math_distance_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_distance_vector2';
  this.nodedef_type = 'float';
  this.nodedef_node = 'distance';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/distance.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_distance_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"in1","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector2');
  this.addProperty('in2', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"in2","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'distance_float';
  this.desc = "MaterialX:mtlx/math/distance_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_distance_vector2.nodedef_name = 'ND_distance_vector2';
mtlx_math_distance_vector2.nodedef_node = 'distance';
mtlx_math_distance_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/distance.html';
LiteGraph.registerNodeType('mtlx/math/distance_vector2',mtlx_math_distance_vector2);

/**
  * @function mtlx_math_distance_vector3
  * @description Library: mtlx. Category: distance. Type: float
  *   LiteGraph id: mtlx/math/distance_vector3
  */
function mtlx_math_distance_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_distance_vector3';
  this.nodedef_type = 'float';
  this.nodedef_node = 'distance';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/distance.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_distance_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"in1","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"in2","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'distance_float';
  this.desc = "MaterialX:mtlx/math/distance_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_distance_vector3.nodedef_name = 'ND_distance_vector3';
mtlx_math_distance_vector3.nodedef_node = 'distance';
mtlx_math_distance_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/distance.html';
LiteGraph.registerNodeType('mtlx/math/distance_vector3',mtlx_math_distance_vector3);

/**
  * @function mtlx_math_distance_vector4
  * @description Library: mtlx. Category: distance. Type: float
  *   LiteGraph id: mtlx/math/distance_vector4
  */
function mtlx_math_distance_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_distance_vector4';
  this.nodedef_type = 'float';
  this.nodedef_node = 'distance';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/distance.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_distance_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"in1","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"in2","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'distance_float';
  this.desc = "MaterialX:mtlx/math/distance_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_distance_vector4.nodedef_name = 'ND_distance_vector4';
mtlx_math_distance_vector4.nodedef_node = 'distance';
mtlx_math_distance_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/distance.html';
LiteGraph.registerNodeType('mtlx/math/distance_vector4',mtlx_math_distance_vector4);

/**
  * @function mtlx_math_dotproduct_vector2
  * @description Library: mtlx. Category: distance. Type: float
  *   LiteGraph id: mtlx/math/dotproduct_vector2
  */
function mtlx_math_dotproduct_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_dotproduct_vector2';
  this.nodedef_type = 'float';
  this.nodedef_node = 'dotproduct';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dotproduct.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_dotproduct_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector2');
  this.addProperty('in2', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'dotproduct_float';
  this.desc = "MaterialX:mtlx/math/dotproduct_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_dotproduct_vector2.nodedef_name = 'ND_dotproduct_vector2';
mtlx_math_dotproduct_vector2.nodedef_node = 'dotproduct';
mtlx_math_dotproduct_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dotproduct.html';
LiteGraph.registerNodeType('mtlx/math/dotproduct_vector2',mtlx_math_dotproduct_vector2);

/**
  * @function mtlx_math_dotproduct_vector3
  * @description Library: mtlx. Category: dotproduct. Type: float
  *   LiteGraph id: mtlx/math/dotproduct_vector3
  */
function mtlx_math_dotproduct_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_dotproduct_vector3';
  this.nodedef_type = 'float';
  this.nodedef_node = 'dotproduct';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dotproduct.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_dotproduct_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'dotproduct_float';
  this.desc = "MaterialX:mtlx/math/dotproduct_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_dotproduct_vector3.nodedef_name = 'ND_dotproduct_vector3';
mtlx_math_dotproduct_vector3.nodedef_node = 'dotproduct';
mtlx_math_dotproduct_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dotproduct.html';
LiteGraph.registerNodeType('mtlx/math/dotproduct_vector3',mtlx_math_dotproduct_vector3);

/**
  * @function mtlx_math_dotproduct_vector4
  * @description Library: mtlx. Category: dotproduct. Type: float
  *   LiteGraph id: mtlx/math/dotproduct_vector4
  */
function mtlx_math_dotproduct_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_dotproduct_vector4';
  this.nodedef_type = 'float';
  this.nodedef_node = 'dotproduct';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dotproduct.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_dotproduct_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'dotproduct_float';
  this.desc = "MaterialX:mtlx/math/dotproduct_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_dotproduct_vector4.nodedef_name = 'ND_dotproduct_vector4';
mtlx_math_dotproduct_vector4.nodedef_node = 'dotproduct';
mtlx_math_dotproduct_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dotproduct.html';
LiteGraph.registerNodeType('mtlx/math/dotproduct_vector4',mtlx_math_dotproduct_vector4);

/**
  * @function mtlx_math_crossproduct_vector3
  * @description Library: mtlx. Category: dotproduct. Type: vector3
  *   LiteGraph id: mtlx/math/crossproduct_vector3
  */
function mtlx_math_crossproduct_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_crossproduct_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'crossproduct';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/crossproduct.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_crossproduct_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'crossproduct_vector3';
  this.desc = "MaterialX:mtlx/math/crossproduct_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_crossproduct_vector3.nodedef_name = 'ND_crossproduct_vector3';
mtlx_math_crossproduct_vector3.nodedef_node = 'crossproduct';
mtlx_math_crossproduct_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/crossproduct.html';
LiteGraph.registerNodeType('mtlx/math/crossproduct_vector3',mtlx_math_crossproduct_vector3);

/**
  * @function mtlx_math_transformpoint_vector3
  * @description Library: mtlx. Category: crossproduct. Type: vector3
  *   LiteGraph id: mtlx/math/transformpoint_vector3
  */
function mtlx_math_transformpoint_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_transformpoint_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'transformpoint';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/transformpoint.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_transformpoint_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('fromspace','string');
  this.addProperty('fromspace', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('tospace','string');
  this.addProperty('tospace', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'transformpoint_vector3';
  this.desc = "MaterialX:mtlx/math/transformpoint_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_transformpoint_vector3.nodedef_name = 'ND_transformpoint_vector3';
mtlx_math_transformpoint_vector3.nodedef_node = 'transformpoint';
mtlx_math_transformpoint_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/transformpoint.html';
LiteGraph.registerNodeType('mtlx/math/transformpoint_vector3',mtlx_math_transformpoint_vector3);

/**
  * @function mtlx_math_transformvector_vector3
  * @description Library: mtlx. Category: transformpoint. Type: vector3
  *   LiteGraph id: mtlx/math/transformvector_vector3
  */
function mtlx_math_transformvector_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_transformvector_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'transformvector';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/transformvector.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_transformvector_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('fromspace','string');
  this.addProperty('fromspace', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('tospace','string');
  this.addProperty('tospace', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'transformvector_vector3';
  this.desc = "MaterialX:mtlx/math/transformvector_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_transformvector_vector3.nodedef_name = 'ND_transformvector_vector3';
mtlx_math_transformvector_vector3.nodedef_node = 'transformvector';
mtlx_math_transformvector_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/transformvector.html';
LiteGraph.registerNodeType('mtlx/math/transformvector_vector3',mtlx_math_transformvector_vector3);

/**
  * @function mtlx_math_transformnormal_vector3
  * @description Library: mtlx. Category: transformvector. Type: vector3
  *   LiteGraph id: mtlx/math/transformnormal_vector3
  */
function mtlx_math_transformnormal_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_transformnormal_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'transformnormal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/transformnormal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_transformnormal_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('fromspace','string');
  this.addProperty('fromspace', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('tospace','string');
  this.addProperty('tospace', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'transformnormal_vector3';
  this.desc = "MaterialX:mtlx/math/transformnormal_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_transformnormal_vector3.nodedef_name = 'ND_transformnormal_vector3';
mtlx_math_transformnormal_vector3.nodedef_node = 'transformnormal';
mtlx_math_transformnormal_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/transformnormal.html';
LiteGraph.registerNodeType('mtlx/math/transformnormal_vector3',mtlx_math_transformnormal_vector3);

/**
  * @function mtlx_math_transformmatrix_vector2M3
  * @description Library: mtlx. Category: transformnormal. Type: vector2
  *   LiteGraph id: mtlx/math/transformmatrix_vector2M3
  */
function mtlx_math_transformmatrix_vector2M3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_transformmatrix_vector2M3';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'transformmatrix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/transformmatrix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_transformmatrix_vector2M3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mat','matrix33');
  this.addProperty('mat', [1.0,0.0,0.0, 0.0,1.0,0.0, 0.0,0.0,1.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'transformmatrix_vector2';
  this.desc = "MaterialX:mtlx/math/transformmatrix_vector2M3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_transformmatrix_vector2M3.nodedef_name = 'ND_transformmatrix_vector2M3';
mtlx_math_transformmatrix_vector2M3.nodedef_node = 'transformmatrix';
mtlx_math_transformmatrix_vector2M3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/transformmatrix.html';
LiteGraph.registerNodeType('mtlx/math/transformmatrix_vector2M3',mtlx_math_transformmatrix_vector2M3);

/**
  * @function mtlx_math_transformmatrix_vector3
  * @description Library: mtlx. Category: transformmatrix. Type: vector3
  *   LiteGraph id: mtlx/math/transformmatrix_vector3
  */
function mtlx_math_transformmatrix_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_transformmatrix_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'transformmatrix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/transformmatrix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_transformmatrix_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mat','matrix33');
  this.addProperty('mat', [1.0,0.0,0.0, 0.0,1.0,0.0, 0.0,0.0,1.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'transformmatrix_vector3';
  this.desc = "MaterialX:mtlx/math/transformmatrix_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_transformmatrix_vector3.nodedef_name = 'ND_transformmatrix_vector3';
mtlx_math_transformmatrix_vector3.nodedef_node = 'transformmatrix';
mtlx_math_transformmatrix_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/transformmatrix.html';
LiteGraph.registerNodeType('mtlx/math/transformmatrix_vector3',mtlx_math_transformmatrix_vector3);

/**
  * @function mtlx_math_transformmatrix_vector3M4
  * @description Library: mtlx. Category: transformmatrix. Type: vector3
  *   LiteGraph id: mtlx/math/transformmatrix_vector3M4
  */
function mtlx_math_transformmatrix_vector3M4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_transformmatrix_vector3M4';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'transformmatrix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/transformmatrix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_transformmatrix_vector3M4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mat','matrix44');
  this.addProperty('mat', [1.0,0.0,0.0,0.0, 0.0,1.0,0.0,0.0, 0.0,0.0,1.0,0.0, 0.0,0.0,0.0,1.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'transformmatrix_vector3';
  this.desc = "MaterialX:mtlx/math/transformmatrix_vector3M4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_transformmatrix_vector3M4.nodedef_name = 'ND_transformmatrix_vector3M4';
mtlx_math_transformmatrix_vector3M4.nodedef_node = 'transformmatrix';
mtlx_math_transformmatrix_vector3M4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/transformmatrix.html';
LiteGraph.registerNodeType('mtlx/math/transformmatrix_vector3M4',mtlx_math_transformmatrix_vector3M4);

/**
  * @function mtlx_math_transformmatrix_vector4
  * @description Library: mtlx. Category: transformmatrix. Type: vector4
  *   LiteGraph id: mtlx/math/transformmatrix_vector4
  */
function mtlx_math_transformmatrix_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_transformmatrix_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'transformmatrix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/transformmatrix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_transformmatrix_vector4_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mat','matrix44');
  this.addProperty('mat', [1.0,0.0,0.0,0.0, 0.0,1.0,0.0,0.0, 0.0,0.0,1.0,0.0, 0.0,0.0,0.0,1.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'transformmatrix_vector4';
  this.desc = "MaterialX:mtlx/math/transformmatrix_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_math_transformmatrix_vector4.nodedef_name = 'ND_transformmatrix_vector4';
mtlx_math_transformmatrix_vector4.nodedef_node = 'transformmatrix';
mtlx_math_transformmatrix_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/transformmatrix.html';
LiteGraph.registerNodeType('mtlx/math/transformmatrix_vector4',mtlx_math_transformmatrix_vector4);

/**
  * @function mtlx_math_normalmap_float
  * @description Library: mtlx. Category: transformmatrix. Type: vector3
  *   LiteGraph id: mtlx/math/normalmap_float
  */
function mtlx_math_normalmap_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_normalmap_float';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'normalmap';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/normalmap.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_normalmap_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.5, 0.5, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('scale','float');
  this.addProperty('scale', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nworld"});
  this.addInput('tangent','vector3');
  this.addProperty('tangent', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Tworld"});
  this.addInput('bitangent','vector3');
  this.addProperty('bitangent', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Bworld"});
  this.addOutput('out','vector3');
  this.title = 'normalmap_vector3';
  this.desc = "MaterialX:mtlx/math/normalmap_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_normalmap_float.nodedef_name = 'ND_normalmap_float';
mtlx_math_normalmap_float.nodedef_node = 'normalmap';
mtlx_math_normalmap_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/normalmap.html';
LiteGraph.registerNodeType('mtlx/math/normalmap_float',mtlx_math_normalmap_float);

/**
  * @function mtlx_math_normalmap_vector2
  * @description Library: mtlx. Category: normalmap. Type: vector3
  *   LiteGraph id: mtlx/math/normalmap_vector2
  */
function mtlx_math_normalmap_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_normalmap_vector2';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'normalmap';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/normalmap.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_normalmap_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.5, 0.5, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('scale','vector2');
  this.addProperty('scale', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nworld"});
  this.addInput('tangent','vector3');
  this.addProperty('tangent', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Tworld"});
  this.addInput('bitangent','vector3');
  this.addProperty('bitangent', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Bworld"});
  this.addOutput('out','vector3');
  this.title = 'normalmap_vector3';
  this.desc = "MaterialX:mtlx/math/normalmap_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_normalmap_vector2.nodedef_name = 'ND_normalmap_vector2';
mtlx_math_normalmap_vector2.nodedef_node = 'normalmap';
mtlx_math_normalmap_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/normalmap.html';
LiteGraph.registerNodeType('mtlx/math/normalmap_vector2',mtlx_math_normalmap_vector2);

/**
  * @function mtlx_math_transpose_matrix33
  * @description Library: mtlx. Category: normalmap. Type: matrix33
  *   LiteGraph id: mtlx/math/transpose_matrix33
  */
function mtlx_math_transpose_matrix33() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_transpose_matrix33';
  this.nodedef_type = 'matrix33';
  this.nodedef_node = 'transpose';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/transpose.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_transpose_matrix33_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','matrix33');
  this.addProperty('in', [1.0,0.0,0.0, 0.0,1.0,0.0, 0.0,0.0,1.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix33');
  this.title = 'transpose_matrix33';
  this.desc = "MaterialX:mtlx/math/transpose_matrix33";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#333';
}
mtlx_math_transpose_matrix33.nodedef_name = 'ND_transpose_matrix33';
mtlx_math_transpose_matrix33.nodedef_node = 'transpose';
mtlx_math_transpose_matrix33.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/transpose.html';
LiteGraph.registerNodeType('mtlx/math/transpose_matrix33',mtlx_math_transpose_matrix33);

/**
  * @function mtlx_math_transpose_matrix44
  * @description Library: mtlx. Category: transpose. Type: matrix44
  *   LiteGraph id: mtlx/math/transpose_matrix44
  */
function mtlx_math_transpose_matrix44() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_transpose_matrix44';
  this.nodedef_type = 'matrix44';
  this.nodedef_node = 'transpose';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/transpose.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_transpose_matrix44_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','matrix44');
  this.addProperty('in', [1.0,0.0,0.0,0.0, 0.0,1.0,0.0,0.0, 0.0,0.0,1.0,0.0, 0.0,0.0,0.0,1.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix44');
  this.title = 'transpose_matrix44';
  this.desc = "MaterialX:mtlx/math/transpose_matrix44";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#444';
}
mtlx_math_transpose_matrix44.nodedef_name = 'ND_transpose_matrix44';
mtlx_math_transpose_matrix44.nodedef_node = 'transpose';
mtlx_math_transpose_matrix44.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/transpose.html';
LiteGraph.registerNodeType('mtlx/math/transpose_matrix44',mtlx_math_transpose_matrix44);

/**
  * @function mtlx_math_determinant_matrix33
  * @description Library: mtlx. Category: transpose. Type: float
  *   LiteGraph id: mtlx/math/determinant_matrix33
  */
function mtlx_math_determinant_matrix33() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_determinant_matrix33';
  this.nodedef_type = 'float';
  this.nodedef_node = 'determinant';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/determinant.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_determinant_matrix33_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','matrix33');
  this.addProperty('in', [1.0,0.0,0.0, 0.0,1.0,0.0, 0.0,0.0,1.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'determinant_float';
  this.desc = "MaterialX:mtlx/math/determinant_matrix33";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_determinant_matrix33.nodedef_name = 'ND_determinant_matrix33';
mtlx_math_determinant_matrix33.nodedef_node = 'determinant';
mtlx_math_determinant_matrix33.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/determinant.html';
LiteGraph.registerNodeType('mtlx/math/determinant_matrix33',mtlx_math_determinant_matrix33);

/**
  * @function mtlx_math_determinant_matrix44
  * @description Library: mtlx. Category: determinant. Type: float
  *   LiteGraph id: mtlx/math/determinant_matrix44
  */
function mtlx_math_determinant_matrix44() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_determinant_matrix44';
  this.nodedef_type = 'float';
  this.nodedef_node = 'determinant';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/determinant.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_determinant_matrix44_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','matrix44');
  this.addProperty('in', [1.0,0.0,0.0,0.0, 0.0,1.0,0.0,0.0, 0.0,0.0,1.0,0.0, 0.0,0.0,0.0,1.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'determinant_float';
  this.desc = "MaterialX:mtlx/math/determinant_matrix44";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_determinant_matrix44.nodedef_name = 'ND_determinant_matrix44';
mtlx_math_determinant_matrix44.nodedef_node = 'determinant';
mtlx_math_determinant_matrix44.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/determinant.html';
LiteGraph.registerNodeType('mtlx/math/determinant_matrix44',mtlx_math_determinant_matrix44);

/**
  * @function mtlx_math_invertmatrix_matrix33
  * @description Library: mtlx. Category: determinant. Type: matrix33
  *   LiteGraph id: mtlx/math/invertmatrix_matrix33
  */
function mtlx_math_invertmatrix_matrix33() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_invertmatrix_matrix33';
  this.nodedef_type = 'matrix33';
  this.nodedef_node = 'invertmatrix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invertmatrix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_invertmatrix_matrix33_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','matrix33');
  this.addProperty('in', [1.0,0.0,0.0, 0.0,1.0,0.0, 0.0,0.0,1.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix33');
  this.title = 'invertmatrix_matrix33';
  this.desc = "MaterialX:mtlx/math/invertmatrix_matrix33";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#333';
}
mtlx_math_invertmatrix_matrix33.nodedef_name = 'ND_invertmatrix_matrix33';
mtlx_math_invertmatrix_matrix33.nodedef_node = 'invertmatrix';
mtlx_math_invertmatrix_matrix33.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invertmatrix.html';
LiteGraph.registerNodeType('mtlx/math/invertmatrix_matrix33',mtlx_math_invertmatrix_matrix33);

/**
  * @function mtlx_math_invertmatrix_matrix44
  * @description Library: mtlx. Category: invertmatrix. Type: matrix44
  *   LiteGraph id: mtlx/math/invertmatrix_matrix44
  */
function mtlx_math_invertmatrix_matrix44() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_invertmatrix_matrix44';
  this.nodedef_type = 'matrix44';
  this.nodedef_node = 'invertmatrix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invertmatrix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_invertmatrix_matrix44_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','matrix44');
  this.addProperty('in', [1.0,0.0,0.0,0.0, 0.0,1.0,0.0,0.0, 0.0,0.0,1.0,0.0, 0.0,0.0,0.0,1.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix44');
  this.title = 'invertmatrix_matrix44';
  this.desc = "MaterialX:mtlx/math/invertmatrix_matrix44";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#444';
}
mtlx_math_invertmatrix_matrix44.nodedef_name = 'ND_invertmatrix_matrix44';
mtlx_math_invertmatrix_matrix44.nodedef_node = 'invertmatrix';
mtlx_math_invertmatrix_matrix44.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/invertmatrix.html';
LiteGraph.registerNodeType('mtlx/math/invertmatrix_matrix44',mtlx_math_invertmatrix_matrix44);

/**
  * @function mtlx_math_rotate2d_vector2
  * @description Library: mtlx. Category: invertmatrix. Type: vector2
  *   LiteGraph id: mtlx/math/rotate2d_vector2
  */
function mtlx_math_rotate2d_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_rotate2d_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'rotate2d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/rotate2d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_rotate2d_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','float');
  this.addProperty('amount', 0.0, 'float',{"colorspace":"","unit":"degree","unittype":"angle","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'rotate2d_vector2';
  this.desc = "MaterialX:mtlx/math/rotate2d_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_rotate2d_vector2.nodedef_name = 'ND_rotate2d_vector2';
mtlx_math_rotate2d_vector2.nodedef_node = 'rotate2d';
mtlx_math_rotate2d_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/rotate2d.html';
LiteGraph.registerNodeType('mtlx/math/rotate2d_vector2',mtlx_math_rotate2d_vector2);

/**
  * @function mtlx_math_rotate3d_vector3
  * @description Library: mtlx. Category: rotate2d. Type: vector3
  *   LiteGraph id: mtlx/math/rotate3d_vector3
  */
function mtlx_math_rotate3d_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_rotate3d_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'rotate3d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/rotate3d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_rotate3d_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','float');
  this.addProperty('amount', 0.0, 'float',{"colorspace":"","unit":"degree","unittype":"angle","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('axis','vector3');
  this.addProperty('axis', [0.0, 1.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'rotate3d_vector3';
  this.desc = "MaterialX:mtlx/math/rotate3d_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_rotate3d_vector3.nodedef_name = 'ND_rotate3d_vector3';
mtlx_math_rotate3d_vector3.nodedef_node = 'rotate3d';
mtlx_math_rotate3d_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/rotate3d.html';
LiteGraph.registerNodeType('mtlx/math/rotate3d_vector3',mtlx_math_rotate3d_vector3);

/**
  * @function mtlx_math_place2d_vector2
  * @description Library: mtlx. Category: rotate3d. Type: vector2
  *   LiteGraph id: mtlx/math/place2d_vector2
  */
function mtlx_math_place2d_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_place2d_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'place2d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/place2d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_place2d_vector2_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','vector2');
  this.addProperty('pivot', [0.0,0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('scale','vector2');
  this.addProperty('scale', [1.0,1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('rotate','float');
  this.addProperty('rotate', 0.0, 'float',{"colorspace":"","unit":"degree","unittype":"angle","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('offset','vector2');
  this.addProperty('offset', [0.0,0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('operationorder','integer');
  this.addProperty('operationorder', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["SRT"," TRS"],"enumvalues":["0"," 1"]});
  this.addOutput('out','vector2');
  this.title = 'place2d_vector2';
  this.desc = "MaterialX:mtlx/math/place2d_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_place2d_vector2.nodedef_name = 'ND_place2d_vector2';
mtlx_math_place2d_vector2.nodedef_node = 'place2d';
mtlx_math_place2d_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/place2d.html';
LiteGraph.registerNodeType('mtlx/math/place2d_vector2',mtlx_math_place2d_vector2);

/**
  * @function mtlx_math_trianglewave_float
  * @description Library: mtlx. Category: place2d. Type: float
  *   LiteGraph id: mtlx/math/trianglewave_float
  */
function mtlx_math_trianglewave_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_trianglewave_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'trianglewave';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/trianglewave.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_trianglewave_float_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','float');
  this.addProperty('in', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'trianglewave_float';
  this.desc = "MaterialX:mtlx/math/trianglewave_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_math_trianglewave_float.nodedef_name = 'ND_trianglewave_float';
mtlx_math_trianglewave_float.nodedef_node = 'trianglewave';
mtlx_math_trianglewave_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/trianglewave.html';
LiteGraph.registerNodeType('mtlx/math/trianglewave_float',mtlx_math_trianglewave_float);

/**
  * @function mtlx_math_reflect_vector3
  * @description Library: mtlx. Category: trianglewave. Type: vector3
  *   LiteGraph id: mtlx/math/reflect_vector3
  */
function mtlx_math_reflect_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_reflect_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'reflect';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/reflect.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_reflect_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [1.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nworld"});
  this.addOutput('out','vector3');
  this.title = 'reflect_vector3';
  this.desc = "MaterialX:mtlx/math/reflect_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_reflect_vector3.nodedef_name = 'ND_reflect_vector3';
mtlx_math_reflect_vector3.nodedef_node = 'reflect';
mtlx_math_reflect_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/reflect.html';
LiteGraph.registerNodeType('mtlx/math/reflect_vector3',mtlx_math_reflect_vector3);

/**
  * @function mtlx_math_refract_vector3
  * @description Library: mtlx. Category: reflect. Type: vector3
  *   LiteGraph id: mtlx/math/refract_vector3
  */
function mtlx_math_refract_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_refract_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'refract';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/refract.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_refract_vector3_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector3');
  this.addProperty('in', [1.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nworld"});
  this.addInput('ior','float');
  this.addProperty('ior', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'refract_vector3';
  this.desc = "MaterialX:mtlx/math/refract_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_math_refract_vector3.nodedef_name = 'ND_refract_vector3';
mtlx_math_refract_vector3.nodedef_node = 'refract';
mtlx_math_refract_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/refract.html';
LiteGraph.registerNodeType('mtlx/math/refract_vector3',mtlx_math_refract_vector3);

/**
  * @function mtlx_adjustment_remap_float
  * @description Library: mtlx. Category: refract. Type: float
  *   LiteGraph id: mtlx/adjustment/remap_float
  */
function mtlx_adjustment_remap_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_remap_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'remap';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/remap.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_remap_float_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inlow','float');
  this.addProperty('inlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inhigh','float');
  this.addProperty('inhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outlow','float');
  this.addProperty('outlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outhigh','float');
  this.addProperty('outhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'remap_float';
  this.desc = "MaterialX:mtlx/adjustment/remap_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_adjustment_remap_float.nodedef_name = 'ND_remap_float';
mtlx_adjustment_remap_float.nodedef_node = 'remap';
mtlx_adjustment_remap_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/remap.html';
LiteGraph.registerNodeType('mtlx/adjustment/remap_float',mtlx_adjustment_remap_float);

/**
  * @function mtlx_adjustment_remap_color3
  * @description Library: mtlx. Category: remap. Type: color3
  *   LiteGraph id: mtlx/adjustment/remap_color3
  */
function mtlx_adjustment_remap_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_remap_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'remap';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/remap.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_remap_color3_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inlow','color3');
  this.addProperty('inlow', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inhigh','color3');
  this.addProperty('inhigh', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outlow','color3');
  this.addProperty('outlow', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outhigh','color3');
  this.addProperty('outhigh', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'remap_color3';
  this.desc = "MaterialX:mtlx/adjustment/remap_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_adjustment_remap_color3.nodedef_name = 'ND_remap_color3';
mtlx_adjustment_remap_color3.nodedef_node = 'remap';
mtlx_adjustment_remap_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/remap.html';
LiteGraph.registerNodeType('mtlx/adjustment/remap_color3',mtlx_adjustment_remap_color3);

/**
  * @function mtlx_adjustment_remap_color4
  * @description Library: mtlx. Category: remap. Type: color4
  *   LiteGraph id: mtlx/adjustment/remap_color4
  */
function mtlx_adjustment_remap_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_remap_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'remap';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/remap.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_remap_color4_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inlow','color4');
  this.addProperty('inlow', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inhigh','color4');
  this.addProperty('inhigh', [1.0, 1.0, 1.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outlow','color4');
  this.addProperty('outlow', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outhigh','color4');
  this.addProperty('outhigh', [1.0, 1.0, 1.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'remap_color4';
  this.desc = "MaterialX:mtlx/adjustment/remap_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_adjustment_remap_color4.nodedef_name = 'ND_remap_color4';
mtlx_adjustment_remap_color4.nodedef_node = 'remap';
mtlx_adjustment_remap_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/remap.html';
LiteGraph.registerNodeType('mtlx/adjustment/remap_color4',mtlx_adjustment_remap_color4);

/**
  * @function mtlx_adjustment_remap_vector2
  * @description Library: mtlx. Category: remap. Type: vector2
  *   LiteGraph id: mtlx/adjustment/remap_vector2
  */
function mtlx_adjustment_remap_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_remap_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'remap';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/remap.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_remap_vector2_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inlow','vector2');
  this.addProperty('inlow', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inhigh','vector2');
  this.addProperty('inhigh', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outlow','vector2');
  this.addProperty('outlow', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outhigh','vector2');
  this.addProperty('outhigh', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'remap_vector2';
  this.desc = "MaterialX:mtlx/adjustment/remap_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_adjustment_remap_vector2.nodedef_name = 'ND_remap_vector2';
mtlx_adjustment_remap_vector2.nodedef_node = 'remap';
mtlx_adjustment_remap_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/remap.html';
LiteGraph.registerNodeType('mtlx/adjustment/remap_vector2',mtlx_adjustment_remap_vector2);

/**
  * @function mtlx_adjustment_remap_vector3
  * @description Library: mtlx. Category: remap. Type: vector3
  *   LiteGraph id: mtlx/adjustment/remap_vector3
  */
function mtlx_adjustment_remap_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_remap_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'remap';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/remap.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_remap_vector3_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inlow','vector3');
  this.addProperty('inlow', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inhigh','vector3');
  this.addProperty('inhigh', [1.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outlow','vector3');
  this.addProperty('outlow', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outhigh','vector3');
  this.addProperty('outhigh', [1.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'remap_vector3';
  this.desc = "MaterialX:mtlx/adjustment/remap_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_adjustment_remap_vector3.nodedef_name = 'ND_remap_vector3';
mtlx_adjustment_remap_vector3.nodedef_node = 'remap';
mtlx_adjustment_remap_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/remap.html';
LiteGraph.registerNodeType('mtlx/adjustment/remap_vector3',mtlx_adjustment_remap_vector3);

/**
  * @function mtlx_adjustment_remap_vector4
  * @description Library: mtlx. Category: remap. Type: vector4
  *   LiteGraph id: mtlx/adjustment/remap_vector4
  */
function mtlx_adjustment_remap_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_remap_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'remap';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/remap.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_remap_vector4_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inlow','vector4');
  this.addProperty('inlow', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inhigh','vector4');
  this.addProperty('inhigh', [1.0, 1.0, 1.0, 1.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outlow','vector4');
  this.addProperty('outlow', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outhigh','vector4');
  this.addProperty('outhigh', [1.0, 1.0, 1.0, 1.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'remap_vector4';
  this.desc = "MaterialX:mtlx/adjustment/remap_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_adjustment_remap_vector4.nodedef_name = 'ND_remap_vector4';
mtlx_adjustment_remap_vector4.nodedef_node = 'remap';
mtlx_adjustment_remap_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/remap.html';
LiteGraph.registerNodeType('mtlx/adjustment/remap_vector4',mtlx_adjustment_remap_vector4);

/**
  * @function mtlx_adjustment_remap_color3FA
  * @description Library: mtlx. Category: remap. Type: color3
  *   LiteGraph id: mtlx/adjustment/remap_color3FA
  */
function mtlx_adjustment_remap_color3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_remap_color3FA';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'remap';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/remap.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_remap_color3FA_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inlow','float');
  this.addProperty('inlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inhigh','float');
  this.addProperty('inhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outlow','float');
  this.addProperty('outlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outhigh','float');
  this.addProperty('outhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'remap_color3';
  this.desc = "MaterialX:mtlx/adjustment/remap_color3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_adjustment_remap_color3FA.nodedef_name = 'ND_remap_color3FA';
mtlx_adjustment_remap_color3FA.nodedef_node = 'remap';
mtlx_adjustment_remap_color3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/remap.html';
LiteGraph.registerNodeType('mtlx/adjustment/remap_color3FA',mtlx_adjustment_remap_color3FA);

/**
  * @function mtlx_adjustment_remap_color4FA
  * @description Library: mtlx. Category: remap. Type: color4
  *   LiteGraph id: mtlx/adjustment/remap_color4FA
  */
function mtlx_adjustment_remap_color4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_remap_color4FA';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'remap';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/remap.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_remap_color4FA_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inlow','float');
  this.addProperty('inlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inhigh','float');
  this.addProperty('inhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outlow','float');
  this.addProperty('outlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outhigh','float');
  this.addProperty('outhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'remap_color4';
  this.desc = "MaterialX:mtlx/adjustment/remap_color4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_adjustment_remap_color4FA.nodedef_name = 'ND_remap_color4FA';
mtlx_adjustment_remap_color4FA.nodedef_node = 'remap';
mtlx_adjustment_remap_color4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/remap.html';
LiteGraph.registerNodeType('mtlx/adjustment/remap_color4FA',mtlx_adjustment_remap_color4FA);

/**
  * @function mtlx_adjustment_remap_vector2FA
  * @description Library: mtlx. Category: remap. Type: vector2
  *   LiteGraph id: mtlx/adjustment/remap_vector2FA
  */
function mtlx_adjustment_remap_vector2FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_remap_vector2FA';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'remap';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/remap.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_remap_vector2FA_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inlow','float');
  this.addProperty('inlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inhigh','float');
  this.addProperty('inhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outlow','float');
  this.addProperty('outlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outhigh','float');
  this.addProperty('outhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'remap_vector2';
  this.desc = "MaterialX:mtlx/adjustment/remap_vector2FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_adjustment_remap_vector2FA.nodedef_name = 'ND_remap_vector2FA';
mtlx_adjustment_remap_vector2FA.nodedef_node = 'remap';
mtlx_adjustment_remap_vector2FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/remap.html';
LiteGraph.registerNodeType('mtlx/adjustment/remap_vector2FA',mtlx_adjustment_remap_vector2FA);

/**
  * @function mtlx_adjustment_remap_vector3FA
  * @description Library: mtlx. Category: remap. Type: vector3
  *   LiteGraph id: mtlx/adjustment/remap_vector3FA
  */
function mtlx_adjustment_remap_vector3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_remap_vector3FA';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'remap';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/remap.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_remap_vector3FA_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inlow','float');
  this.addProperty('inlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inhigh','float');
  this.addProperty('inhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outlow','float');
  this.addProperty('outlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outhigh','float');
  this.addProperty('outhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'remap_vector3';
  this.desc = "MaterialX:mtlx/adjustment/remap_vector3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_adjustment_remap_vector3FA.nodedef_name = 'ND_remap_vector3FA';
mtlx_adjustment_remap_vector3FA.nodedef_node = 'remap';
mtlx_adjustment_remap_vector3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/remap.html';
LiteGraph.registerNodeType('mtlx/adjustment/remap_vector3FA',mtlx_adjustment_remap_vector3FA);

/**
  * @function mtlx_adjustment_remap_vector4FA
  * @description Library: mtlx. Category: remap. Type: vector4
  *   LiteGraph id: mtlx/adjustment/remap_vector4FA
  */
function mtlx_adjustment_remap_vector4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_remap_vector4FA';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'remap';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/remap.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_remap_vector4FA_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inlow','float');
  this.addProperty('inlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inhigh','float');
  this.addProperty('inhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outlow','float');
  this.addProperty('outlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outhigh','float');
  this.addProperty('outhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'remap_vector4';
  this.desc = "MaterialX:mtlx/adjustment/remap_vector4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_adjustment_remap_vector4FA.nodedef_name = 'ND_remap_vector4FA';
mtlx_adjustment_remap_vector4FA.nodedef_node = 'remap';
mtlx_adjustment_remap_vector4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/remap.html';
LiteGraph.registerNodeType('mtlx/adjustment/remap_vector4FA',mtlx_adjustment_remap_vector4FA);

/**
  * @function mtlx_adjustment_smoothstep_float
  * @description Library: mtlx. Category: remap. Type: float
  *   LiteGraph id: mtlx/adjustment/smoothstep_float
  */
function mtlx_adjustment_smoothstep_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_smoothstep_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'smoothstep';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/smoothstep.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_smoothstep_float_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('low','float');
  this.addProperty('low', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('high','float');
  this.addProperty('high', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'smoothstep_float';
  this.desc = "MaterialX:mtlx/adjustment/smoothstep_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_adjustment_smoothstep_float.nodedef_name = 'ND_smoothstep_float';
mtlx_adjustment_smoothstep_float.nodedef_node = 'smoothstep';
mtlx_adjustment_smoothstep_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/smoothstep.html';
LiteGraph.registerNodeType('mtlx/adjustment/smoothstep_float',mtlx_adjustment_smoothstep_float);

/**
  * @function mtlx_adjustment_smoothstep_color3
  * @description Library: mtlx. Category: smoothstep. Type: color3
  *   LiteGraph id: mtlx/adjustment/smoothstep_color3
  */
function mtlx_adjustment_smoothstep_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_smoothstep_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'smoothstep';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/smoothstep.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_smoothstep_color3_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('low','color3');
  this.addProperty('low', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('high','color3');
  this.addProperty('high', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'smoothstep_color3';
  this.desc = "MaterialX:mtlx/adjustment/smoothstep_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_adjustment_smoothstep_color3.nodedef_name = 'ND_smoothstep_color3';
mtlx_adjustment_smoothstep_color3.nodedef_node = 'smoothstep';
mtlx_adjustment_smoothstep_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/smoothstep.html';
LiteGraph.registerNodeType('mtlx/adjustment/smoothstep_color3',mtlx_adjustment_smoothstep_color3);

/**
  * @function mtlx_adjustment_smoothstep_color4
  * @description Library: mtlx. Category: smoothstep. Type: color4
  *   LiteGraph id: mtlx/adjustment/smoothstep_color4
  */
function mtlx_adjustment_smoothstep_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_smoothstep_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'smoothstep';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/smoothstep.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_smoothstep_color4_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('low','color4');
  this.addProperty('low', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('high','color4');
  this.addProperty('high', [1.0, 1.0, 1.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'smoothstep_color4';
  this.desc = "MaterialX:mtlx/adjustment/smoothstep_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_adjustment_smoothstep_color4.nodedef_name = 'ND_smoothstep_color4';
mtlx_adjustment_smoothstep_color4.nodedef_node = 'smoothstep';
mtlx_adjustment_smoothstep_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/smoothstep.html';
LiteGraph.registerNodeType('mtlx/adjustment/smoothstep_color4',mtlx_adjustment_smoothstep_color4);

/**
  * @function mtlx_adjustment_smoothstep_vector2
  * @description Library: mtlx. Category: smoothstep. Type: vector2
  *   LiteGraph id: mtlx/adjustment/smoothstep_vector2
  */
function mtlx_adjustment_smoothstep_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_smoothstep_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'smoothstep';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/smoothstep.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_smoothstep_vector2_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('low','vector2');
  this.addProperty('low', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('high','vector2');
  this.addProperty('high', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'smoothstep_vector2';
  this.desc = "MaterialX:mtlx/adjustment/smoothstep_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_adjustment_smoothstep_vector2.nodedef_name = 'ND_smoothstep_vector2';
mtlx_adjustment_smoothstep_vector2.nodedef_node = 'smoothstep';
mtlx_adjustment_smoothstep_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/smoothstep.html';
LiteGraph.registerNodeType('mtlx/adjustment/smoothstep_vector2',mtlx_adjustment_smoothstep_vector2);

/**
  * @function mtlx_adjustment_smoothstep_vector3
  * @description Library: mtlx. Category: smoothstep. Type: vector3
  *   LiteGraph id: mtlx/adjustment/smoothstep_vector3
  */
function mtlx_adjustment_smoothstep_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_smoothstep_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'smoothstep';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/smoothstep.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_smoothstep_vector3_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('low','vector3');
  this.addProperty('low', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('high','vector3');
  this.addProperty('high', [1.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'smoothstep_vector3';
  this.desc = "MaterialX:mtlx/adjustment/smoothstep_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_adjustment_smoothstep_vector3.nodedef_name = 'ND_smoothstep_vector3';
mtlx_adjustment_smoothstep_vector3.nodedef_node = 'smoothstep';
mtlx_adjustment_smoothstep_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/smoothstep.html';
LiteGraph.registerNodeType('mtlx/adjustment/smoothstep_vector3',mtlx_adjustment_smoothstep_vector3);

/**
  * @function mtlx_adjustment_smoothstep_vector4
  * @description Library: mtlx. Category: smoothstep. Type: vector4
  *   LiteGraph id: mtlx/adjustment/smoothstep_vector4
  */
function mtlx_adjustment_smoothstep_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_smoothstep_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'smoothstep';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/smoothstep.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_smoothstep_vector4_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('low','vector4');
  this.addProperty('low', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('high','vector4');
  this.addProperty('high', [1.0, 1.0, 1.0, 1.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'smoothstep_vector4';
  this.desc = "MaterialX:mtlx/adjustment/smoothstep_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_adjustment_smoothstep_vector4.nodedef_name = 'ND_smoothstep_vector4';
mtlx_adjustment_smoothstep_vector4.nodedef_node = 'smoothstep';
mtlx_adjustment_smoothstep_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/smoothstep.html';
LiteGraph.registerNodeType('mtlx/adjustment/smoothstep_vector4',mtlx_adjustment_smoothstep_vector4);

/**
  * @function mtlx_adjustment_smoothstep_color3FA
  * @description Library: mtlx. Category: smoothstep. Type: color3
  *   LiteGraph id: mtlx/adjustment/smoothstep_color3FA
  */
function mtlx_adjustment_smoothstep_color3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_smoothstep_color3FA';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'smoothstep';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/smoothstep.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_smoothstep_color3FA_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('low','float');
  this.addProperty('low', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('high','float');
  this.addProperty('high', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'smoothstep_color3';
  this.desc = "MaterialX:mtlx/adjustment/smoothstep_color3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_adjustment_smoothstep_color3FA.nodedef_name = 'ND_smoothstep_color3FA';
mtlx_adjustment_smoothstep_color3FA.nodedef_node = 'smoothstep';
mtlx_adjustment_smoothstep_color3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/smoothstep.html';
LiteGraph.registerNodeType('mtlx/adjustment/smoothstep_color3FA',mtlx_adjustment_smoothstep_color3FA);

/**
  * @function mtlx_adjustment_smoothstep_color4FA
  * @description Library: mtlx. Category: smoothstep. Type: color4
  *   LiteGraph id: mtlx/adjustment/smoothstep_color4FA
  */
function mtlx_adjustment_smoothstep_color4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_smoothstep_color4FA';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'smoothstep';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/smoothstep.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_smoothstep_color4FA_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('low','float');
  this.addProperty('low', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('high','float');
  this.addProperty('high', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'smoothstep_color4';
  this.desc = "MaterialX:mtlx/adjustment/smoothstep_color4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_adjustment_smoothstep_color4FA.nodedef_name = 'ND_smoothstep_color4FA';
mtlx_adjustment_smoothstep_color4FA.nodedef_node = 'smoothstep';
mtlx_adjustment_smoothstep_color4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/smoothstep.html';
LiteGraph.registerNodeType('mtlx/adjustment/smoothstep_color4FA',mtlx_adjustment_smoothstep_color4FA);

/**
  * @function mtlx_adjustment_smoothstep_vector2FA
  * @description Library: mtlx. Category: smoothstep. Type: vector2
  *   LiteGraph id: mtlx/adjustment/smoothstep_vector2FA
  */
function mtlx_adjustment_smoothstep_vector2FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_smoothstep_vector2FA';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'smoothstep';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/smoothstep.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_smoothstep_vector2FA_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('low','float');
  this.addProperty('low', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('high','float');
  this.addProperty('high', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'smoothstep_vector2';
  this.desc = "MaterialX:mtlx/adjustment/smoothstep_vector2FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_adjustment_smoothstep_vector2FA.nodedef_name = 'ND_smoothstep_vector2FA';
mtlx_adjustment_smoothstep_vector2FA.nodedef_node = 'smoothstep';
mtlx_adjustment_smoothstep_vector2FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/smoothstep.html';
LiteGraph.registerNodeType('mtlx/adjustment/smoothstep_vector2FA',mtlx_adjustment_smoothstep_vector2FA);

/**
  * @function mtlx_adjustment_smoothstep_vector3FA
  * @description Library: mtlx. Category: smoothstep. Type: vector3
  *   LiteGraph id: mtlx/adjustment/smoothstep_vector3FA
  */
function mtlx_adjustment_smoothstep_vector3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_smoothstep_vector3FA';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'smoothstep';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/smoothstep.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_smoothstep_vector3FA_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('low','float');
  this.addProperty('low', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('high','float');
  this.addProperty('high', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'smoothstep_vector3';
  this.desc = "MaterialX:mtlx/adjustment/smoothstep_vector3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_adjustment_smoothstep_vector3FA.nodedef_name = 'ND_smoothstep_vector3FA';
mtlx_adjustment_smoothstep_vector3FA.nodedef_node = 'smoothstep';
mtlx_adjustment_smoothstep_vector3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/smoothstep.html';
LiteGraph.registerNodeType('mtlx/adjustment/smoothstep_vector3FA',mtlx_adjustment_smoothstep_vector3FA);

/**
  * @function mtlx_adjustment_smoothstep_vector4FA
  * @description Library: mtlx. Category: smoothstep. Type: vector4
  *   LiteGraph id: mtlx/adjustment/smoothstep_vector4FA
  */
function mtlx_adjustment_smoothstep_vector4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_smoothstep_vector4FA';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'smoothstep';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/smoothstep.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_smoothstep_vector4FA_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('low','float');
  this.addProperty('low', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('high','float');
  this.addProperty('high', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'smoothstep_vector4';
  this.desc = "MaterialX:mtlx/adjustment/smoothstep_vector4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_adjustment_smoothstep_vector4FA.nodedef_name = 'ND_smoothstep_vector4FA';
mtlx_adjustment_smoothstep_vector4FA.nodedef_node = 'smoothstep';
mtlx_adjustment_smoothstep_vector4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/smoothstep.html';
LiteGraph.registerNodeType('mtlx/adjustment/smoothstep_vector4FA',mtlx_adjustment_smoothstep_vector4FA);

/**
  * @function mtlx_adjustment_curveadjust_float
  * @description Library: mtlx. Category: smoothstep. Type: float
  *   LiteGraph id: mtlx/adjustment/curveadjust_float
  */
function mtlx_adjustment_curveadjust_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_curveadjust_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'curveadjust';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/curveadjust.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_curveadjust_float_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('knots','vector2array');
  this.addProperty('knots', '', 'vector2array',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'curveadjust_float';
  this.desc = "MaterialX:mtlx/adjustment/curveadjust_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_adjustment_curveadjust_float.nodedef_name = 'ND_curveadjust_float';
mtlx_adjustment_curveadjust_float.nodedef_node = 'curveadjust';
mtlx_adjustment_curveadjust_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/curveadjust.html';
LiteGraph.registerNodeType('mtlx/adjustment/curveadjust_float',mtlx_adjustment_curveadjust_float);

/**
  * @function mtlx_adjustment_curveadjust_color3
  * @description Library: mtlx. Category: curveadjust. Type: color3
  *   LiteGraph id: mtlx/adjustment/curveadjust_color3
  */
function mtlx_adjustment_curveadjust_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_curveadjust_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'curveadjust';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/curveadjust.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_curveadjust_color3_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('knots','vector2array');
  this.addProperty('knots', '', 'vector2array',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'curveadjust_color3';
  this.desc = "MaterialX:mtlx/adjustment/curveadjust_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_adjustment_curveadjust_color3.nodedef_name = 'ND_curveadjust_color3';
mtlx_adjustment_curveadjust_color3.nodedef_node = 'curveadjust';
mtlx_adjustment_curveadjust_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/curveadjust.html';
LiteGraph.registerNodeType('mtlx/adjustment/curveadjust_color3',mtlx_adjustment_curveadjust_color3);

/**
  * @function mtlx_adjustment_curveadjust_color4
  * @description Library: mtlx. Category: curveadjust. Type: color4
  *   LiteGraph id: mtlx/adjustment/curveadjust_color4
  */
function mtlx_adjustment_curveadjust_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_curveadjust_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'curveadjust';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/curveadjust.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_curveadjust_color4_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('knots','vector2array');
  this.addProperty('knots', '', 'vector2array',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'curveadjust_color4';
  this.desc = "MaterialX:mtlx/adjustment/curveadjust_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_adjustment_curveadjust_color4.nodedef_name = 'ND_curveadjust_color4';
mtlx_adjustment_curveadjust_color4.nodedef_node = 'curveadjust';
mtlx_adjustment_curveadjust_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/curveadjust.html';
LiteGraph.registerNodeType('mtlx/adjustment/curveadjust_color4',mtlx_adjustment_curveadjust_color4);

/**
  * @function mtlx_adjustment_curveadjust_vector2
  * @description Library: mtlx. Category: curveadjust. Type: vector2
  *   LiteGraph id: mtlx/adjustment/curveadjust_vector2
  */
function mtlx_adjustment_curveadjust_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_curveadjust_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'curveadjust';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/curveadjust.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_curveadjust_vector2_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('knots','vector2array');
  this.addProperty('knots', '', 'vector2array',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'curveadjust_vector2';
  this.desc = "MaterialX:mtlx/adjustment/curveadjust_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_adjustment_curveadjust_vector2.nodedef_name = 'ND_curveadjust_vector2';
mtlx_adjustment_curveadjust_vector2.nodedef_node = 'curveadjust';
mtlx_adjustment_curveadjust_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/curveadjust.html';
LiteGraph.registerNodeType('mtlx/adjustment/curveadjust_vector2',mtlx_adjustment_curveadjust_vector2);

/**
  * @function mtlx_adjustment_curveadjust_vector3
  * @description Library: mtlx. Category: curveadjust. Type: vector3
  *   LiteGraph id: mtlx/adjustment/curveadjust_vector3
  */
function mtlx_adjustment_curveadjust_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_curveadjust_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'curveadjust';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/curveadjust.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_curveadjust_vector3_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('knots','vector2array');
  this.addProperty('knots', '', 'vector2array',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'curveadjust_vector3';
  this.desc = "MaterialX:mtlx/adjustment/curveadjust_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_adjustment_curveadjust_vector3.nodedef_name = 'ND_curveadjust_vector3';
mtlx_adjustment_curveadjust_vector3.nodedef_node = 'curveadjust';
mtlx_adjustment_curveadjust_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/curveadjust.html';
LiteGraph.registerNodeType('mtlx/adjustment/curveadjust_vector3',mtlx_adjustment_curveadjust_vector3);

/**
  * @function mtlx_adjustment_curveadjust_vector4
  * @description Library: mtlx. Category: curveadjust. Type: vector4
  *   LiteGraph id: mtlx/adjustment/curveadjust_vector4
  */
function mtlx_adjustment_curveadjust_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_curveadjust_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'curveadjust';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/curveadjust.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_curveadjust_vector4_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('knots','vector2array');
  this.addProperty('knots', '', 'vector2array',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'curveadjust_vector4';
  this.desc = "MaterialX:mtlx/adjustment/curveadjust_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_adjustment_curveadjust_vector4.nodedef_name = 'ND_curveadjust_vector4';
mtlx_adjustment_curveadjust_vector4.nodedef_node = 'curveadjust';
mtlx_adjustment_curveadjust_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/curveadjust.html';
LiteGraph.registerNodeType('mtlx/adjustment/curveadjust_vector4',mtlx_adjustment_curveadjust_vector4);

/**
  * @function mtlx_adjustment_luminance_color3
  * @description Library: mtlx. Category: curveadjust. Type: color3
  *   LiteGraph id: mtlx/adjustment/luminance_color3
  */
function mtlx_adjustment_luminance_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_luminance_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'luminance';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/luminance.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_luminance_color3_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('lumacoeffs','color3');
  this.addProperty('lumacoeffs', [0.2722287, 0.6740818, 0.0536895], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["acescg"," rec709"," rec2020"," rec2100"],"enumvalues":["0.2722287","0.6740818","0.0536895"," 0.2126","0.7152","0.0722"," 0.2627","0.6780","0.0593"," 0.2627","0.6780","0.0593"]});
  this.addOutput('out','color3');
  this.title = 'luminance_color3';
  this.desc = "MaterialX:mtlx/adjustment/luminance_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_adjustment_luminance_color3.nodedef_name = 'ND_luminance_color3';
mtlx_adjustment_luminance_color3.nodedef_node = 'luminance';
mtlx_adjustment_luminance_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/luminance.html';
LiteGraph.registerNodeType('mtlx/adjustment/luminance_color3',mtlx_adjustment_luminance_color3);

/**
  * @function mtlx_adjustment_luminance_color4
  * @description Library: mtlx. Category: luminance. Type: color4
  *   LiteGraph id: mtlx/adjustment/luminance_color4
  */
function mtlx_adjustment_luminance_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_luminance_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'luminance';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/luminance.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_luminance_color4_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('lumacoeffs','color3');
  this.addProperty('lumacoeffs', [0.2722287, 0.6740818, 0.0536895], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["acescg"," rec709"," rec2020"," rec2100"],"enumvalues":["0.2722287","0.6740818","0.0536895"," 0.2126","0.7152","0.0722"," 0.2627","0.6780","0.0593"," 0.2627","0.6780","0.0593"]});
  this.addOutput('out','color4');
  this.title = 'luminance_color4';
  this.desc = "MaterialX:mtlx/adjustment/luminance_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_adjustment_luminance_color4.nodedef_name = 'ND_luminance_color4';
mtlx_adjustment_luminance_color4.nodedef_node = 'luminance';
mtlx_adjustment_luminance_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/luminance.html';
LiteGraph.registerNodeType('mtlx/adjustment/luminance_color4',mtlx_adjustment_luminance_color4);

/**
  * @function mtlx_adjustment_rgbtohsv_color3
  * @description Library: mtlx. Category: luminance. Type: color3
  *   LiteGraph id: mtlx/adjustment/rgbtohsv_color3
  */
function mtlx_adjustment_rgbtohsv_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_rgbtohsv_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'rgbtohsv';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/rgbtohsv.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_rgbtohsv_color3_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'rgbtohsv_color3';
  this.desc = "MaterialX:mtlx/adjustment/rgbtohsv_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_adjustment_rgbtohsv_color3.nodedef_name = 'ND_rgbtohsv_color3';
mtlx_adjustment_rgbtohsv_color3.nodedef_node = 'rgbtohsv';
mtlx_adjustment_rgbtohsv_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/rgbtohsv.html';
LiteGraph.registerNodeType('mtlx/adjustment/rgbtohsv_color3',mtlx_adjustment_rgbtohsv_color3);

/**
  * @function mtlx_adjustment_rgbtohsv_color4
  * @description Library: mtlx. Category: rgbtohsv. Type: color4
  *   LiteGraph id: mtlx/adjustment/rgbtohsv_color4
  */
function mtlx_adjustment_rgbtohsv_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_rgbtohsv_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'rgbtohsv';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/rgbtohsv.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_rgbtohsv_color4_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'rgbtohsv_color4';
  this.desc = "MaterialX:mtlx/adjustment/rgbtohsv_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_adjustment_rgbtohsv_color4.nodedef_name = 'ND_rgbtohsv_color4';
mtlx_adjustment_rgbtohsv_color4.nodedef_node = 'rgbtohsv';
mtlx_adjustment_rgbtohsv_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/rgbtohsv.html';
LiteGraph.registerNodeType('mtlx/adjustment/rgbtohsv_color4',mtlx_adjustment_rgbtohsv_color4);

/**
  * @function mtlx_adjustment_hsvtorgb_color3
  * @description Library: mtlx. Category: rgbtohsv. Type: color3
  *   LiteGraph id: mtlx/adjustment/hsvtorgb_color3
  */
function mtlx_adjustment_hsvtorgb_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_hsvtorgb_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'hsvtorgb';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/hsvtorgb.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_hsvtorgb_color3_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'hsvtorgb_color3';
  this.desc = "MaterialX:mtlx/adjustment/hsvtorgb_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_adjustment_hsvtorgb_color3.nodedef_name = 'ND_hsvtorgb_color3';
mtlx_adjustment_hsvtorgb_color3.nodedef_node = 'hsvtorgb';
mtlx_adjustment_hsvtorgb_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/hsvtorgb.html';
LiteGraph.registerNodeType('mtlx/adjustment/hsvtorgb_color3',mtlx_adjustment_hsvtorgb_color3);

/**
  * @function mtlx_adjustment_hsvtorgb_color4
  * @description Library: mtlx. Category: hsvtorgb. Type: color4
  *   LiteGraph id: mtlx/adjustment/hsvtorgb_color4
  */
function mtlx_adjustment_hsvtorgb_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_hsvtorgb_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'hsvtorgb';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/hsvtorgb.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_hsvtorgb_color4_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'hsvtorgb_color4';
  this.desc = "MaterialX:mtlx/adjustment/hsvtorgb_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_adjustment_hsvtorgb_color4.nodedef_name = 'ND_hsvtorgb_color4';
mtlx_adjustment_hsvtorgb_color4.nodedef_node = 'hsvtorgb';
mtlx_adjustment_hsvtorgb_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/hsvtorgb.html';
LiteGraph.registerNodeType('mtlx/adjustment/hsvtorgb_color4',mtlx_adjustment_hsvtorgb_color4);

/**
  * @function mtlx_adjustment_contrast_float
  * @description Library: mtlx. Category: hsvtorgb. Type: float
  *   LiteGraph id: mtlx/adjustment/contrast_float
  */
function mtlx_adjustment_contrast_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_contrast_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'contrast';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/contrast.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_contrast_float_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','float');
  this.addProperty('amount', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'contrast_float';
  this.desc = "MaterialX:mtlx/adjustment/contrast_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_adjustment_contrast_float.nodedef_name = 'ND_contrast_float';
mtlx_adjustment_contrast_float.nodedef_node = 'contrast';
mtlx_adjustment_contrast_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/contrast.html';
LiteGraph.registerNodeType('mtlx/adjustment/contrast_float',mtlx_adjustment_contrast_float);

/**
  * @function mtlx_adjustment_contrast_color3
  * @description Library: mtlx. Category: contrast. Type: color3
  *   LiteGraph id: mtlx/adjustment/contrast_color3
  */
function mtlx_adjustment_contrast_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_contrast_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'contrast';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/contrast.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_contrast_color3_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','color3');
  this.addProperty('amount', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','color3');
  this.addProperty('pivot', [0.5, 0.5, 0.5], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'contrast_color3';
  this.desc = "MaterialX:mtlx/adjustment/contrast_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_adjustment_contrast_color3.nodedef_name = 'ND_contrast_color3';
mtlx_adjustment_contrast_color3.nodedef_node = 'contrast';
mtlx_adjustment_contrast_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/contrast.html';
LiteGraph.registerNodeType('mtlx/adjustment/contrast_color3',mtlx_adjustment_contrast_color3);

/**
  * @function mtlx_adjustment_contrast_color4
  * @description Library: mtlx. Category: contrast. Type: color4
  *   LiteGraph id: mtlx/adjustment/contrast_color4
  */
function mtlx_adjustment_contrast_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_contrast_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'contrast';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/contrast.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_contrast_color4_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','color4');
  this.addProperty('amount', [1.0, 1.0, 1.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','color4');
  this.addProperty('pivot', [0.5, 0.5, 0.5, 0.5], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'contrast_color4';
  this.desc = "MaterialX:mtlx/adjustment/contrast_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_adjustment_contrast_color4.nodedef_name = 'ND_contrast_color4';
mtlx_adjustment_contrast_color4.nodedef_node = 'contrast';
mtlx_adjustment_contrast_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/contrast.html';
LiteGraph.registerNodeType('mtlx/adjustment/contrast_color4',mtlx_adjustment_contrast_color4);

/**
  * @function mtlx_adjustment_contrast_vector2
  * @description Library: mtlx. Category: contrast. Type: vector2
  *   LiteGraph id: mtlx/adjustment/contrast_vector2
  */
function mtlx_adjustment_contrast_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_contrast_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'contrast';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/contrast.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_contrast_vector2_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','vector2');
  this.addProperty('amount', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','vector2');
  this.addProperty('pivot', [0.5, 0.5], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'contrast_vector2';
  this.desc = "MaterialX:mtlx/adjustment/contrast_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_adjustment_contrast_vector2.nodedef_name = 'ND_contrast_vector2';
mtlx_adjustment_contrast_vector2.nodedef_node = 'contrast';
mtlx_adjustment_contrast_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/contrast.html';
LiteGraph.registerNodeType('mtlx/adjustment/contrast_vector2',mtlx_adjustment_contrast_vector2);

/**
  * @function mtlx_adjustment_contrast_vector3
  * @description Library: mtlx. Category: contrast. Type: vector3
  *   LiteGraph id: mtlx/adjustment/contrast_vector3
  */
function mtlx_adjustment_contrast_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_contrast_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'contrast';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/contrast.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_contrast_vector3_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','vector3');
  this.addProperty('amount', [1.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','vector3');
  this.addProperty('pivot', [0.5, 0.5, 0.5], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'contrast_vector3';
  this.desc = "MaterialX:mtlx/adjustment/contrast_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_adjustment_contrast_vector3.nodedef_name = 'ND_contrast_vector3';
mtlx_adjustment_contrast_vector3.nodedef_node = 'contrast';
mtlx_adjustment_contrast_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/contrast.html';
LiteGraph.registerNodeType('mtlx/adjustment/contrast_vector3',mtlx_adjustment_contrast_vector3);

/**
  * @function mtlx_adjustment_contrast_vector4
  * @description Library: mtlx. Category: contrast. Type: vector4
  *   LiteGraph id: mtlx/adjustment/contrast_vector4
  */
function mtlx_adjustment_contrast_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_contrast_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'contrast';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/contrast.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_contrast_vector4_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','vector4');
  this.addProperty('amount', [1.0, 1.0, 1.0, 1.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','vector4');
  this.addProperty('pivot', [0.5, 0.5, 0.5, 0.5], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'contrast_vector4';
  this.desc = "MaterialX:mtlx/adjustment/contrast_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_adjustment_contrast_vector4.nodedef_name = 'ND_contrast_vector4';
mtlx_adjustment_contrast_vector4.nodedef_node = 'contrast';
mtlx_adjustment_contrast_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/contrast.html';
LiteGraph.registerNodeType('mtlx/adjustment/contrast_vector4',mtlx_adjustment_contrast_vector4);

/**
  * @function mtlx_adjustment_contrast_color3FA
  * @description Library: mtlx. Category: contrast. Type: color3
  *   LiteGraph id: mtlx/adjustment/contrast_color3FA
  */
function mtlx_adjustment_contrast_color3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_contrast_color3FA';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'contrast';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/contrast.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_contrast_color3FA_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','float');
  this.addProperty('amount', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'contrast_color3';
  this.desc = "MaterialX:mtlx/adjustment/contrast_color3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_adjustment_contrast_color3FA.nodedef_name = 'ND_contrast_color3FA';
mtlx_adjustment_contrast_color3FA.nodedef_node = 'contrast';
mtlx_adjustment_contrast_color3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/contrast.html';
LiteGraph.registerNodeType('mtlx/adjustment/contrast_color3FA',mtlx_adjustment_contrast_color3FA);

/**
  * @function mtlx_adjustment_contrast_color4FA
  * @description Library: mtlx. Category: contrast. Type: color4
  *   LiteGraph id: mtlx/adjustment/contrast_color4FA
  */
function mtlx_adjustment_contrast_color4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_contrast_color4FA';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'contrast';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/contrast.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_contrast_color4FA_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','float');
  this.addProperty('amount', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'contrast_color4';
  this.desc = "MaterialX:mtlx/adjustment/contrast_color4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_adjustment_contrast_color4FA.nodedef_name = 'ND_contrast_color4FA';
mtlx_adjustment_contrast_color4FA.nodedef_node = 'contrast';
mtlx_adjustment_contrast_color4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/contrast.html';
LiteGraph.registerNodeType('mtlx/adjustment/contrast_color4FA',mtlx_adjustment_contrast_color4FA);

/**
  * @function mtlx_adjustment_contrast_vector2FA
  * @description Library: mtlx. Category: contrast. Type: vector2
  *   LiteGraph id: mtlx/adjustment/contrast_vector2FA
  */
function mtlx_adjustment_contrast_vector2FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_contrast_vector2FA';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'contrast';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/contrast.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_contrast_vector2FA_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','float');
  this.addProperty('amount', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'contrast_vector2';
  this.desc = "MaterialX:mtlx/adjustment/contrast_vector2FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_adjustment_contrast_vector2FA.nodedef_name = 'ND_contrast_vector2FA';
mtlx_adjustment_contrast_vector2FA.nodedef_node = 'contrast';
mtlx_adjustment_contrast_vector2FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/contrast.html';
LiteGraph.registerNodeType('mtlx/adjustment/contrast_vector2FA',mtlx_adjustment_contrast_vector2FA);

/**
  * @function mtlx_adjustment_contrast_vector3FA
  * @description Library: mtlx. Category: contrast. Type: vector3
  *   LiteGraph id: mtlx/adjustment/contrast_vector3FA
  */
function mtlx_adjustment_contrast_vector3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_contrast_vector3FA';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'contrast';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/contrast.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_contrast_vector3FA_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','float');
  this.addProperty('amount', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'contrast_vector3';
  this.desc = "MaterialX:mtlx/adjustment/contrast_vector3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_adjustment_contrast_vector3FA.nodedef_name = 'ND_contrast_vector3FA';
mtlx_adjustment_contrast_vector3FA.nodedef_node = 'contrast';
mtlx_adjustment_contrast_vector3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/contrast.html';
LiteGraph.registerNodeType('mtlx/adjustment/contrast_vector3FA',mtlx_adjustment_contrast_vector3FA);

/**
  * @function mtlx_adjustment_contrast_vector4FA
  * @description Library: mtlx. Category: contrast. Type: vector4
  *   LiteGraph id: mtlx/adjustment/contrast_vector4FA
  */
function mtlx_adjustment_contrast_vector4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_contrast_vector4FA';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'contrast';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/contrast.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_contrast_vector4FA_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','float');
  this.addProperty('amount', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('pivot','float');
  this.addProperty('pivot', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'contrast_vector4';
  this.desc = "MaterialX:mtlx/adjustment/contrast_vector4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_adjustment_contrast_vector4FA.nodedef_name = 'ND_contrast_vector4FA';
mtlx_adjustment_contrast_vector4FA.nodedef_node = 'contrast';
mtlx_adjustment_contrast_vector4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/contrast.html';
LiteGraph.registerNodeType('mtlx/adjustment/contrast_vector4FA',mtlx_adjustment_contrast_vector4FA);

/**
  * @function mtlx_adjustment_range_float
  * @description Library: mtlx. Category: contrast. Type: float
  *   LiteGraph id: mtlx/adjustment/range_float
  */
function mtlx_adjustment_range_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_range_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'range';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/range.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_range_float_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inlow','float');
  this.addProperty('inlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inhigh','float');
  this.addProperty('inhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('gamma','float');
  this.addProperty('gamma', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outlow','float');
  this.addProperty('outlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outhigh','float');
  this.addProperty('outhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('doclamp','boolean');
  this.addProperty('doclamp', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'range_float';
  this.desc = "MaterialX:mtlx/adjustment/range_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_adjustment_range_float.nodedef_name = 'ND_range_float';
mtlx_adjustment_range_float.nodedef_node = 'range';
mtlx_adjustment_range_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/range.html';
LiteGraph.registerNodeType('mtlx/adjustment/range_float',mtlx_adjustment_range_float);

/**
  * @function mtlx_adjustment_range_color3
  * @description Library: mtlx. Category: range. Type: color3
  *   LiteGraph id: mtlx/adjustment/range_color3
  */
function mtlx_adjustment_range_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_range_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'range';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/range.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_range_color3_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inlow','color3');
  this.addProperty('inlow', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inhigh','color3');
  this.addProperty('inhigh', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('gamma','color3');
  this.addProperty('gamma', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outlow','color3');
  this.addProperty('outlow', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outhigh','color3');
  this.addProperty('outhigh', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('doclamp','boolean');
  this.addProperty('doclamp', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'range_color3';
  this.desc = "MaterialX:mtlx/adjustment/range_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_adjustment_range_color3.nodedef_name = 'ND_range_color3';
mtlx_adjustment_range_color3.nodedef_node = 'range';
mtlx_adjustment_range_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/range.html';
LiteGraph.registerNodeType('mtlx/adjustment/range_color3',mtlx_adjustment_range_color3);

/**
  * @function mtlx_adjustment_range_color4
  * @description Library: mtlx. Category: range. Type: color4
  *   LiteGraph id: mtlx/adjustment/range_color4
  */
function mtlx_adjustment_range_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_range_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'range';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/range.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_range_color4_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inlow','color4');
  this.addProperty('inlow', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inhigh','color4');
  this.addProperty('inhigh', [1.0, 1.0, 1.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('gamma','color4');
  this.addProperty('gamma', [1.0, 1.0, 1.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outlow','color4');
  this.addProperty('outlow', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outhigh','color4');
  this.addProperty('outhigh', [1.0, 1.0, 1.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('doclamp','boolean');
  this.addProperty('doclamp', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'range_color4';
  this.desc = "MaterialX:mtlx/adjustment/range_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_adjustment_range_color4.nodedef_name = 'ND_range_color4';
mtlx_adjustment_range_color4.nodedef_node = 'range';
mtlx_adjustment_range_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/range.html';
LiteGraph.registerNodeType('mtlx/adjustment/range_color4',mtlx_adjustment_range_color4);

/**
  * @function mtlx_adjustment_range_vector2
  * @description Library: mtlx. Category: range. Type: vector2
  *   LiteGraph id: mtlx/adjustment/range_vector2
  */
function mtlx_adjustment_range_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_range_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'range';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/range.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_range_vector2_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inlow','vector2');
  this.addProperty('inlow', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inhigh','vector2');
  this.addProperty('inhigh', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('gamma','vector2');
  this.addProperty('gamma', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outlow','vector2');
  this.addProperty('outlow', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outhigh','vector2');
  this.addProperty('outhigh', [1.0, 1.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('doclamp','boolean');
  this.addProperty('doclamp', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'range_vector2';
  this.desc = "MaterialX:mtlx/adjustment/range_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_adjustment_range_vector2.nodedef_name = 'ND_range_vector2';
mtlx_adjustment_range_vector2.nodedef_node = 'range';
mtlx_adjustment_range_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/range.html';
LiteGraph.registerNodeType('mtlx/adjustment/range_vector2',mtlx_adjustment_range_vector2);

/**
  * @function mtlx_adjustment_range_vector3
  * @description Library: mtlx. Category: range. Type: vector3
  *   LiteGraph id: mtlx/adjustment/range_vector3
  */
function mtlx_adjustment_range_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_range_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'range';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/range.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_range_vector3_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inlow','vector3');
  this.addProperty('inlow', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inhigh','vector3');
  this.addProperty('inhigh', [1.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('gamma','vector3');
  this.addProperty('gamma', [1.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outlow','vector3');
  this.addProperty('outlow', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outhigh','vector3');
  this.addProperty('outhigh', [1.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('doclamp','boolean');
  this.addProperty('doclamp', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'range_vector3';
  this.desc = "MaterialX:mtlx/adjustment/range_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_adjustment_range_vector3.nodedef_name = 'ND_range_vector3';
mtlx_adjustment_range_vector3.nodedef_node = 'range';
mtlx_adjustment_range_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/range.html';
LiteGraph.registerNodeType('mtlx/adjustment/range_vector3',mtlx_adjustment_range_vector3);

/**
  * @function mtlx_adjustment_range_vector4
  * @description Library: mtlx. Category: range. Type: vector4
  *   LiteGraph id: mtlx/adjustment/range_vector4
  */
function mtlx_adjustment_range_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_range_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'range';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/range.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_range_vector4_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inlow','vector4');
  this.addProperty('inlow', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inhigh','vector4');
  this.addProperty('inhigh', [1.0, 1.0, 1.0, 1.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('gamma','vector4');
  this.addProperty('gamma', [1.0, 1.0, 1.0, 1.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outlow','vector4');
  this.addProperty('outlow', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outhigh','vector4');
  this.addProperty('outhigh', [1.0, 1.0, 1.0, 1.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('doclamp','boolean');
  this.addProperty('doclamp', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'range_vector4';
  this.desc = "MaterialX:mtlx/adjustment/range_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_adjustment_range_vector4.nodedef_name = 'ND_range_vector4';
mtlx_adjustment_range_vector4.nodedef_node = 'range';
mtlx_adjustment_range_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/range.html';
LiteGraph.registerNodeType('mtlx/adjustment/range_vector4',mtlx_adjustment_range_vector4);

/**
  * @function mtlx_adjustment_range_color3FA
  * @description Library: mtlx. Category: range. Type: color3
  *   LiteGraph id: mtlx/adjustment/range_color3FA
  */
function mtlx_adjustment_range_color3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_range_color3FA';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'range';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/range.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_range_color3FA_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inlow','float');
  this.addProperty('inlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inhigh','float');
  this.addProperty('inhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('gamma','float');
  this.addProperty('gamma', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outlow','float');
  this.addProperty('outlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outhigh','float');
  this.addProperty('outhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('doclamp','boolean');
  this.addProperty('doclamp', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'range_color3';
  this.desc = "MaterialX:mtlx/adjustment/range_color3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_adjustment_range_color3FA.nodedef_name = 'ND_range_color3FA';
mtlx_adjustment_range_color3FA.nodedef_node = 'range';
mtlx_adjustment_range_color3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/range.html';
LiteGraph.registerNodeType('mtlx/adjustment/range_color3FA',mtlx_adjustment_range_color3FA);

/**
  * @function mtlx_adjustment_range_color4FA
  * @description Library: mtlx. Category: range. Type: color4
  *   LiteGraph id: mtlx/adjustment/range_color4FA
  */
function mtlx_adjustment_range_color4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_range_color4FA';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'range';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/range.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_range_color4FA_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inlow','float');
  this.addProperty('inlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inhigh','float');
  this.addProperty('inhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('gamma','float');
  this.addProperty('gamma', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outlow','float');
  this.addProperty('outlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outhigh','float');
  this.addProperty('outhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('doclamp','boolean');
  this.addProperty('doclamp', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'range_color4';
  this.desc = "MaterialX:mtlx/adjustment/range_color4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_adjustment_range_color4FA.nodedef_name = 'ND_range_color4FA';
mtlx_adjustment_range_color4FA.nodedef_node = 'range';
mtlx_adjustment_range_color4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/range.html';
LiteGraph.registerNodeType('mtlx/adjustment/range_color4FA',mtlx_adjustment_range_color4FA);

/**
  * @function mtlx_adjustment_range_vector2FA
  * @description Library: mtlx. Category: range. Type: vector2
  *   LiteGraph id: mtlx/adjustment/range_vector2FA
  */
function mtlx_adjustment_range_vector2FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_range_vector2FA';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'range';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/range.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_range_vector2FA_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inlow','float');
  this.addProperty('inlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inhigh','float');
  this.addProperty('inhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('gamma','float');
  this.addProperty('gamma', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outlow','float');
  this.addProperty('outlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outhigh','float');
  this.addProperty('outhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('doclamp','boolean');
  this.addProperty('doclamp', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'range_vector2';
  this.desc = "MaterialX:mtlx/adjustment/range_vector2FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_adjustment_range_vector2FA.nodedef_name = 'ND_range_vector2FA';
mtlx_adjustment_range_vector2FA.nodedef_node = 'range';
mtlx_adjustment_range_vector2FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/range.html';
LiteGraph.registerNodeType('mtlx/adjustment/range_vector2FA',mtlx_adjustment_range_vector2FA);

/**
  * @function mtlx_adjustment_range_vector3FA
  * @description Library: mtlx. Category: range. Type: vector3
  *   LiteGraph id: mtlx/adjustment/range_vector3FA
  */
function mtlx_adjustment_range_vector3FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_range_vector3FA';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'range';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/range.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_range_vector3FA_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inlow','float');
  this.addProperty('inlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inhigh','float');
  this.addProperty('inhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('gamma','float');
  this.addProperty('gamma', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outlow','float');
  this.addProperty('outlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outhigh','float');
  this.addProperty('outhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('doclamp','boolean');
  this.addProperty('doclamp', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'range_vector3';
  this.desc = "MaterialX:mtlx/adjustment/range_vector3FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_adjustment_range_vector3FA.nodedef_name = 'ND_range_vector3FA';
mtlx_adjustment_range_vector3FA.nodedef_node = 'range';
mtlx_adjustment_range_vector3FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/range.html';
LiteGraph.registerNodeType('mtlx/adjustment/range_vector3FA',mtlx_adjustment_range_vector3FA);

/**
  * @function mtlx_adjustment_range_vector4FA
  * @description Library: mtlx. Category: range. Type: vector4
  *   LiteGraph id: mtlx/adjustment/range_vector4FA
  */
function mtlx_adjustment_range_vector4FA() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_range_vector4FA';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'range';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/range.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_range_vector4FA_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inlow','float');
  this.addProperty('inlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inhigh','float');
  this.addProperty('inhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('gamma','float');
  this.addProperty('gamma', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outlow','float');
  this.addProperty('outlow', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outhigh','float');
  this.addProperty('outhigh', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('doclamp','boolean');
  this.addProperty('doclamp', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'range_vector4';
  this.desc = "MaterialX:mtlx/adjustment/range_vector4FA";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_adjustment_range_vector4FA.nodedef_name = 'ND_range_vector4FA';
mtlx_adjustment_range_vector4FA.nodedef_node = 'range';
mtlx_adjustment_range_vector4FA.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/range.html';
LiteGraph.registerNodeType('mtlx/adjustment/range_vector4FA',mtlx_adjustment_range_vector4FA);

/**
  * @function mtlx_adjustment_hsvadjust_color3
  * @description Library: mtlx. Category: range. Type: color3
  *   LiteGraph id: mtlx/adjustment/hsvadjust_color3
  */
function mtlx_adjustment_hsvadjust_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_hsvadjust_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'hsvadjust';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/hsvadjust.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_hsvadjust_color3_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','vector3');
  this.addProperty('amount', [0.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'hsvadjust_color3';
  this.desc = "MaterialX:mtlx/adjustment/hsvadjust_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_adjustment_hsvadjust_color3.nodedef_name = 'ND_hsvadjust_color3';
mtlx_adjustment_hsvadjust_color3.nodedef_node = 'hsvadjust';
mtlx_adjustment_hsvadjust_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/hsvadjust.html';
LiteGraph.registerNodeType('mtlx/adjustment/hsvadjust_color3',mtlx_adjustment_hsvadjust_color3);

/**
  * @function mtlx_adjustment_hsvadjust_color4
  * @description Library: mtlx. Category: hsvadjust. Type: color4
  *   LiteGraph id: mtlx/adjustment/hsvadjust_color4
  */
function mtlx_adjustment_hsvadjust_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_hsvadjust_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'hsvadjust';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/hsvadjust.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_hsvadjust_color4_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','vector3');
  this.addProperty('amount', [0.0, 1.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'hsvadjust_color4';
  this.desc = "MaterialX:mtlx/adjustment/hsvadjust_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_adjustment_hsvadjust_color4.nodedef_name = 'ND_hsvadjust_color4';
mtlx_adjustment_hsvadjust_color4.nodedef_node = 'hsvadjust';
mtlx_adjustment_hsvadjust_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/hsvadjust.html';
LiteGraph.registerNodeType('mtlx/adjustment/hsvadjust_color4',mtlx_adjustment_hsvadjust_color4);

/**
  * @function mtlx_adjustment_saturate_color3
  * @description Library: mtlx. Category: hsvadjust. Type: color3
  *   LiteGraph id: mtlx/adjustment/saturate_color3
  */
function mtlx_adjustment_saturate_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_saturate_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'saturate';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/saturate.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_saturate_color3_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','float');
  this.addProperty('amount', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('lumacoeffs','color3');
  this.addProperty('lumacoeffs', [0.2722287, 0.6740818, 0.0536895], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["acescg"," rec709"," rec2020"," rec2100"],"enumvalues":["0.2722287","0.6740818","0.0536895"," 0.2126","0.7152","0.0722"," 0.2627","0.6780","0.0593"," 0.2627","0.6780","0.0593"]});
  this.addOutput('out','color3');
  this.title = 'saturate_color3';
  this.desc = "MaterialX:mtlx/adjustment/saturate_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_adjustment_saturate_color3.nodedef_name = 'ND_saturate_color3';
mtlx_adjustment_saturate_color3.nodedef_node = 'saturate';
mtlx_adjustment_saturate_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/saturate.html';
LiteGraph.registerNodeType('mtlx/adjustment/saturate_color3',mtlx_adjustment_saturate_color3);

/**
  * @function mtlx_adjustment_saturate_color4
  * @description Library: mtlx. Category: saturate. Type: color4
  *   LiteGraph id: mtlx/adjustment/saturate_color4
  */
function mtlx_adjustment_saturate_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_saturate_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'saturate';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/saturate.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_saturate_color4_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('amount','float');
  this.addProperty('amount', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('lumacoeffs','color3');
  this.addProperty('lumacoeffs', [0.2722287, 0.6740818, 0.0536895], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["acescg"," rec709"," rec2020"," rec2100"],"enumvalues":["0.2722287","0.6740818","0.0536895"," 0.2126","0.7152","0.0722"," 0.2627","0.6780","0.0593"," 0.2627","0.6780","0.0593"]});
  this.addOutput('out','color4');
  this.title = 'saturate_color4';
  this.desc = "MaterialX:mtlx/adjustment/saturate_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_adjustment_saturate_color4.nodedef_name = 'ND_saturate_color4';
mtlx_adjustment_saturate_color4.nodedef_node = 'saturate';
mtlx_adjustment_saturate_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/saturate.html';
LiteGraph.registerNodeType('mtlx/adjustment/saturate_color4',mtlx_adjustment_saturate_color4);

/**
  * @function mtlx_adjustment_colorcorrect_color3
  * @description Library: mtlx. Category: saturate. Type: color3
  *   LiteGraph id: mtlx/adjustment/colorcorrect_color3
  */
function mtlx_adjustment_colorcorrect_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_colorcorrect_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'colorcorrect';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/colorcorrect.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_colorcorrect_color3_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color3');
  this.addProperty('in', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Input Color","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('hue','float');
  this.addProperty('hue', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Hue","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('saturation','float');
  this.addProperty('saturation', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Saturation","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('gamma','float');
  this.addProperty('gamma', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Gamma","uimin":"0.0","uimax":"3.0","uifolder":"","defaultgeomprop":""});
  this.addInput('lift','float');
  this.addProperty('lift', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Lift","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('gain','float');
  this.addProperty('gain', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Gain","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('contrast','float');
  this.addProperty('contrast', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Contrast","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('contrastpivot','float');
  this.addProperty('contrastpivot', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Contrast Pivot","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('exposure','float');
  this.addProperty('exposure', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Exposure","uimin":"-1.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'colorcorrect_color3';
  this.desc = "MaterialX:mtlx/adjustment/colorcorrect_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_adjustment_colorcorrect_color3.nodedef_name = 'ND_colorcorrect_color3';
mtlx_adjustment_colorcorrect_color3.nodedef_node = 'colorcorrect';
mtlx_adjustment_colorcorrect_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/colorcorrect.html';
LiteGraph.registerNodeType('mtlx/adjustment/colorcorrect_color3',mtlx_adjustment_colorcorrect_color3);

/**
  * @function mtlx_adjustment_colorcorrect_color4
  * @description Library: mtlx. Category: colorcorrect. Type: color4
  *   LiteGraph id: mtlx/adjustment/colorcorrect_color4
  */
function mtlx_adjustment_colorcorrect_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_colorcorrect_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'colorcorrect';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/colorcorrect.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_colorcorrect_color4_out_genglsl.png';
  this.nodedef_group = 'adjustment';
  this.addInput('in','color4');
  this.addProperty('in', [1, 1, 1, 0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"Input Color","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('hue','float');
  this.addProperty('hue', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Hue","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('saturation','float');
  this.addProperty('saturation', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Saturation","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('gamma','float');
  this.addProperty('gamma', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Gamma","uimin":"0.0","uimax":"3.0","uifolder":"","defaultgeomprop":""});
  this.addInput('lift','float');
  this.addProperty('lift', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Lift","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('gain','float');
  this.addProperty('gain', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Gain","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('contrast','float');
  this.addProperty('contrast', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Contrast","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('contrastpivot','float');
  this.addProperty('contrastpivot', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Contrast Pivot","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('exposure','float');
  this.addProperty('exposure', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Exposure","uimin":"-1.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'colorcorrect_color4';
  this.desc = "MaterialX:mtlx/adjustment/colorcorrect_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_adjustment_colorcorrect_color4.nodedef_name = 'ND_colorcorrect_color4';
mtlx_adjustment_colorcorrect_color4.nodedef_node = 'colorcorrect';
mtlx_adjustment_colorcorrect_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/colorcorrect.html';
LiteGraph.registerNodeType('mtlx/adjustment/colorcorrect_color4',mtlx_adjustment_colorcorrect_color4);

/**
  * @function mtlx_compositing_premult_color4
  * @description Library: mtlx. Category: colorcorrect. Type: color4
  *   LiteGraph id: mtlx/compositing/premult_color4
  */
function mtlx_compositing_premult_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_premult_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'premult';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/premult.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_premult_color4_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'premult_color4';
  this.desc = "MaterialX:mtlx/compositing/premult_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_compositing_premult_color4.nodedef_name = 'ND_premult_color4';
mtlx_compositing_premult_color4.nodedef_node = 'premult';
mtlx_compositing_premult_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/premult.html';
LiteGraph.registerNodeType('mtlx/compositing/premult_color4',mtlx_compositing_premult_color4);

/**
  * @function mtlx_compositing_unpremult_color4
  * @description Library: mtlx. Category: premult. Type: color4
  *   LiteGraph id: mtlx/compositing/unpremult_color4
  */
function mtlx_compositing_unpremult_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_unpremult_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'unpremult';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/unpremult.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_unpremult_color4_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'unpremult_color4';
  this.desc = "MaterialX:mtlx/compositing/unpremult_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_compositing_unpremult_color4.nodedef_name = 'ND_unpremult_color4';
mtlx_compositing_unpremult_color4.nodedef_node = 'unpremult';
mtlx_compositing_unpremult_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/unpremult.html';
LiteGraph.registerNodeType('mtlx/compositing/unpremult_color4',mtlx_compositing_unpremult_color4);

/**
  * @function mtlx_compositing_plus_float
  * @description Library: mtlx. Category: unpremult. Type: float
  *   LiteGraph id: mtlx/compositing/plus_float
  */
function mtlx_compositing_plus_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_plus_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'plus';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/plus.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_plus_float_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','float');
  this.addProperty('fg', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','float');
  this.addProperty('bg', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'plus_float';
  this.desc = "MaterialX:mtlx/compositing/plus_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_compositing_plus_float.nodedef_name = 'ND_plus_float';
mtlx_compositing_plus_float.nodedef_node = 'plus';
mtlx_compositing_plus_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/plus.html';
LiteGraph.registerNodeType('mtlx/compositing/plus_float',mtlx_compositing_plus_float);

/**
  * @function mtlx_compositing_plus_color3
  * @description Library: mtlx. Category: plus. Type: color3
  *   LiteGraph id: mtlx/compositing/plus_color3
  */
function mtlx_compositing_plus_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_plus_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'plus';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/plus.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_plus_color3_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color3');
  this.addProperty('fg', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color3');
  this.addProperty('bg', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'plus_color3';
  this.desc = "MaterialX:mtlx/compositing/plus_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_compositing_plus_color3.nodedef_name = 'ND_plus_color3';
mtlx_compositing_plus_color3.nodedef_node = 'plus';
mtlx_compositing_plus_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/plus.html';
LiteGraph.registerNodeType('mtlx/compositing/plus_color3',mtlx_compositing_plus_color3);

/**
  * @function mtlx_compositing_plus_color4
  * @description Library: mtlx. Category: plus. Type: color4
  *   LiteGraph id: mtlx/compositing/plus_color4
  */
function mtlx_compositing_plus_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_plus_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'plus';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/plus.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_plus_color4_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color4');
  this.addProperty('fg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color4');
  this.addProperty('bg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'plus_color4';
  this.desc = "MaterialX:mtlx/compositing/plus_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_compositing_plus_color4.nodedef_name = 'ND_plus_color4';
mtlx_compositing_plus_color4.nodedef_node = 'plus';
mtlx_compositing_plus_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/plus.html';
LiteGraph.registerNodeType('mtlx/compositing/plus_color4',mtlx_compositing_plus_color4);

/**
  * @function mtlx_compositing_minus_float
  * @description Library: mtlx. Category: plus. Type: float
  *   LiteGraph id: mtlx/compositing/minus_float
  */
function mtlx_compositing_minus_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_minus_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'minus';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/minus.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_minus_float_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','float');
  this.addProperty('fg', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','float');
  this.addProperty('bg', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'minus_float';
  this.desc = "MaterialX:mtlx/compositing/minus_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_compositing_minus_float.nodedef_name = 'ND_minus_float';
mtlx_compositing_minus_float.nodedef_node = 'minus';
mtlx_compositing_minus_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/minus.html';
LiteGraph.registerNodeType('mtlx/compositing/minus_float',mtlx_compositing_minus_float);

/**
  * @function mtlx_compositing_minus_color3
  * @description Library: mtlx. Category: minus. Type: color3
  *   LiteGraph id: mtlx/compositing/minus_color3
  */
function mtlx_compositing_minus_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_minus_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'minus';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/minus.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_minus_color3_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color3');
  this.addProperty('fg', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color3');
  this.addProperty('bg', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'minus_color3';
  this.desc = "MaterialX:mtlx/compositing/minus_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_compositing_minus_color3.nodedef_name = 'ND_minus_color3';
mtlx_compositing_minus_color3.nodedef_node = 'minus';
mtlx_compositing_minus_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/minus.html';
LiteGraph.registerNodeType('mtlx/compositing/minus_color3',mtlx_compositing_minus_color3);

/**
  * @function mtlx_compositing_minus_color4
  * @description Library: mtlx. Category: minus. Type: color4
  *   LiteGraph id: mtlx/compositing/minus_color4
  */
function mtlx_compositing_minus_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_minus_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'minus';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/minus.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_minus_color4_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color4');
  this.addProperty('fg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color4');
  this.addProperty('bg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'minus_color4';
  this.desc = "MaterialX:mtlx/compositing/minus_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_compositing_minus_color4.nodedef_name = 'ND_minus_color4';
mtlx_compositing_minus_color4.nodedef_node = 'minus';
mtlx_compositing_minus_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/minus.html';
LiteGraph.registerNodeType('mtlx/compositing/minus_color4',mtlx_compositing_minus_color4);

/**
  * @function mtlx_compositing_difference_float
  * @description Library: mtlx. Category: minus. Type: float
  *   LiteGraph id: mtlx/compositing/difference_float
  */
function mtlx_compositing_difference_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_difference_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'difference';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/difference.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_difference_float_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','float');
  this.addProperty('fg', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','float');
  this.addProperty('bg', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'difference_float';
  this.desc = "MaterialX:mtlx/compositing/difference_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_compositing_difference_float.nodedef_name = 'ND_difference_float';
mtlx_compositing_difference_float.nodedef_node = 'difference';
mtlx_compositing_difference_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/difference.html';
LiteGraph.registerNodeType('mtlx/compositing/difference_float',mtlx_compositing_difference_float);

/**
  * @function mtlx_compositing_difference_color3
  * @description Library: mtlx. Category: difference. Type: color3
  *   LiteGraph id: mtlx/compositing/difference_color3
  */
function mtlx_compositing_difference_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_difference_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'difference';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/difference.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_difference_color3_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color3');
  this.addProperty('fg', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color3');
  this.addProperty('bg', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'difference_color3';
  this.desc = "MaterialX:mtlx/compositing/difference_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_compositing_difference_color3.nodedef_name = 'ND_difference_color3';
mtlx_compositing_difference_color3.nodedef_node = 'difference';
mtlx_compositing_difference_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/difference.html';
LiteGraph.registerNodeType('mtlx/compositing/difference_color3',mtlx_compositing_difference_color3);

/**
  * @function mtlx_compositing_difference_color4
  * @description Library: mtlx. Category: difference. Type: color4
  *   LiteGraph id: mtlx/compositing/difference_color4
  */
function mtlx_compositing_difference_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_difference_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'difference';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/difference.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_difference_color4_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color4');
  this.addProperty('fg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color4');
  this.addProperty('bg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'difference_color4';
  this.desc = "MaterialX:mtlx/compositing/difference_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_compositing_difference_color4.nodedef_name = 'ND_difference_color4';
mtlx_compositing_difference_color4.nodedef_node = 'difference';
mtlx_compositing_difference_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/difference.html';
LiteGraph.registerNodeType('mtlx/compositing/difference_color4',mtlx_compositing_difference_color4);

/**
  * @function mtlx_compositing_burn_float
  * @description Library: mtlx. Category: difference. Type: float
  *   LiteGraph id: mtlx/compositing/burn_float
  */
function mtlx_compositing_burn_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_burn_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'burn';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/burn.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_burn_float_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','float');
  this.addProperty('fg', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','float');
  this.addProperty('bg', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'burn_float';
  this.desc = "MaterialX:mtlx/compositing/burn_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_compositing_burn_float.nodedef_name = 'ND_burn_float';
mtlx_compositing_burn_float.nodedef_node = 'burn';
mtlx_compositing_burn_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/burn.html';
LiteGraph.registerNodeType('mtlx/compositing/burn_float',mtlx_compositing_burn_float);

/**
  * @function mtlx_compositing_burn_color3
  * @description Library: mtlx. Category: burn. Type: color3
  *   LiteGraph id: mtlx/compositing/burn_color3
  */
function mtlx_compositing_burn_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_burn_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'burn';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/burn.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_burn_color3_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color3');
  this.addProperty('fg', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color3');
  this.addProperty('bg', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'burn_color3';
  this.desc = "MaterialX:mtlx/compositing/burn_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_compositing_burn_color3.nodedef_name = 'ND_burn_color3';
mtlx_compositing_burn_color3.nodedef_node = 'burn';
mtlx_compositing_burn_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/burn.html';
LiteGraph.registerNodeType('mtlx/compositing/burn_color3',mtlx_compositing_burn_color3);

/**
  * @function mtlx_compositing_burn_color4
  * @description Library: mtlx. Category: burn. Type: color4
  *   LiteGraph id: mtlx/compositing/burn_color4
  */
function mtlx_compositing_burn_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_burn_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'burn';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/burn.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_burn_color4_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color4');
  this.addProperty('fg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color4');
  this.addProperty('bg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'burn_color4';
  this.desc = "MaterialX:mtlx/compositing/burn_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_compositing_burn_color4.nodedef_name = 'ND_burn_color4';
mtlx_compositing_burn_color4.nodedef_node = 'burn';
mtlx_compositing_burn_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/burn.html';
LiteGraph.registerNodeType('mtlx/compositing/burn_color4',mtlx_compositing_burn_color4);

/**
  * @function mtlx_compositing_dodge_float
  * @description Library: mtlx. Category: burn. Type: float
  *   LiteGraph id: mtlx/compositing/dodge_float
  */
function mtlx_compositing_dodge_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_dodge_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'dodge';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dodge.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_dodge_float_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','float');
  this.addProperty('fg', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','float');
  this.addProperty('bg', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'dodge_float';
  this.desc = "MaterialX:mtlx/compositing/dodge_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_compositing_dodge_float.nodedef_name = 'ND_dodge_float';
mtlx_compositing_dodge_float.nodedef_node = 'dodge';
mtlx_compositing_dodge_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dodge.html';
LiteGraph.registerNodeType('mtlx/compositing/dodge_float',mtlx_compositing_dodge_float);

/**
  * @function mtlx_compositing_dodge_color3
  * @description Library: mtlx. Category: dodge. Type: color3
  *   LiteGraph id: mtlx/compositing/dodge_color3
  */
function mtlx_compositing_dodge_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_dodge_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'dodge';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dodge.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_dodge_color3_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color3');
  this.addProperty('fg', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color3');
  this.addProperty('bg', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'dodge_color3';
  this.desc = "MaterialX:mtlx/compositing/dodge_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_compositing_dodge_color3.nodedef_name = 'ND_dodge_color3';
mtlx_compositing_dodge_color3.nodedef_node = 'dodge';
mtlx_compositing_dodge_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dodge.html';
LiteGraph.registerNodeType('mtlx/compositing/dodge_color3',mtlx_compositing_dodge_color3);

/**
  * @function mtlx_compositing_dodge_color4
  * @description Library: mtlx. Category: dodge. Type: color4
  *   LiteGraph id: mtlx/compositing/dodge_color4
  */
function mtlx_compositing_dodge_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_dodge_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'dodge';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dodge.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_dodge_color4_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color4');
  this.addProperty('fg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color4');
  this.addProperty('bg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'dodge_color4';
  this.desc = "MaterialX:mtlx/compositing/dodge_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_compositing_dodge_color4.nodedef_name = 'ND_dodge_color4';
mtlx_compositing_dodge_color4.nodedef_node = 'dodge';
mtlx_compositing_dodge_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dodge.html';
LiteGraph.registerNodeType('mtlx/compositing/dodge_color4',mtlx_compositing_dodge_color4);

/**
  * @function mtlx_compositing_screen_float
  * @description Library: mtlx. Category: dodge. Type: float
  *   LiteGraph id: mtlx/compositing/screen_float
  */
function mtlx_compositing_screen_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_screen_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'screen';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/screen.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_screen_float_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','float');
  this.addProperty('fg', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','float');
  this.addProperty('bg', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'screen_float';
  this.desc = "MaterialX:mtlx/compositing/screen_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_compositing_screen_float.nodedef_name = 'ND_screen_float';
mtlx_compositing_screen_float.nodedef_node = 'screen';
mtlx_compositing_screen_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/screen.html';
LiteGraph.registerNodeType('mtlx/compositing/screen_float',mtlx_compositing_screen_float);

/**
  * @function mtlx_compositing_screen_color3
  * @description Library: mtlx. Category: screen. Type: color3
  *   LiteGraph id: mtlx/compositing/screen_color3
  */
function mtlx_compositing_screen_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_screen_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'screen';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/screen.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_screen_color3_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color3');
  this.addProperty('fg', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color3');
  this.addProperty('bg', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'screen_color3';
  this.desc = "MaterialX:mtlx/compositing/screen_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_compositing_screen_color3.nodedef_name = 'ND_screen_color3';
mtlx_compositing_screen_color3.nodedef_node = 'screen';
mtlx_compositing_screen_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/screen.html';
LiteGraph.registerNodeType('mtlx/compositing/screen_color3',mtlx_compositing_screen_color3);

/**
  * @function mtlx_compositing_screen_color4
  * @description Library: mtlx. Category: screen. Type: color4
  *   LiteGraph id: mtlx/compositing/screen_color4
  */
function mtlx_compositing_screen_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_screen_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'screen';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/screen.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_screen_color4_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color4');
  this.addProperty('fg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color4');
  this.addProperty('bg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'screen_color4';
  this.desc = "MaterialX:mtlx/compositing/screen_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_compositing_screen_color4.nodedef_name = 'ND_screen_color4';
mtlx_compositing_screen_color4.nodedef_node = 'screen';
mtlx_compositing_screen_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/screen.html';
LiteGraph.registerNodeType('mtlx/compositing/screen_color4',mtlx_compositing_screen_color4);

/**
  * @function mtlx_compositing_overlay_float
  * @description Library: mtlx. Category: screen. Type: float
  *   LiteGraph id: mtlx/compositing/overlay_float
  */
function mtlx_compositing_overlay_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_overlay_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'overlay';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/overlay.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_overlay_float_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','float');
  this.addProperty('fg', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','float');
  this.addProperty('bg', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'overlay_float';
  this.desc = "MaterialX:mtlx/compositing/overlay_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_compositing_overlay_float.nodedef_name = 'ND_overlay_float';
mtlx_compositing_overlay_float.nodedef_node = 'overlay';
mtlx_compositing_overlay_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/overlay.html';
LiteGraph.registerNodeType('mtlx/compositing/overlay_float',mtlx_compositing_overlay_float);

/**
  * @function mtlx_compositing_overlay_color3
  * @description Library: mtlx. Category: overlay. Type: color3
  *   LiteGraph id: mtlx/compositing/overlay_color3
  */
function mtlx_compositing_overlay_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_overlay_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'overlay';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/overlay.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_overlay_color3_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color3');
  this.addProperty('fg', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color3');
  this.addProperty('bg', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'overlay_color3';
  this.desc = "MaterialX:mtlx/compositing/overlay_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_compositing_overlay_color3.nodedef_name = 'ND_overlay_color3';
mtlx_compositing_overlay_color3.nodedef_node = 'overlay';
mtlx_compositing_overlay_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/overlay.html';
LiteGraph.registerNodeType('mtlx/compositing/overlay_color3',mtlx_compositing_overlay_color3);

/**
  * @function mtlx_compositing_overlay_color4
  * @description Library: mtlx. Category: overlay. Type: color4
  *   LiteGraph id: mtlx/compositing/overlay_color4
  */
function mtlx_compositing_overlay_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_overlay_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'overlay';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/overlay.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_overlay_color4_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color4');
  this.addProperty('fg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color4');
  this.addProperty('bg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'overlay_color4';
  this.desc = "MaterialX:mtlx/compositing/overlay_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_compositing_overlay_color4.nodedef_name = 'ND_overlay_color4';
mtlx_compositing_overlay_color4.nodedef_node = 'overlay';
mtlx_compositing_overlay_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/overlay.html';
LiteGraph.registerNodeType('mtlx/compositing/overlay_color4',mtlx_compositing_overlay_color4);

/**
  * @function mtlx_compositing_disjointover_color4
  * @description Library: mtlx. Category: overlay. Type: color4
  *   LiteGraph id: mtlx/compositing/disjointover_color4
  */
function mtlx_compositing_disjointover_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_disjointover_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'disjointover';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/disjointover.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_disjointover_color4_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color4');
  this.addProperty('fg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color4');
  this.addProperty('bg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'disjointover_color4';
  this.desc = "MaterialX:mtlx/compositing/disjointover_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_compositing_disjointover_color4.nodedef_name = 'ND_disjointover_color4';
mtlx_compositing_disjointover_color4.nodedef_node = 'disjointover';
mtlx_compositing_disjointover_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/disjointover.html';
LiteGraph.registerNodeType('mtlx/compositing/disjointover_color4',mtlx_compositing_disjointover_color4);

/**
  * @function mtlx_compositing_in_color4
  * @description Library: mtlx. Category: disjointover. Type: color4
  *   LiteGraph id: mtlx/compositing/in_color4
  */
function mtlx_compositing_in_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_in_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'in';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/in.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_in_color4_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color4');
  this.addProperty('fg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color4');
  this.addProperty('bg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'in_color4';
  this.desc = "MaterialX:mtlx/compositing/in_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_compositing_in_color4.nodedef_name = 'ND_in_color4';
mtlx_compositing_in_color4.nodedef_node = 'in';
mtlx_compositing_in_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/in.html';
LiteGraph.registerNodeType('mtlx/compositing/in_color4',mtlx_compositing_in_color4);

/**
  * @function mtlx_compositing_mask_color4
  * @description Library: mtlx. Category: in. Type: color4
  *   LiteGraph id: mtlx/compositing/mask_color4
  */
function mtlx_compositing_mask_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_mask_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'mask';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mask.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_mask_color4_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color4');
  this.addProperty('fg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color4');
  this.addProperty('bg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'mask_color4';
  this.desc = "MaterialX:mtlx/compositing/mask_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_compositing_mask_color4.nodedef_name = 'ND_mask_color4';
mtlx_compositing_mask_color4.nodedef_node = 'mask';
mtlx_compositing_mask_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mask.html';
LiteGraph.registerNodeType('mtlx/compositing/mask_color4',mtlx_compositing_mask_color4);

/**
  * @function mtlx_compositing_matte_color4
  * @description Library: mtlx. Category: mask. Type: color4
  *   LiteGraph id: mtlx/compositing/matte_color4
  */
function mtlx_compositing_matte_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_matte_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'matte';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/matte.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_matte_color4_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color4');
  this.addProperty('fg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color4');
  this.addProperty('bg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'matte_color4';
  this.desc = "MaterialX:mtlx/compositing/matte_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_compositing_matte_color4.nodedef_name = 'ND_matte_color4';
mtlx_compositing_matte_color4.nodedef_node = 'matte';
mtlx_compositing_matte_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/matte.html';
LiteGraph.registerNodeType('mtlx/compositing/matte_color4',mtlx_compositing_matte_color4);

/**
  * @function mtlx_compositing_out_color4
  * @description Library: mtlx. Category: matte. Type: color4
  *   LiteGraph id: mtlx/compositing/out_color4
  */
function mtlx_compositing_out_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_out_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'out';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/out.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_out_color4_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color4');
  this.addProperty('fg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color4');
  this.addProperty('bg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'out_color4';
  this.desc = "MaterialX:mtlx/compositing/out_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_compositing_out_color4.nodedef_name = 'ND_out_color4';
mtlx_compositing_out_color4.nodedef_node = 'out';
mtlx_compositing_out_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/out.html';
LiteGraph.registerNodeType('mtlx/compositing/out_color4',mtlx_compositing_out_color4);

/**
  * @function mtlx_compositing_over_color4
  * @description Library: mtlx. Category: out. Type: color4
  *   LiteGraph id: mtlx/compositing/over_color4
  */
function mtlx_compositing_over_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_over_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'over';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/over.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_over_color4_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color4');
  this.addProperty('fg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color4');
  this.addProperty('bg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'over_color4';
  this.desc = "MaterialX:mtlx/compositing/over_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_compositing_over_color4.nodedef_name = 'ND_over_color4';
mtlx_compositing_over_color4.nodedef_node = 'over';
mtlx_compositing_over_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/over.html';
LiteGraph.registerNodeType('mtlx/compositing/over_color4',mtlx_compositing_over_color4);

/**
  * @function mtlx_compositing_inside_float
  * @description Library: mtlx. Category: over. Type: float
  *   LiteGraph id: mtlx/compositing/inside_float
  */
function mtlx_compositing_inside_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_inside_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'inside';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/inside.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_inside_float_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mask','float');
  this.addProperty('mask', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'inside_float';
  this.desc = "MaterialX:mtlx/compositing/inside_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_compositing_inside_float.nodedef_name = 'ND_inside_float';
mtlx_compositing_inside_float.nodedef_node = 'inside';
mtlx_compositing_inside_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/inside.html';
LiteGraph.registerNodeType('mtlx/compositing/inside_float',mtlx_compositing_inside_float);

/**
  * @function mtlx_compositing_inside_color3
  * @description Library: mtlx. Category: inside. Type: color3
  *   LiteGraph id: mtlx/compositing/inside_color3
  */
function mtlx_compositing_inside_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_inside_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'inside';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/inside.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_inside_color3_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mask','float');
  this.addProperty('mask', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'inside_color3';
  this.desc = "MaterialX:mtlx/compositing/inside_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_compositing_inside_color3.nodedef_name = 'ND_inside_color3';
mtlx_compositing_inside_color3.nodedef_node = 'inside';
mtlx_compositing_inside_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/inside.html';
LiteGraph.registerNodeType('mtlx/compositing/inside_color3',mtlx_compositing_inside_color3);

/**
  * @function mtlx_compositing_inside_color4
  * @description Library: mtlx. Category: inside. Type: color4
  *   LiteGraph id: mtlx/compositing/inside_color4
  */
function mtlx_compositing_inside_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_inside_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'inside';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/inside.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_inside_color4_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mask','float');
  this.addProperty('mask', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'inside_color4';
  this.desc = "MaterialX:mtlx/compositing/inside_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_compositing_inside_color4.nodedef_name = 'ND_inside_color4';
mtlx_compositing_inside_color4.nodedef_node = 'inside';
mtlx_compositing_inside_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/inside.html';
LiteGraph.registerNodeType('mtlx/compositing/inside_color4',mtlx_compositing_inside_color4);

/**
  * @function mtlx_compositing_outside_float
  * @description Library: mtlx. Category: inside. Type: float
  *   LiteGraph id: mtlx/compositing/outside_float
  */
function mtlx_compositing_outside_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_outside_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'outside';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/outside.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_outside_float_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mask','float');
  this.addProperty('mask', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'outside_float';
  this.desc = "MaterialX:mtlx/compositing/outside_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_compositing_outside_float.nodedef_name = 'ND_outside_float';
mtlx_compositing_outside_float.nodedef_node = 'outside';
mtlx_compositing_outside_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/outside.html';
LiteGraph.registerNodeType('mtlx/compositing/outside_float',mtlx_compositing_outside_float);

/**
  * @function mtlx_compositing_outside_color3
  * @description Library: mtlx. Category: outside. Type: color3
  *   LiteGraph id: mtlx/compositing/outside_color3
  */
function mtlx_compositing_outside_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_outside_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'outside';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/outside.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_outside_color3_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mask','float');
  this.addProperty('mask', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'outside_color3';
  this.desc = "MaterialX:mtlx/compositing/outside_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_compositing_outside_color3.nodedef_name = 'ND_outside_color3';
mtlx_compositing_outside_color3.nodedef_node = 'outside';
mtlx_compositing_outside_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/outside.html';
LiteGraph.registerNodeType('mtlx/compositing/outside_color3',mtlx_compositing_outside_color3);

/**
  * @function mtlx_compositing_outside_color4
  * @description Library: mtlx. Category: outside. Type: color4
  *   LiteGraph id: mtlx/compositing/outside_color4
  */
function mtlx_compositing_outside_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_outside_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'outside';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/outside.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_outside_color4_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mask','float');
  this.addProperty('mask', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'outside_color4';
  this.desc = "MaterialX:mtlx/compositing/outside_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_compositing_outside_color4.nodedef_name = 'ND_outside_color4';
mtlx_compositing_outside_color4.nodedef_node = 'outside';
mtlx_compositing_outside_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/outside.html';
LiteGraph.registerNodeType('mtlx/compositing/outside_color4',mtlx_compositing_outside_color4);

/**
  * @function mtlx_compositing_mix_float
  * @description Library: mtlx. Category: outside. Type: float
  *   LiteGraph id: mtlx/compositing/mix_float
  */
function mtlx_compositing_mix_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_mix_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'mix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_mix_float_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','float');
  this.addProperty('fg', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','float');
  this.addProperty('bg', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'mix_float';
  this.desc = "MaterialX:mtlx/compositing/mix_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_compositing_mix_float.nodedef_name = 'ND_mix_float';
mtlx_compositing_mix_float.nodedef_node = 'mix';
mtlx_compositing_mix_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
LiteGraph.registerNodeType('mtlx/compositing/mix_float',mtlx_compositing_mix_float);

/**
  * @function mtlx_compositing_mix_color3
  * @description Library: mtlx. Category: mix. Type: color3
  *   LiteGraph id: mtlx/compositing/mix_color3
  */
function mtlx_compositing_mix_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_mix_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'mix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_mix_color3_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color3');
  this.addProperty('fg', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color3');
  this.addProperty('bg', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'mix_color3';
  this.desc = "MaterialX:mtlx/compositing/mix_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_compositing_mix_color3.nodedef_name = 'ND_mix_color3';
mtlx_compositing_mix_color3.nodedef_node = 'mix';
mtlx_compositing_mix_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
LiteGraph.registerNodeType('mtlx/compositing/mix_color3',mtlx_compositing_mix_color3);

/**
  * @function mtlx_compositing_mix_color3_color3
  * @description Library: mtlx. Category: mix. Type: color3
  *   LiteGraph id: mtlx/compositing/mix_color3_color3
  */
function mtlx_compositing_mix_color3_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_mix_color3_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'mix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_mix_color3_color3_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color3');
  this.addProperty('fg', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color3');
  this.addProperty('bg', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','color3');
  this.addProperty('mix', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0,0,0","uimax":"1,1,1","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'mix_color3';
  this.desc = "MaterialX:mtlx/compositing/mix_color3_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_compositing_mix_color3_color3.nodedef_name = 'ND_mix_color3_color3';
mtlx_compositing_mix_color3_color3.nodedef_node = 'mix';
mtlx_compositing_mix_color3_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
LiteGraph.registerNodeType('mtlx/compositing/mix_color3_color3',mtlx_compositing_mix_color3_color3);

/**
  * @function mtlx_compositing_mix_color4
  * @description Library: mtlx. Category: mix. Type: color4
  *   LiteGraph id: mtlx/compositing/mix_color4
  */
function mtlx_compositing_mix_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_mix_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'mix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_mix_color4_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color4');
  this.addProperty('fg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color4');
  this.addProperty('bg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'mix_color4';
  this.desc = "MaterialX:mtlx/compositing/mix_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_compositing_mix_color4.nodedef_name = 'ND_mix_color4';
mtlx_compositing_mix_color4.nodedef_node = 'mix';
mtlx_compositing_mix_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
LiteGraph.registerNodeType('mtlx/compositing/mix_color4',mtlx_compositing_mix_color4);

/**
  * @function mtlx_compositing_mix_color4_color4
  * @description Library: mtlx. Category: mix. Type: color4
  *   LiteGraph id: mtlx/compositing/mix_color4_color4
  */
function mtlx_compositing_mix_color4_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_mix_color4_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'mix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_mix_color4_color4_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','color4');
  this.addProperty('fg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','color4');
  this.addProperty('bg', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','color4');
  this.addProperty('mix', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0,0,0,0","uimax":"1,1,1,1","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'mix_color4';
  this.desc = "MaterialX:mtlx/compositing/mix_color4_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_compositing_mix_color4_color4.nodedef_name = 'ND_mix_color4_color4';
mtlx_compositing_mix_color4_color4.nodedef_node = 'mix';
mtlx_compositing_mix_color4_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
LiteGraph.registerNodeType('mtlx/compositing/mix_color4_color4',mtlx_compositing_mix_color4_color4);

/**
  * @function mtlx_compositing_mix_vector2
  * @description Library: mtlx. Category: mix. Type: vector2
  *   LiteGraph id: mtlx/compositing/mix_vector2
  */
function mtlx_compositing_mix_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_mix_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'mix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_mix_vector2_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','vector2');
  this.addProperty('fg', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','vector2');
  this.addProperty('bg', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'mix_vector2';
  this.desc = "MaterialX:mtlx/compositing/mix_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_compositing_mix_vector2.nodedef_name = 'ND_mix_vector2';
mtlx_compositing_mix_vector2.nodedef_node = 'mix';
mtlx_compositing_mix_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
LiteGraph.registerNodeType('mtlx/compositing/mix_vector2',mtlx_compositing_mix_vector2);

/**
  * @function mtlx_compositing_mix_vector2_vector2
  * @description Library: mtlx. Category: mix. Type: vector2
  *   LiteGraph id: mtlx/compositing/mix_vector2_vector2
  */
function mtlx_compositing_mix_vector2_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_mix_vector2_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'mix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_mix_vector2_vector2_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','vector2');
  this.addProperty('fg', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','vector2');
  this.addProperty('bg', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','vector2');
  this.addProperty('mix', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":[0,0],"uimax":[1,1],"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'mix_vector2';
  this.desc = "MaterialX:mtlx/compositing/mix_vector2_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_compositing_mix_vector2_vector2.nodedef_name = 'ND_mix_vector2_vector2';
mtlx_compositing_mix_vector2_vector2.nodedef_node = 'mix';
mtlx_compositing_mix_vector2_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
LiteGraph.registerNodeType('mtlx/compositing/mix_vector2_vector2',mtlx_compositing_mix_vector2_vector2);

/**
  * @function mtlx_compositing_mix_vector3
  * @description Library: mtlx. Category: mix. Type: vector3
  *   LiteGraph id: mtlx/compositing/mix_vector3
  */
function mtlx_compositing_mix_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_mix_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'mix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_mix_vector3_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','vector3');
  this.addProperty('fg', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','vector3');
  this.addProperty('bg', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'mix_vector3';
  this.desc = "MaterialX:mtlx/compositing/mix_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_compositing_mix_vector3.nodedef_name = 'ND_mix_vector3';
mtlx_compositing_mix_vector3.nodedef_node = 'mix';
mtlx_compositing_mix_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
LiteGraph.registerNodeType('mtlx/compositing/mix_vector3',mtlx_compositing_mix_vector3);

/**
  * @function mtlx_compositing_mix_vector3_vector3
  * @description Library: mtlx. Category: mix. Type: vector3
  *   LiteGraph id: mtlx/compositing/mix_vector3_vector3
  */
function mtlx_compositing_mix_vector3_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_mix_vector3_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'mix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_mix_vector3_vector3_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','vector3');
  this.addProperty('fg', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','vector3');
  this.addProperty('bg', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','vector3');
  this.addProperty('mix', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":[0,0,0],"uimax":[1,1,1],"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'mix_vector3';
  this.desc = "MaterialX:mtlx/compositing/mix_vector3_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_compositing_mix_vector3_vector3.nodedef_name = 'ND_mix_vector3_vector3';
mtlx_compositing_mix_vector3_vector3.nodedef_node = 'mix';
mtlx_compositing_mix_vector3_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
LiteGraph.registerNodeType('mtlx/compositing/mix_vector3_vector3',mtlx_compositing_mix_vector3_vector3);

/**
  * @function mtlx_compositing_mix_vector4
  * @description Library: mtlx. Category: mix. Type: vector4
  *   LiteGraph id: mtlx/compositing/mix_vector4
  */
function mtlx_compositing_mix_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_mix_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'mix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_mix_vector4_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','vector4');
  this.addProperty('fg', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','vector4');
  this.addProperty('bg', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'mix_vector4';
  this.desc = "MaterialX:mtlx/compositing/mix_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_compositing_mix_vector4.nodedef_name = 'ND_mix_vector4';
mtlx_compositing_mix_vector4.nodedef_node = 'mix';
mtlx_compositing_mix_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
LiteGraph.registerNodeType('mtlx/compositing/mix_vector4',mtlx_compositing_mix_vector4);

/**
  * @function mtlx_compositing_mix_vector4_vector4
  * @description Library: mtlx. Category: mix. Type: vector4
  *   LiteGraph id: mtlx/compositing/mix_vector4_vector4
  */
function mtlx_compositing_mix_vector4_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_mix_vector4_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'mix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_mix_vector4_vector4_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','vector4');
  this.addProperty('fg', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','vector4');
  this.addProperty('bg', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','vector4');
  this.addProperty('mix', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":[0,0,0,0],"uimax":[1,1,1,1],"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'mix_vector4';
  this.desc = "MaterialX:mtlx/compositing/mix_vector4_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_compositing_mix_vector4_vector4.nodedef_name = 'ND_mix_vector4_vector4';
mtlx_compositing_mix_vector4_vector4.nodedef_node = 'mix';
mtlx_compositing_mix_vector4_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
LiteGraph.registerNodeType('mtlx/compositing/mix_vector4_vector4',mtlx_compositing_mix_vector4_vector4);

/**
  * @function mtlx_compositing_mix_surfaceshader
  * @description Library: mtlx. Category: mix. Type: surfaceshader
  *   LiteGraph id: mtlx/compositing/mix_surfaceshader
  */
function mtlx_compositing_mix_surfaceshader() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_mix_surfaceshader';
  this.nodedef_type = 'surfaceshader';
  this.nodedef_node = 'mix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_mix_surfaceshader_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','surfaceshader');
  this.addProperty('fg', '', 'surfaceshader',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','surfaceshader');
  this.addProperty('bg', '', 'surfaceshader',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','surfaceshader');
  this.title = 'mix_surfaceshader';
  this.desc = "MaterialX:mtlx/compositing/mix_surfaceshader";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#232';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_compositing_mix_surfaceshader.nodedef_name = 'ND_mix_surfaceshader';
mtlx_compositing_mix_surfaceshader.nodedef_node = 'mix';
mtlx_compositing_mix_surfaceshader.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
LiteGraph.registerNodeType('mtlx/compositing/mix_surfaceshader',mtlx_compositing_mix_surfaceshader);

/**
  * @function mtlx_compositing_mix_displacementshader
  * @description Library: mtlx. Category: mix. Type: displacementshader
  *   LiteGraph id: mtlx/compositing/mix_displacementshader
  */
function mtlx_compositing_mix_displacementshader() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_mix_displacementshader';
  this.nodedef_type = 'displacementshader';
  this.nodedef_node = 'mix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_mix_displacementshader_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','displacementshader');
  this.addProperty('fg', '', 'displacementshader',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','displacementshader');
  this.addProperty('bg', '', 'displacementshader',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','displacementshader');
  this.title = 'mix_displacementshader';
  this.desc = "MaterialX:mtlx/compositing/mix_displacementshader";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#232';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_compositing_mix_displacementshader.nodedef_name = 'ND_mix_displacementshader';
mtlx_compositing_mix_displacementshader.nodedef_node = 'mix';
mtlx_compositing_mix_displacementshader.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
LiteGraph.registerNodeType('mtlx/compositing/mix_displacementshader',mtlx_compositing_mix_displacementshader);

/**
  * @function mtlx_compositing_mix_volumeshader
  * @description Library: mtlx. Category: mix. Type: volumeshader
  *   LiteGraph id: mtlx/compositing/mix_volumeshader
  */
function mtlx_compositing_mix_volumeshader() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_mix_volumeshader';
  this.nodedef_type = 'volumeshader';
  this.nodedef_node = 'mix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_mix_volumeshader_out_genglsl.png';
  this.nodedef_group = 'compositing';
  this.addInput('fg','volumeshader');
  this.addProperty('fg', '', 'volumeshader',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','volumeshader');
  this.addProperty('bg', '', 'volumeshader',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','volumeshader');
  this.title = 'mix_volumeshader';
  this.desc = "MaterialX:mtlx/compositing/mix_volumeshader";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_compositing_mix_volumeshader.nodedef_name = 'ND_mix_volumeshader';
mtlx_compositing_mix_volumeshader.nodedef_node = 'mix';
mtlx_compositing_mix_volumeshader.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
LiteGraph.registerNodeType('mtlx/compositing/mix_volumeshader',mtlx_compositing_mix_volumeshader);

/**
  * @function mtlx_conditional_ifgreater_float
  * @description Library: mtlx. Category: mix. Type: float
  *   LiteGraph id: mtlx/conditional/ifgreater_float
  */
function mtlx_conditional_ifgreater_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreater_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'ifgreater';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreater_float_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','float');
  this.addProperty('in1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'ifgreater_float';
  this.desc = "MaterialX:mtlx/conditional/ifgreater_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#161';
}
mtlx_conditional_ifgreater_float.nodedef_name = 'ND_ifgreater_float';
mtlx_conditional_ifgreater_float.nodedef_node = 'ifgreater';
mtlx_conditional_ifgreater_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreater_float',mtlx_conditional_ifgreater_float);

/**
  * @function mtlx_conditional_ifgreater_integer
  * @description Library: mtlx. Category: ifgreater. Type: integer
  *   LiteGraph id: mtlx/conditional/ifgreater_integer
  */
function mtlx_conditional_ifgreater_integer() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreater_integer';
  this.nodedef_type = 'integer';
  this.nodedef_node = 'ifgreater';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreater_integer_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','integer');
  this.addProperty('in1', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','integer');
  this.addProperty('in2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','integer');
  this.title = 'ifgreater_integer';
  this.desc = "MaterialX:mtlx/conditional/ifgreater_integer";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#A32';
}
mtlx_conditional_ifgreater_integer.nodedef_name = 'ND_ifgreater_integer';
mtlx_conditional_ifgreater_integer.nodedef_node = 'ifgreater';
mtlx_conditional_ifgreater_integer.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreater_integer',mtlx_conditional_ifgreater_integer);

/**
  * @function mtlx_conditional_ifgreater_color3
  * @description Library: mtlx. Category: ifgreater. Type: color3
  *   LiteGraph id: mtlx/conditional/ifgreater_color3
  */
function mtlx_conditional_ifgreater_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreater_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'ifgreater';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreater_color3_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'ifgreater_color3';
  this.desc = "MaterialX:mtlx/conditional/ifgreater_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_conditional_ifgreater_color3.nodedef_name = 'ND_ifgreater_color3';
mtlx_conditional_ifgreater_color3.nodedef_node = 'ifgreater';
mtlx_conditional_ifgreater_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreater_color3',mtlx_conditional_ifgreater_color3);

/**
  * @function mtlx_conditional_ifgreater_color4
  * @description Library: mtlx. Category: ifgreater. Type: color4
  *   LiteGraph id: mtlx/conditional/ifgreater_color4
  */
function mtlx_conditional_ifgreater_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreater_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'ifgreater';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreater_color4_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'ifgreater_color4';
  this.desc = "MaterialX:mtlx/conditional/ifgreater_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_conditional_ifgreater_color4.nodedef_name = 'ND_ifgreater_color4';
mtlx_conditional_ifgreater_color4.nodedef_node = 'ifgreater';
mtlx_conditional_ifgreater_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreater_color4',mtlx_conditional_ifgreater_color4);

/**
  * @function mtlx_conditional_ifgreater_vector2
  * @description Library: mtlx. Category: ifgreater. Type: vector2
  *   LiteGraph id: mtlx/conditional/ifgreater_vector2
  */
function mtlx_conditional_ifgreater_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreater_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'ifgreater';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreater_vector2_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector2');
  this.addProperty('in2', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'ifgreater_vector2';
  this.desc = "MaterialX:mtlx/conditional/ifgreater_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#265';
}
mtlx_conditional_ifgreater_vector2.nodedef_name = 'ND_ifgreater_vector2';
mtlx_conditional_ifgreater_vector2.nodedef_node = 'ifgreater';
mtlx_conditional_ifgreater_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreater_vector2',mtlx_conditional_ifgreater_vector2);

/**
  * @function mtlx_conditional_ifgreater_vector3
  * @description Library: mtlx. Category: ifgreater. Type: vector3
  *   LiteGraph id: mtlx/conditional/ifgreater_vector3
  */
function mtlx_conditional_ifgreater_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreater_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'ifgreater';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreater_vector3_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'ifgreater_vector3';
  this.desc = "MaterialX:mtlx/conditional/ifgreater_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#465';
}
mtlx_conditional_ifgreater_vector3.nodedef_name = 'ND_ifgreater_vector3';
mtlx_conditional_ifgreater_vector3.nodedef_node = 'ifgreater';
mtlx_conditional_ifgreater_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreater_vector3',mtlx_conditional_ifgreater_vector3);

/**
  * @function mtlx_conditional_ifgreater_vector4
  * @description Library: mtlx. Category: ifgreater. Type: vector4
  *   LiteGraph id: mtlx/conditional/ifgreater_vector4
  */
function mtlx_conditional_ifgreater_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreater_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'ifgreater';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreater_vector4_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'ifgreater_vector4';
  this.desc = "MaterialX:mtlx/conditional/ifgreater_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#275';
}
mtlx_conditional_ifgreater_vector4.nodedef_name = 'ND_ifgreater_vector4';
mtlx_conditional_ifgreater_vector4.nodedef_node = 'ifgreater';
mtlx_conditional_ifgreater_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreater_vector4',mtlx_conditional_ifgreater_vector4);

/**
  * @function mtlx_conditional_ifgreater_matrix33
  * @description Library: mtlx. Category: ifgreater. Type: matrix33
  *   LiteGraph id: mtlx/conditional/ifgreater_matrix33
  */
function mtlx_conditional_ifgreater_matrix33() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreater_matrix33';
  this.nodedef_type = 'matrix33';
  this.nodedef_node = 'ifgreater';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreater_matrix33_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','matrix33');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix33');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix33');
  this.title = 'ifgreater_matrix33';
  this.desc = "MaterialX:mtlx/conditional/ifgreater_matrix33";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#333';
}
mtlx_conditional_ifgreater_matrix33.nodedef_name = 'ND_ifgreater_matrix33';
mtlx_conditional_ifgreater_matrix33.nodedef_node = 'ifgreater';
mtlx_conditional_ifgreater_matrix33.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreater_matrix33',mtlx_conditional_ifgreater_matrix33);

/**
  * @function mtlx_conditional_ifgreater_matrix44
  * @description Library: mtlx. Category: ifgreater. Type: matrix44
  *   LiteGraph id: mtlx/conditional/ifgreater_matrix44
  */
function mtlx_conditional_ifgreater_matrix44() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreater_matrix44';
  this.nodedef_type = 'matrix44';
  this.nodedef_node = 'ifgreater';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreater_matrix44_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','matrix44');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix44');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix44');
  this.title = 'ifgreater_matrix44';
  this.desc = "MaterialX:mtlx/conditional/ifgreater_matrix44";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#444';
}
mtlx_conditional_ifgreater_matrix44.nodedef_name = 'ND_ifgreater_matrix44';
mtlx_conditional_ifgreater_matrix44.nodedef_node = 'ifgreater';
mtlx_conditional_ifgreater_matrix44.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreater_matrix44',mtlx_conditional_ifgreater_matrix44);

/**
  * @function mtlx_conditional_ifgreater_boolean
  * @description Library: mtlx. Category: ifgreater. Type: boolean
  *   LiteGraph id: mtlx/conditional/ifgreater_boolean
  */
function mtlx_conditional_ifgreater_boolean() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreater_boolean';
  this.nodedef_type = 'boolean';
  this.nodedef_node = 'ifgreater';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreater_boolean_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','boolean');
  this.title = 'ifgreater_boolean';
  this.desc = "MaterialX:mtlx/conditional/ifgreater_boolean";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#060';
}
mtlx_conditional_ifgreater_boolean.nodedef_name = 'ND_ifgreater_boolean';
mtlx_conditional_ifgreater_boolean.nodedef_node = 'ifgreater';
mtlx_conditional_ifgreater_boolean.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreater_boolean',mtlx_conditional_ifgreater_boolean);

/**
  * @function mtlx_conditional_ifgreater_floatI
  * @description Library: mtlx. Category: ifgreater. Type: float
  *   LiteGraph id: mtlx/conditional/ifgreater_floatI
  */
function mtlx_conditional_ifgreater_floatI() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreater_floatI';
  this.nodedef_type = 'float';
  this.nodedef_node = 'ifgreater';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreater_floatI_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 1, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','float');
  this.addProperty('in1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'ifgreater_float';
  this.desc = "MaterialX:mtlx/conditional/ifgreater_floatI";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#161';
}
mtlx_conditional_ifgreater_floatI.nodedef_name = 'ND_ifgreater_floatI';
mtlx_conditional_ifgreater_floatI.nodedef_node = 'ifgreater';
mtlx_conditional_ifgreater_floatI.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreater_floatI',mtlx_conditional_ifgreater_floatI);

/**
  * @function mtlx_conditional_ifgreater_integerI
  * @description Library: mtlx. Category: ifgreater. Type: integer
  *   LiteGraph id: mtlx/conditional/ifgreater_integerI
  */
function mtlx_conditional_ifgreater_integerI() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreater_integerI';
  this.nodedef_type = 'integer';
  this.nodedef_node = 'ifgreater';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreater_integerI_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 1, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','integer');
  this.addProperty('in1', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','integer');
  this.addProperty('in2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','integer');
  this.title = 'ifgreater_integer';
  this.desc = "MaterialX:mtlx/conditional/ifgreater_integerI";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#A32';
}
mtlx_conditional_ifgreater_integerI.nodedef_name = 'ND_ifgreater_integerI';
mtlx_conditional_ifgreater_integerI.nodedef_node = 'ifgreater';
mtlx_conditional_ifgreater_integerI.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreater_integerI',mtlx_conditional_ifgreater_integerI);

/**
  * @function mtlx_conditional_ifgreater_color3I
  * @description Library: mtlx. Category: ifgreater. Type: color3
  *   LiteGraph id: mtlx/conditional/ifgreater_color3I
  */
function mtlx_conditional_ifgreater_color3I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreater_color3I';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'ifgreater';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreater_color3I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 1, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'ifgreater_color3';
  this.desc = "MaterialX:mtlx/conditional/ifgreater_color3I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_conditional_ifgreater_color3I.nodedef_name = 'ND_ifgreater_color3I';
mtlx_conditional_ifgreater_color3I.nodedef_node = 'ifgreater';
mtlx_conditional_ifgreater_color3I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreater_color3I',mtlx_conditional_ifgreater_color3I);

/**
  * @function mtlx_conditional_ifgreater_color4I
  * @description Library: mtlx. Category: ifgreater. Type: color4
  *   LiteGraph id: mtlx/conditional/ifgreater_color4I
  */
function mtlx_conditional_ifgreater_color4I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreater_color4I';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'ifgreater';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreater_color4I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 1, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'ifgreater_color4';
  this.desc = "MaterialX:mtlx/conditional/ifgreater_color4I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_conditional_ifgreater_color4I.nodedef_name = 'ND_ifgreater_color4I';
mtlx_conditional_ifgreater_color4I.nodedef_node = 'ifgreater';
mtlx_conditional_ifgreater_color4I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreater_color4I',mtlx_conditional_ifgreater_color4I);

/**
  * @function mtlx_conditional_ifgreater_vector2I
  * @description Library: mtlx. Category: ifgreater. Type: vector2
  *   LiteGraph id: mtlx/conditional/ifgreater_vector2I
  */
function mtlx_conditional_ifgreater_vector2I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreater_vector2I';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'ifgreater';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreater_vector2I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 1, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector2');
  this.addProperty('in2', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'ifgreater_vector2';
  this.desc = "MaterialX:mtlx/conditional/ifgreater_vector2I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#265';
}
mtlx_conditional_ifgreater_vector2I.nodedef_name = 'ND_ifgreater_vector2I';
mtlx_conditional_ifgreater_vector2I.nodedef_node = 'ifgreater';
mtlx_conditional_ifgreater_vector2I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreater_vector2I',mtlx_conditional_ifgreater_vector2I);

/**
  * @function mtlx_conditional_ifgreater_vector3I
  * @description Library: mtlx. Category: ifgreater. Type: vector3
  *   LiteGraph id: mtlx/conditional/ifgreater_vector3I
  */
function mtlx_conditional_ifgreater_vector3I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreater_vector3I';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'ifgreater';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreater_vector3I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 1, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'ifgreater_vector3';
  this.desc = "MaterialX:mtlx/conditional/ifgreater_vector3I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#465';
}
mtlx_conditional_ifgreater_vector3I.nodedef_name = 'ND_ifgreater_vector3I';
mtlx_conditional_ifgreater_vector3I.nodedef_node = 'ifgreater';
mtlx_conditional_ifgreater_vector3I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreater_vector3I',mtlx_conditional_ifgreater_vector3I);

/**
  * @function mtlx_conditional_ifgreater_vector4I
  * @description Library: mtlx. Category: ifgreater. Type: vector4
  *   LiteGraph id: mtlx/conditional/ifgreater_vector4I
  */
function mtlx_conditional_ifgreater_vector4I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreater_vector4I';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'ifgreater';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreater_vector4I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 1, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'ifgreater_vector4';
  this.desc = "MaterialX:mtlx/conditional/ifgreater_vector4I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#275';
}
mtlx_conditional_ifgreater_vector4I.nodedef_name = 'ND_ifgreater_vector4I';
mtlx_conditional_ifgreater_vector4I.nodedef_node = 'ifgreater';
mtlx_conditional_ifgreater_vector4I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreater_vector4I',mtlx_conditional_ifgreater_vector4I);

/**
  * @function mtlx_conditional_ifgreater_matrix33I
  * @description Library: mtlx. Category: ifgreater. Type: matrix33
  *   LiteGraph id: mtlx/conditional/ifgreater_matrix33I
  */
function mtlx_conditional_ifgreater_matrix33I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreater_matrix33I';
  this.nodedef_type = 'matrix33';
  this.nodedef_node = 'ifgreater';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreater_matrix33I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 1, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','matrix33');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix33');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix33');
  this.title = 'ifgreater_matrix33';
  this.desc = "MaterialX:mtlx/conditional/ifgreater_matrix33I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#333';
}
mtlx_conditional_ifgreater_matrix33I.nodedef_name = 'ND_ifgreater_matrix33I';
mtlx_conditional_ifgreater_matrix33I.nodedef_node = 'ifgreater';
mtlx_conditional_ifgreater_matrix33I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreater_matrix33I',mtlx_conditional_ifgreater_matrix33I);

/**
  * @function mtlx_conditional_ifgreater_matrix44I
  * @description Library: mtlx. Category: ifgreater. Type: matrix44
  *   LiteGraph id: mtlx/conditional/ifgreater_matrix44I
  */
function mtlx_conditional_ifgreater_matrix44I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreater_matrix44I';
  this.nodedef_type = 'matrix44';
  this.nodedef_node = 'ifgreater';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreater_matrix44I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 1, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','matrix44');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix44');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix44');
  this.title = 'ifgreater_matrix44';
  this.desc = "MaterialX:mtlx/conditional/ifgreater_matrix44I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#444';
}
mtlx_conditional_ifgreater_matrix44I.nodedef_name = 'ND_ifgreater_matrix44I';
mtlx_conditional_ifgreater_matrix44I.nodedef_node = 'ifgreater';
mtlx_conditional_ifgreater_matrix44I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreater_matrix44I',mtlx_conditional_ifgreater_matrix44I);

/**
  * @function mtlx_conditional_ifgreater_booleanI
  * @description Library: mtlx. Category: ifgreater. Type: boolean
  *   LiteGraph id: mtlx/conditional/ifgreater_booleanI
  */
function mtlx_conditional_ifgreater_booleanI() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreater_booleanI';
  this.nodedef_type = 'boolean';
  this.nodedef_node = 'ifgreater';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreater_booleanI_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 1, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','boolean');
  this.title = 'ifgreater_boolean';
  this.desc = "MaterialX:mtlx/conditional/ifgreater_booleanI";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#060';
}
mtlx_conditional_ifgreater_booleanI.nodedef_name = 'ND_ifgreater_booleanI';
mtlx_conditional_ifgreater_booleanI.nodedef_node = 'ifgreater';
mtlx_conditional_ifgreater_booleanI.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreater.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreater_booleanI',mtlx_conditional_ifgreater_booleanI);

/**
  * @function mtlx_conditional_ifgreatereq_float
  * @description Library: mtlx. Category: ifgreater. Type: float
  *   LiteGraph id: mtlx/conditional/ifgreatereq_float
  */
function mtlx_conditional_ifgreatereq_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreatereq_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'ifgreatereq';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreatereq_float_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','float');
  this.addProperty('in1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'ifgreatereq_float';
  this.desc = "MaterialX:mtlx/conditional/ifgreatereq_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#161';
}
mtlx_conditional_ifgreatereq_float.nodedef_name = 'ND_ifgreatereq_float';
mtlx_conditional_ifgreatereq_float.nodedef_node = 'ifgreatereq';
mtlx_conditional_ifgreatereq_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreatereq_float',mtlx_conditional_ifgreatereq_float);

/**
  * @function mtlx_conditional_ifgreatereq_integer
  * @description Library: mtlx. Category: ifgreatereq. Type: integer
  *   LiteGraph id: mtlx/conditional/ifgreatereq_integer
  */
function mtlx_conditional_ifgreatereq_integer() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreatereq_integer';
  this.nodedef_type = 'integer';
  this.nodedef_node = 'ifgreatereq';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreatereq_integer_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','integer');
  this.addProperty('in1', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','integer');
  this.addProperty('in2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','integer');
  this.title = 'ifgreatereq_integer';
  this.desc = "MaterialX:mtlx/conditional/ifgreatereq_integer";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#A32';
}
mtlx_conditional_ifgreatereq_integer.nodedef_name = 'ND_ifgreatereq_integer';
mtlx_conditional_ifgreatereq_integer.nodedef_node = 'ifgreatereq';
mtlx_conditional_ifgreatereq_integer.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreatereq_integer',mtlx_conditional_ifgreatereq_integer);

/**
  * @function mtlx_conditional_ifgreatereq_color3
  * @description Library: mtlx. Category: ifgreatereq. Type: color3
  *   LiteGraph id: mtlx/conditional/ifgreatereq_color3
  */
function mtlx_conditional_ifgreatereq_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreatereq_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'ifgreatereq';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreatereq_color3_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'ifgreatereq_color3';
  this.desc = "MaterialX:mtlx/conditional/ifgreatereq_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_conditional_ifgreatereq_color3.nodedef_name = 'ND_ifgreatereq_color3';
mtlx_conditional_ifgreatereq_color3.nodedef_node = 'ifgreatereq';
mtlx_conditional_ifgreatereq_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreatereq_color3',mtlx_conditional_ifgreatereq_color3);

/**
  * @function mtlx_conditional_ifgreatereq_color4
  * @description Library: mtlx. Category: ifgreatereq. Type: color4
  *   LiteGraph id: mtlx/conditional/ifgreatereq_color4
  */
function mtlx_conditional_ifgreatereq_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreatereq_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'ifgreatereq';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreatereq_color4_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'ifgreatereq_color4';
  this.desc = "MaterialX:mtlx/conditional/ifgreatereq_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_conditional_ifgreatereq_color4.nodedef_name = 'ND_ifgreatereq_color4';
mtlx_conditional_ifgreatereq_color4.nodedef_node = 'ifgreatereq';
mtlx_conditional_ifgreatereq_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreatereq_color4',mtlx_conditional_ifgreatereq_color4);

/**
  * @function mtlx_conditional_ifgreatereq_vector2
  * @description Library: mtlx. Category: ifgreatereq. Type: vector2
  *   LiteGraph id: mtlx/conditional/ifgreatereq_vector2
  */
function mtlx_conditional_ifgreatereq_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreatereq_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'ifgreatereq';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreatereq_vector2_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector2');
  this.addProperty('in2', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'ifgreatereq_vector2';
  this.desc = "MaterialX:mtlx/conditional/ifgreatereq_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#265';
}
mtlx_conditional_ifgreatereq_vector2.nodedef_name = 'ND_ifgreatereq_vector2';
mtlx_conditional_ifgreatereq_vector2.nodedef_node = 'ifgreatereq';
mtlx_conditional_ifgreatereq_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreatereq_vector2',mtlx_conditional_ifgreatereq_vector2);

/**
  * @function mtlx_conditional_ifgreatereq_vector3
  * @description Library: mtlx. Category: ifgreatereq. Type: vector3
  *   LiteGraph id: mtlx/conditional/ifgreatereq_vector3
  */
function mtlx_conditional_ifgreatereq_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreatereq_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'ifgreatereq';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreatereq_vector3_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'ifgreatereq_vector3';
  this.desc = "MaterialX:mtlx/conditional/ifgreatereq_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#465';
}
mtlx_conditional_ifgreatereq_vector3.nodedef_name = 'ND_ifgreatereq_vector3';
mtlx_conditional_ifgreatereq_vector3.nodedef_node = 'ifgreatereq';
mtlx_conditional_ifgreatereq_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreatereq_vector3',mtlx_conditional_ifgreatereq_vector3);

/**
  * @function mtlx_conditional_ifgreatereq_vector4
  * @description Library: mtlx. Category: ifgreatereq. Type: vector4
  *   LiteGraph id: mtlx/conditional/ifgreatereq_vector4
  */
function mtlx_conditional_ifgreatereq_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreatereq_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'ifgreatereq';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreatereq_vector4_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'ifgreatereq_vector4';
  this.desc = "MaterialX:mtlx/conditional/ifgreatereq_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#275';
}
mtlx_conditional_ifgreatereq_vector4.nodedef_name = 'ND_ifgreatereq_vector4';
mtlx_conditional_ifgreatereq_vector4.nodedef_node = 'ifgreatereq';
mtlx_conditional_ifgreatereq_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreatereq_vector4',mtlx_conditional_ifgreatereq_vector4);

/**
  * @function mtlx_conditional_ifgreatereq_matrix33
  * @description Library: mtlx. Category: ifgreatereq. Type: matrix33
  *   LiteGraph id: mtlx/conditional/ifgreatereq_matrix33
  */
function mtlx_conditional_ifgreatereq_matrix33() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreatereq_matrix33';
  this.nodedef_type = 'matrix33';
  this.nodedef_node = 'ifgreatereq';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreatereq_matrix33_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','matrix33');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix33');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix33');
  this.title = 'ifgreatereq_matrix33';
  this.desc = "MaterialX:mtlx/conditional/ifgreatereq_matrix33";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#333';
}
mtlx_conditional_ifgreatereq_matrix33.nodedef_name = 'ND_ifgreatereq_matrix33';
mtlx_conditional_ifgreatereq_matrix33.nodedef_node = 'ifgreatereq';
mtlx_conditional_ifgreatereq_matrix33.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreatereq_matrix33',mtlx_conditional_ifgreatereq_matrix33);

/**
  * @function mtlx_conditional_ifgreatereq_matrix44
  * @description Library: mtlx. Category: ifgreatereq. Type: matrix44
  *   LiteGraph id: mtlx/conditional/ifgreatereq_matrix44
  */
function mtlx_conditional_ifgreatereq_matrix44() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreatereq_matrix44';
  this.nodedef_type = 'matrix44';
  this.nodedef_node = 'ifgreatereq';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreatereq_matrix44_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','matrix44');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix44');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix44');
  this.title = 'ifgreatereq_matrix44';
  this.desc = "MaterialX:mtlx/conditional/ifgreatereq_matrix44";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#444';
}
mtlx_conditional_ifgreatereq_matrix44.nodedef_name = 'ND_ifgreatereq_matrix44';
mtlx_conditional_ifgreatereq_matrix44.nodedef_node = 'ifgreatereq';
mtlx_conditional_ifgreatereq_matrix44.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreatereq_matrix44',mtlx_conditional_ifgreatereq_matrix44);

/**
  * @function mtlx_conditional_ifgreatereq_boolean
  * @description Library: mtlx. Category: ifgreatereq. Type: boolean
  *   LiteGraph id: mtlx/conditional/ifgreatereq_boolean
  */
function mtlx_conditional_ifgreatereq_boolean() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreatereq_boolean';
  this.nodedef_type = 'boolean';
  this.nodedef_node = 'ifgreatereq';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreatereq_boolean_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','boolean');
  this.title = 'ifgreatereq_boolean';
  this.desc = "MaterialX:mtlx/conditional/ifgreatereq_boolean";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#060';
}
mtlx_conditional_ifgreatereq_boolean.nodedef_name = 'ND_ifgreatereq_boolean';
mtlx_conditional_ifgreatereq_boolean.nodedef_node = 'ifgreatereq';
mtlx_conditional_ifgreatereq_boolean.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreatereq_boolean',mtlx_conditional_ifgreatereq_boolean);

/**
  * @function mtlx_conditional_ifgreatereq_floatI
  * @description Library: mtlx. Category: ifgreatereq. Type: float
  *   LiteGraph id: mtlx/conditional/ifgreatereq_floatI
  */
function mtlx_conditional_ifgreatereq_floatI() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreatereq_floatI';
  this.nodedef_type = 'float';
  this.nodedef_node = 'ifgreatereq';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreatereq_floatI_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 1, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','float');
  this.addProperty('in1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'ifgreatereq_float';
  this.desc = "MaterialX:mtlx/conditional/ifgreatereq_floatI";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#161';
}
mtlx_conditional_ifgreatereq_floatI.nodedef_name = 'ND_ifgreatereq_floatI';
mtlx_conditional_ifgreatereq_floatI.nodedef_node = 'ifgreatereq';
mtlx_conditional_ifgreatereq_floatI.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreatereq_floatI',mtlx_conditional_ifgreatereq_floatI);

/**
  * @function mtlx_conditional_ifgreatereq_integerI
  * @description Library: mtlx. Category: ifgreatereq. Type: integer
  *   LiteGraph id: mtlx/conditional/ifgreatereq_integerI
  */
function mtlx_conditional_ifgreatereq_integerI() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreatereq_integerI';
  this.nodedef_type = 'integer';
  this.nodedef_node = 'ifgreatereq';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreatereq_integerI_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 1, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','integer');
  this.addProperty('in1', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','integer');
  this.addProperty('in2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','integer');
  this.title = 'ifgreatereq_integer';
  this.desc = "MaterialX:mtlx/conditional/ifgreatereq_integerI";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#A32';
}
mtlx_conditional_ifgreatereq_integerI.nodedef_name = 'ND_ifgreatereq_integerI';
mtlx_conditional_ifgreatereq_integerI.nodedef_node = 'ifgreatereq';
mtlx_conditional_ifgreatereq_integerI.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreatereq_integerI',mtlx_conditional_ifgreatereq_integerI);

/**
  * @function mtlx_conditional_ifgreatereq_color3I
  * @description Library: mtlx. Category: ifgreatereq. Type: color3
  *   LiteGraph id: mtlx/conditional/ifgreatereq_color3I
  */
function mtlx_conditional_ifgreatereq_color3I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreatereq_color3I';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'ifgreatereq';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreatereq_color3I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 1, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'ifgreatereq_color3';
  this.desc = "MaterialX:mtlx/conditional/ifgreatereq_color3I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_conditional_ifgreatereq_color3I.nodedef_name = 'ND_ifgreatereq_color3I';
mtlx_conditional_ifgreatereq_color3I.nodedef_node = 'ifgreatereq';
mtlx_conditional_ifgreatereq_color3I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreatereq_color3I',mtlx_conditional_ifgreatereq_color3I);

/**
  * @function mtlx_conditional_ifgreatereq_color4I
  * @description Library: mtlx. Category: ifgreatereq. Type: color4
  *   LiteGraph id: mtlx/conditional/ifgreatereq_color4I
  */
function mtlx_conditional_ifgreatereq_color4I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreatereq_color4I';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'ifgreatereq';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreatereq_color4I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 1, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'ifgreatereq_color4';
  this.desc = "MaterialX:mtlx/conditional/ifgreatereq_color4I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_conditional_ifgreatereq_color4I.nodedef_name = 'ND_ifgreatereq_color4I';
mtlx_conditional_ifgreatereq_color4I.nodedef_node = 'ifgreatereq';
mtlx_conditional_ifgreatereq_color4I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreatereq_color4I',mtlx_conditional_ifgreatereq_color4I);

/**
  * @function mtlx_conditional_ifgreatereq_vector2I
  * @description Library: mtlx. Category: ifgreatereq. Type: vector2
  *   LiteGraph id: mtlx/conditional/ifgreatereq_vector2I
  */
function mtlx_conditional_ifgreatereq_vector2I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreatereq_vector2I';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'ifgreatereq';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreatereq_vector2I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 1, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector2');
  this.addProperty('in2', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'ifgreatereq_vector2';
  this.desc = "MaterialX:mtlx/conditional/ifgreatereq_vector2I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#265';
}
mtlx_conditional_ifgreatereq_vector2I.nodedef_name = 'ND_ifgreatereq_vector2I';
mtlx_conditional_ifgreatereq_vector2I.nodedef_node = 'ifgreatereq';
mtlx_conditional_ifgreatereq_vector2I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreatereq_vector2I',mtlx_conditional_ifgreatereq_vector2I);

/**
  * @function mtlx_conditional_ifgreatereq_vector3I
  * @description Library: mtlx. Category: ifgreatereq. Type: vector3
  *   LiteGraph id: mtlx/conditional/ifgreatereq_vector3I
  */
function mtlx_conditional_ifgreatereq_vector3I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreatereq_vector3I';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'ifgreatereq';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreatereq_vector3I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 1, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'ifgreatereq_vector3';
  this.desc = "MaterialX:mtlx/conditional/ifgreatereq_vector3I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#465';
}
mtlx_conditional_ifgreatereq_vector3I.nodedef_name = 'ND_ifgreatereq_vector3I';
mtlx_conditional_ifgreatereq_vector3I.nodedef_node = 'ifgreatereq';
mtlx_conditional_ifgreatereq_vector3I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreatereq_vector3I',mtlx_conditional_ifgreatereq_vector3I);

/**
  * @function mtlx_conditional_ifgreatereq_vector4I
  * @description Library: mtlx. Category: ifgreatereq. Type: vector4
  *   LiteGraph id: mtlx/conditional/ifgreatereq_vector4I
  */
function mtlx_conditional_ifgreatereq_vector4I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreatereq_vector4I';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'ifgreatereq';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreatereq_vector4I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 1, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'ifgreatereq_vector4';
  this.desc = "MaterialX:mtlx/conditional/ifgreatereq_vector4I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#275';
}
mtlx_conditional_ifgreatereq_vector4I.nodedef_name = 'ND_ifgreatereq_vector4I';
mtlx_conditional_ifgreatereq_vector4I.nodedef_node = 'ifgreatereq';
mtlx_conditional_ifgreatereq_vector4I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreatereq_vector4I',mtlx_conditional_ifgreatereq_vector4I);

/**
  * @function mtlx_conditional_ifgreatereq_matrix33I
  * @description Library: mtlx. Category: ifgreatereq. Type: matrix33
  *   LiteGraph id: mtlx/conditional/ifgreatereq_matrix33I
  */
function mtlx_conditional_ifgreatereq_matrix33I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreatereq_matrix33I';
  this.nodedef_type = 'matrix33';
  this.nodedef_node = 'ifgreatereq';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreatereq_matrix33I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 1, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','matrix33');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix33');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix33');
  this.title = 'ifgreatereq_matrix33';
  this.desc = "MaterialX:mtlx/conditional/ifgreatereq_matrix33I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#333';
}
mtlx_conditional_ifgreatereq_matrix33I.nodedef_name = 'ND_ifgreatereq_matrix33I';
mtlx_conditional_ifgreatereq_matrix33I.nodedef_node = 'ifgreatereq';
mtlx_conditional_ifgreatereq_matrix33I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreatereq_matrix33I',mtlx_conditional_ifgreatereq_matrix33I);

/**
  * @function mtlx_conditional_ifgreatereq_matrix44I
  * @description Library: mtlx. Category: ifgreatereq. Type: matrix44
  *   LiteGraph id: mtlx/conditional/ifgreatereq_matrix44I
  */
function mtlx_conditional_ifgreatereq_matrix44I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreatereq_matrix44I';
  this.nodedef_type = 'matrix44';
  this.nodedef_node = 'ifgreatereq';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreatereq_matrix44I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 1, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','matrix44');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix44');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix44');
  this.title = 'ifgreatereq_matrix44';
  this.desc = "MaterialX:mtlx/conditional/ifgreatereq_matrix44I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#444';
}
mtlx_conditional_ifgreatereq_matrix44I.nodedef_name = 'ND_ifgreatereq_matrix44I';
mtlx_conditional_ifgreatereq_matrix44I.nodedef_node = 'ifgreatereq';
mtlx_conditional_ifgreatereq_matrix44I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreatereq_matrix44I',mtlx_conditional_ifgreatereq_matrix44I);

/**
  * @function mtlx_conditional_ifgreatereq_booleanI
  * @description Library: mtlx. Category: ifgreatereq. Type: boolean
  *   LiteGraph id: mtlx/conditional/ifgreatereq_booleanI
  */
function mtlx_conditional_ifgreatereq_booleanI() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifgreatereq_booleanI';
  this.nodedef_type = 'boolean';
  this.nodedef_node = 'ifgreatereq';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifgreatereq_booleanI_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 1, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','boolean');
  this.title = 'ifgreatereq_boolean';
  this.desc = "MaterialX:mtlx/conditional/ifgreatereq_booleanI";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#060';
}
mtlx_conditional_ifgreatereq_booleanI.nodedef_name = 'ND_ifgreatereq_booleanI';
mtlx_conditional_ifgreatereq_booleanI.nodedef_node = 'ifgreatereq';
mtlx_conditional_ifgreatereq_booleanI.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifgreatereq.html';
LiteGraph.registerNodeType('mtlx/conditional/ifgreatereq_booleanI',mtlx_conditional_ifgreatereq_booleanI);

/**
  * @function mtlx_conditional_ifequal_float
  * @description Library: mtlx. Category: ifgreatereq. Type: float
  *   LiteGraph id: mtlx/conditional/ifequal_float
  */
function mtlx_conditional_ifequal_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_float_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','float');
  this.addProperty('in1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'ifequal_float';
  this.desc = "MaterialX:mtlx/conditional/ifequal_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#161';
}
mtlx_conditional_ifequal_float.nodedef_name = 'ND_ifequal_float';
mtlx_conditional_ifequal_float.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_float',mtlx_conditional_ifequal_float);

/**
  * @function mtlx_conditional_ifequal_integer
  * @description Library: mtlx. Category: ifequal. Type: integer
  *   LiteGraph id: mtlx/conditional/ifequal_integer
  */
function mtlx_conditional_ifequal_integer() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_integer';
  this.nodedef_type = 'integer';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_integer_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','integer');
  this.addProperty('in1', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','integer');
  this.addProperty('in2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','integer');
  this.title = 'ifequal_integer';
  this.desc = "MaterialX:mtlx/conditional/ifequal_integer";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#A32';
}
mtlx_conditional_ifequal_integer.nodedef_name = 'ND_ifequal_integer';
mtlx_conditional_ifequal_integer.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_integer.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_integer',mtlx_conditional_ifequal_integer);

/**
  * @function mtlx_conditional_ifequal_color3
  * @description Library: mtlx. Category: ifequal. Type: color3
  *   LiteGraph id: mtlx/conditional/ifequal_color3
  */
function mtlx_conditional_ifequal_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_color3_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'ifequal_color3';
  this.desc = "MaterialX:mtlx/conditional/ifequal_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_conditional_ifequal_color3.nodedef_name = 'ND_ifequal_color3';
mtlx_conditional_ifequal_color3.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_color3',mtlx_conditional_ifequal_color3);

/**
  * @function mtlx_conditional_ifequal_color4
  * @description Library: mtlx. Category: ifequal. Type: color4
  *   LiteGraph id: mtlx/conditional/ifequal_color4
  */
function mtlx_conditional_ifequal_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_color4_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'ifequal_color4';
  this.desc = "MaterialX:mtlx/conditional/ifequal_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_conditional_ifequal_color4.nodedef_name = 'ND_ifequal_color4';
mtlx_conditional_ifequal_color4.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_color4',mtlx_conditional_ifequal_color4);

/**
  * @function mtlx_conditional_ifequal_vector2
  * @description Library: mtlx. Category: ifequal. Type: vector2
  *   LiteGraph id: mtlx/conditional/ifequal_vector2
  */
function mtlx_conditional_ifequal_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_vector2_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector2');
  this.addProperty('in2', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'ifequal_vector2';
  this.desc = "MaterialX:mtlx/conditional/ifequal_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#265';
}
mtlx_conditional_ifequal_vector2.nodedef_name = 'ND_ifequal_vector2';
mtlx_conditional_ifequal_vector2.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_vector2',mtlx_conditional_ifequal_vector2);

/**
  * @function mtlx_conditional_ifequal_vector3
  * @description Library: mtlx. Category: ifequal. Type: vector3
  *   LiteGraph id: mtlx/conditional/ifequal_vector3
  */
function mtlx_conditional_ifequal_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_vector3_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'ifequal_vector3';
  this.desc = "MaterialX:mtlx/conditional/ifequal_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#465';
}
mtlx_conditional_ifequal_vector3.nodedef_name = 'ND_ifequal_vector3';
mtlx_conditional_ifequal_vector3.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_vector3',mtlx_conditional_ifequal_vector3);

/**
  * @function mtlx_conditional_ifequal_vector4
  * @description Library: mtlx. Category: ifequal. Type: vector4
  *   LiteGraph id: mtlx/conditional/ifequal_vector4
  */
function mtlx_conditional_ifequal_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_vector4_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'ifequal_vector4';
  this.desc = "MaterialX:mtlx/conditional/ifequal_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#275';
}
mtlx_conditional_ifequal_vector4.nodedef_name = 'ND_ifequal_vector4';
mtlx_conditional_ifequal_vector4.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_vector4',mtlx_conditional_ifequal_vector4);

/**
  * @function mtlx_conditional_ifequal_matrix33
  * @description Library: mtlx. Category: ifequal. Type: matrix33
  *   LiteGraph id: mtlx/conditional/ifequal_matrix33
  */
function mtlx_conditional_ifequal_matrix33() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_matrix33';
  this.nodedef_type = 'matrix33';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_matrix33_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','matrix33');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix33');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix33');
  this.title = 'ifequal_matrix33';
  this.desc = "MaterialX:mtlx/conditional/ifequal_matrix33";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#333';
}
mtlx_conditional_ifequal_matrix33.nodedef_name = 'ND_ifequal_matrix33';
mtlx_conditional_ifequal_matrix33.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_matrix33.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_matrix33',mtlx_conditional_ifequal_matrix33);

/**
  * @function mtlx_conditional_ifequal_matrix44
  * @description Library: mtlx. Category: ifequal. Type: matrix44
  *   LiteGraph id: mtlx/conditional/ifequal_matrix44
  */
function mtlx_conditional_ifequal_matrix44() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_matrix44';
  this.nodedef_type = 'matrix44';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_matrix44_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','matrix44');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix44');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix44');
  this.title = 'ifequal_matrix44';
  this.desc = "MaterialX:mtlx/conditional/ifequal_matrix44";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#444';
}
mtlx_conditional_ifequal_matrix44.nodedef_name = 'ND_ifequal_matrix44';
mtlx_conditional_ifequal_matrix44.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_matrix44.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_matrix44',mtlx_conditional_ifequal_matrix44);

/**
  * @function mtlx_conditional_ifequal_boolean
  * @description Library: mtlx. Category: ifequal. Type: boolean
  *   LiteGraph id: mtlx/conditional/ifequal_boolean
  */
function mtlx_conditional_ifequal_boolean() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_boolean';
  this.nodedef_type = 'boolean';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_boolean_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','float');
  this.addProperty('value1', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','float');
  this.addProperty('value2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','boolean');
  this.title = 'ifequal_boolean';
  this.desc = "MaterialX:mtlx/conditional/ifequal_boolean";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#060';
}
mtlx_conditional_ifequal_boolean.nodedef_name = 'ND_ifequal_boolean';
mtlx_conditional_ifequal_boolean.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_boolean.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_boolean',mtlx_conditional_ifequal_boolean);

/**
  * @function mtlx_conditional_ifequal_floatI
  * @description Library: mtlx. Category: ifequal. Type: float
  *   LiteGraph id: mtlx/conditional/ifequal_floatI
  */
function mtlx_conditional_ifequal_floatI() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_floatI';
  this.nodedef_type = 'float';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_floatI_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','float');
  this.addProperty('in1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'ifequal_float';
  this.desc = "MaterialX:mtlx/conditional/ifequal_floatI";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#161';
}
mtlx_conditional_ifequal_floatI.nodedef_name = 'ND_ifequal_floatI';
mtlx_conditional_ifequal_floatI.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_floatI.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_floatI',mtlx_conditional_ifequal_floatI);

/**
  * @function mtlx_conditional_ifequal_integerI
  * @description Library: mtlx. Category: ifequal. Type: integer
  *   LiteGraph id: mtlx/conditional/ifequal_integerI
  */
function mtlx_conditional_ifequal_integerI() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_integerI';
  this.nodedef_type = 'integer';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_integerI_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','integer');
  this.addProperty('in1', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','integer');
  this.addProperty('in2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','integer');
  this.title = 'ifequal_integer';
  this.desc = "MaterialX:mtlx/conditional/ifequal_integerI";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#A32';
}
mtlx_conditional_ifequal_integerI.nodedef_name = 'ND_ifequal_integerI';
mtlx_conditional_ifequal_integerI.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_integerI.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_integerI',mtlx_conditional_ifequal_integerI);

/**
  * @function mtlx_conditional_ifequal_color3I
  * @description Library: mtlx. Category: ifequal. Type: color3
  *   LiteGraph id: mtlx/conditional/ifequal_color3I
  */
function mtlx_conditional_ifequal_color3I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_color3I';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_color3I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'ifequal_color3';
  this.desc = "MaterialX:mtlx/conditional/ifequal_color3I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_conditional_ifequal_color3I.nodedef_name = 'ND_ifequal_color3I';
mtlx_conditional_ifequal_color3I.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_color3I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_color3I',mtlx_conditional_ifequal_color3I);

/**
  * @function mtlx_conditional_ifequal_color4I
  * @description Library: mtlx. Category: ifequal. Type: color4
  *   LiteGraph id: mtlx/conditional/ifequal_color4I
  */
function mtlx_conditional_ifequal_color4I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_color4I';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_color4I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'ifequal_color4';
  this.desc = "MaterialX:mtlx/conditional/ifequal_color4I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_conditional_ifequal_color4I.nodedef_name = 'ND_ifequal_color4I';
mtlx_conditional_ifequal_color4I.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_color4I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_color4I',mtlx_conditional_ifequal_color4I);

/**
  * @function mtlx_conditional_ifequal_vector2I
  * @description Library: mtlx. Category: ifequal. Type: vector2
  *   LiteGraph id: mtlx/conditional/ifequal_vector2I
  */
function mtlx_conditional_ifequal_vector2I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_vector2I';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_vector2I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector2');
  this.addProperty('in2', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'ifequal_vector2';
  this.desc = "MaterialX:mtlx/conditional/ifequal_vector2I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#265';
}
mtlx_conditional_ifequal_vector2I.nodedef_name = 'ND_ifequal_vector2I';
mtlx_conditional_ifequal_vector2I.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_vector2I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_vector2I',mtlx_conditional_ifequal_vector2I);

/**
  * @function mtlx_conditional_ifequal_vector3I
  * @description Library: mtlx. Category: ifequal. Type: vector3
  *   LiteGraph id: mtlx/conditional/ifequal_vector3I
  */
function mtlx_conditional_ifequal_vector3I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_vector3I';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_vector3I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'ifequal_vector3';
  this.desc = "MaterialX:mtlx/conditional/ifequal_vector3I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#465';
}
mtlx_conditional_ifequal_vector3I.nodedef_name = 'ND_ifequal_vector3I';
mtlx_conditional_ifequal_vector3I.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_vector3I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_vector3I',mtlx_conditional_ifequal_vector3I);

/**
  * @function mtlx_conditional_ifequal_vector4I
  * @description Library: mtlx. Category: ifequal. Type: vector4
  *   LiteGraph id: mtlx/conditional/ifequal_vector4I
  */
function mtlx_conditional_ifequal_vector4I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_vector4I';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_vector4I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'ifequal_vector4';
  this.desc = "MaterialX:mtlx/conditional/ifequal_vector4I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#275';
}
mtlx_conditional_ifequal_vector4I.nodedef_name = 'ND_ifequal_vector4I';
mtlx_conditional_ifequal_vector4I.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_vector4I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_vector4I',mtlx_conditional_ifequal_vector4I);

/**
  * @function mtlx_conditional_ifequal_matrix33I
  * @description Library: mtlx. Category: ifequal. Type: matrix33
  *   LiteGraph id: mtlx/conditional/ifequal_matrix33I
  */
function mtlx_conditional_ifequal_matrix33I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_matrix33I';
  this.nodedef_type = 'matrix33';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_matrix33I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','matrix33');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix33');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix33');
  this.title = 'ifequal_matrix33';
  this.desc = "MaterialX:mtlx/conditional/ifequal_matrix33I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#333';
}
mtlx_conditional_ifequal_matrix33I.nodedef_name = 'ND_ifequal_matrix33I';
mtlx_conditional_ifequal_matrix33I.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_matrix33I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_matrix33I',mtlx_conditional_ifequal_matrix33I);

/**
  * @function mtlx_conditional_ifequal_matrix44I
  * @description Library: mtlx. Category: ifequal. Type: matrix44
  *   LiteGraph id: mtlx/conditional/ifequal_matrix44I
  */
function mtlx_conditional_ifequal_matrix44I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_matrix44I';
  this.nodedef_type = 'matrix44';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_matrix44I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','matrix44');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix44');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix44');
  this.title = 'ifequal_matrix44';
  this.desc = "MaterialX:mtlx/conditional/ifequal_matrix44I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#444';
}
mtlx_conditional_ifequal_matrix44I.nodedef_name = 'ND_ifequal_matrix44I';
mtlx_conditional_ifequal_matrix44I.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_matrix44I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_matrix44I',mtlx_conditional_ifequal_matrix44I);

/**
  * @function mtlx_conditional_ifequal_booleanI
  * @description Library: mtlx. Category: ifequal. Type: boolean
  *   LiteGraph id: mtlx/conditional/ifequal_booleanI
  */
function mtlx_conditional_ifequal_booleanI() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_booleanI';
  this.nodedef_type = 'boolean';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_booleanI_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','integer');
  this.addProperty('value1', 1, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','integer');
  this.addProperty('value2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','boolean');
  this.title = 'ifequal_boolean';
  this.desc = "MaterialX:mtlx/conditional/ifequal_booleanI";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#060';
}
mtlx_conditional_ifequal_booleanI.nodedef_name = 'ND_ifequal_booleanI';
mtlx_conditional_ifequal_booleanI.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_booleanI.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_booleanI',mtlx_conditional_ifequal_booleanI);

/**
  * @function mtlx_conditional_ifequal_floatB
  * @description Library: mtlx. Category: ifequal. Type: float
  *   LiteGraph id: mtlx/conditional/ifequal_floatB
  */
function mtlx_conditional_ifequal_floatB() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_floatB';
  this.nodedef_type = 'float';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_floatB_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','boolean');
  this.addProperty('value1', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','boolean');
  this.addProperty('value2', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','float');
  this.addProperty('in1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'ifequal_float';
  this.desc = "MaterialX:mtlx/conditional/ifequal_floatB";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#161';
}
mtlx_conditional_ifequal_floatB.nodedef_name = 'ND_ifequal_floatB';
mtlx_conditional_ifequal_floatB.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_floatB.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_floatB',mtlx_conditional_ifequal_floatB);

/**
  * @function mtlx_conditional_ifequal_integerB
  * @description Library: mtlx. Category: ifequal. Type: integer
  *   LiteGraph id: mtlx/conditional/ifequal_integerB
  */
function mtlx_conditional_ifequal_integerB() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_integerB';
  this.nodedef_type = 'integer';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_integerB_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','boolean');
  this.addProperty('value1', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','boolean');
  this.addProperty('value2', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','integer');
  this.addProperty('in1', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','integer');
  this.addProperty('in2', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','integer');
  this.title = 'ifequal_integer';
  this.desc = "MaterialX:mtlx/conditional/ifequal_integerB";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#A32';
}
mtlx_conditional_ifequal_integerB.nodedef_name = 'ND_ifequal_integerB';
mtlx_conditional_ifequal_integerB.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_integerB.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_integerB',mtlx_conditional_ifequal_integerB);

/**
  * @function mtlx_conditional_ifequal_color3B
  * @description Library: mtlx. Category: ifequal. Type: color3
  *   LiteGraph id: mtlx/conditional/ifequal_color3B
  */
function mtlx_conditional_ifequal_color3B() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_color3B';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_color3B_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','boolean');
  this.addProperty('value1', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','boolean');
  this.addProperty('value2', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'ifequal_color3';
  this.desc = "MaterialX:mtlx/conditional/ifequal_color3B";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_conditional_ifequal_color3B.nodedef_name = 'ND_ifequal_color3B';
mtlx_conditional_ifequal_color3B.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_color3B.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_color3B',mtlx_conditional_ifequal_color3B);

/**
  * @function mtlx_conditional_ifequal_color4B
  * @description Library: mtlx. Category: ifequal. Type: color4
  *   LiteGraph id: mtlx/conditional/ifequal_color4B
  */
function mtlx_conditional_ifequal_color4B() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_color4B';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_color4B_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','boolean');
  this.addProperty('value1', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','boolean');
  this.addProperty('value2', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'ifequal_color4';
  this.desc = "MaterialX:mtlx/conditional/ifequal_color4B";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_conditional_ifequal_color4B.nodedef_name = 'ND_ifequal_color4B';
mtlx_conditional_ifequal_color4B.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_color4B.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_color4B',mtlx_conditional_ifequal_color4B);

/**
  * @function mtlx_conditional_ifequal_vector2B
  * @description Library: mtlx. Category: ifequal. Type: vector2
  *   LiteGraph id: mtlx/conditional/ifequal_vector2B
  */
function mtlx_conditional_ifequal_vector2B() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_vector2B';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_vector2B_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','boolean');
  this.addProperty('value1', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','boolean');
  this.addProperty('value2', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector2');
  this.addProperty('in2', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'ifequal_vector2';
  this.desc = "MaterialX:mtlx/conditional/ifequal_vector2B";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#265';
}
mtlx_conditional_ifequal_vector2B.nodedef_name = 'ND_ifequal_vector2B';
mtlx_conditional_ifequal_vector2B.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_vector2B.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_vector2B',mtlx_conditional_ifequal_vector2B);

/**
  * @function mtlx_conditional_ifequal_vector3B
  * @description Library: mtlx. Category: ifequal. Type: vector3
  *   LiteGraph id: mtlx/conditional/ifequal_vector3B
  */
function mtlx_conditional_ifequal_vector3B() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_vector3B';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_vector3B_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','boolean');
  this.addProperty('value1', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','boolean');
  this.addProperty('value2', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'ifequal_vector3';
  this.desc = "MaterialX:mtlx/conditional/ifequal_vector3B";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#465';
}
mtlx_conditional_ifequal_vector3B.nodedef_name = 'ND_ifequal_vector3B';
mtlx_conditional_ifequal_vector3B.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_vector3B.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_vector3B',mtlx_conditional_ifequal_vector3B);

/**
  * @function mtlx_conditional_ifequal_vector4B
  * @description Library: mtlx. Category: ifequal. Type: vector4
  *   LiteGraph id: mtlx/conditional/ifequal_vector4B
  */
function mtlx_conditional_ifequal_vector4B() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_vector4B';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_vector4B_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','boolean');
  this.addProperty('value1', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','boolean');
  this.addProperty('value2', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'ifequal_vector4';
  this.desc = "MaterialX:mtlx/conditional/ifequal_vector4B";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#275';
}
mtlx_conditional_ifequal_vector4B.nodedef_name = 'ND_ifequal_vector4B';
mtlx_conditional_ifequal_vector4B.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_vector4B.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_vector4B',mtlx_conditional_ifequal_vector4B);

/**
  * @function mtlx_conditional_ifequal_matrix33B
  * @description Library: mtlx. Category: ifequal. Type: matrix33
  *   LiteGraph id: mtlx/conditional/ifequal_matrix33B
  */
function mtlx_conditional_ifequal_matrix33B() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_matrix33B';
  this.nodedef_type = 'matrix33';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_matrix33B_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','boolean');
  this.addProperty('value1', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','boolean');
  this.addProperty('value2', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','matrix33');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix33');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix33');
  this.title = 'ifequal_matrix33';
  this.desc = "MaterialX:mtlx/conditional/ifequal_matrix33B";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#333';
}
mtlx_conditional_ifequal_matrix33B.nodedef_name = 'ND_ifequal_matrix33B';
mtlx_conditional_ifequal_matrix33B.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_matrix33B.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_matrix33B',mtlx_conditional_ifequal_matrix33B);

/**
  * @function mtlx_conditional_ifequal_matrix44B
  * @description Library: mtlx. Category: ifequal. Type: matrix44
  *   LiteGraph id: mtlx/conditional/ifequal_matrix44B
  */
function mtlx_conditional_ifequal_matrix44B() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_matrix44B';
  this.nodedef_type = 'matrix44';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_matrix44B_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','boolean');
  this.addProperty('value1', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','boolean');
  this.addProperty('value2', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in1','matrix44');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix44');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix44');
  this.title = 'ifequal_matrix44';
  this.desc = "MaterialX:mtlx/conditional/ifequal_matrix44B";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#444';
}
mtlx_conditional_ifequal_matrix44B.nodedef_name = 'ND_ifequal_matrix44B';
mtlx_conditional_ifequal_matrix44B.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_matrix44B.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_matrix44B',mtlx_conditional_ifequal_matrix44B);

/**
  * @function mtlx_conditional_ifequal_booleanB
  * @description Library: mtlx. Category: ifequal. Type: boolean
  *   LiteGraph id: mtlx/conditional/ifequal_booleanB
  */
function mtlx_conditional_ifequal_booleanB() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_ifequal_booleanB';
  this.nodedef_type = 'boolean';
  this.nodedef_node = 'ifequal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_ifequal_booleanB_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('value1','boolean');
  this.addProperty('value1', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('value2','boolean');
  this.addProperty('value2', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','boolean');
  this.title = 'ifequal_boolean';
  this.desc = "MaterialX:mtlx/conditional/ifequal_booleanB";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#060';
}
mtlx_conditional_ifequal_booleanB.nodedef_name = 'ND_ifequal_booleanB';
mtlx_conditional_ifequal_booleanB.nodedef_node = 'ifequal';
mtlx_conditional_ifequal_booleanB.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/ifequal.html';
LiteGraph.registerNodeType('mtlx/conditional/ifequal_booleanB',mtlx_conditional_ifequal_booleanB);

/**
  * @function mtlx_conditional_switch_float
  * @description Library: mtlx. Category: ifequal. Type: float
  *   LiteGraph id: mtlx/conditional/switch_float
  */
function mtlx_conditional_switch_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_switch_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'switch';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_switch_float_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('in1','float');
  this.addProperty('in1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in3','float');
  this.addProperty('in3', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in4','float');
  this.addProperty('in4', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in5','float');
  this.addProperty('in5', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in6','float');
  this.addProperty('in6', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in7','float');
  this.addProperty('in7', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in8','float');
  this.addProperty('in8', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in9','float');
  this.addProperty('in9', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in10','float');
  this.addProperty('in10', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('which','float');
  this.addProperty('which', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'switch_float';
  this.desc = "MaterialX:mtlx/conditional/switch_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#161';
}
mtlx_conditional_switch_float.nodedef_name = 'ND_switch_float';
mtlx_conditional_switch_float.nodedef_node = 'switch';
mtlx_conditional_switch_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
LiteGraph.registerNodeType('mtlx/conditional/switch_float',mtlx_conditional_switch_float);

/**
  * @function mtlx_conditional_switch_color3
  * @description Library: mtlx. Category: switch. Type: color3
  *   LiteGraph id: mtlx/conditional/switch_color3
  */
function mtlx_conditional_switch_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_switch_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'switch';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_switch_color3_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in3','color3');
  this.addProperty('in3', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in4','color3');
  this.addProperty('in4', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in5','color3');
  this.addProperty('in5', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in6','color3');
  this.addProperty('in6', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in7','color3');
  this.addProperty('in7', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in8','color3');
  this.addProperty('in8', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in9','color3');
  this.addProperty('in9', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in10','color3');
  this.addProperty('in10', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('which','float');
  this.addProperty('which', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'switch_color3';
  this.desc = "MaterialX:mtlx/conditional/switch_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_conditional_switch_color3.nodedef_name = 'ND_switch_color3';
mtlx_conditional_switch_color3.nodedef_node = 'switch';
mtlx_conditional_switch_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
LiteGraph.registerNodeType('mtlx/conditional/switch_color3',mtlx_conditional_switch_color3);

/**
  * @function mtlx_conditional_switch_color4
  * @description Library: mtlx. Category: switch. Type: color4
  *   LiteGraph id: mtlx/conditional/switch_color4
  */
function mtlx_conditional_switch_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_switch_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'switch';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_switch_color4_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in3','color4');
  this.addProperty('in3', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in4','color4');
  this.addProperty('in4', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in5','color4');
  this.addProperty('in5', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in6','color4');
  this.addProperty('in6', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in7','color4');
  this.addProperty('in7', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in8','color4');
  this.addProperty('in8', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in9','color4');
  this.addProperty('in9', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in10','color4');
  this.addProperty('in10', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('which','float');
  this.addProperty('which', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'switch_color4';
  this.desc = "MaterialX:mtlx/conditional/switch_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_conditional_switch_color4.nodedef_name = 'ND_switch_color4';
mtlx_conditional_switch_color4.nodedef_node = 'switch';
mtlx_conditional_switch_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
LiteGraph.registerNodeType('mtlx/conditional/switch_color4',mtlx_conditional_switch_color4);

/**
  * @function mtlx_conditional_switch_vector2
  * @description Library: mtlx. Category: switch. Type: vector2
  *   LiteGraph id: mtlx/conditional/switch_vector2
  */
function mtlx_conditional_switch_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_switch_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'switch';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_switch_vector2_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector2');
  this.addProperty('in2', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in3','vector2');
  this.addProperty('in3', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in4','vector2');
  this.addProperty('in4', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in5','vector2');
  this.addProperty('in5', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in6','vector2');
  this.addProperty('in6', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in7','vector2');
  this.addProperty('in7', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in8','vector2');
  this.addProperty('in8', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in9','vector2');
  this.addProperty('in9', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in10','vector2');
  this.addProperty('in10', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('which','float');
  this.addProperty('which', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'switch_vector2';
  this.desc = "MaterialX:mtlx/conditional/switch_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#265';
}
mtlx_conditional_switch_vector2.nodedef_name = 'ND_switch_vector2';
mtlx_conditional_switch_vector2.nodedef_node = 'switch';
mtlx_conditional_switch_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
LiteGraph.registerNodeType('mtlx/conditional/switch_vector2',mtlx_conditional_switch_vector2);

/**
  * @function mtlx_conditional_switch_vector3
  * @description Library: mtlx. Category: switch. Type: vector3
  *   LiteGraph id: mtlx/conditional/switch_vector3
  */
function mtlx_conditional_switch_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_switch_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'switch';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_switch_vector3_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in3','vector3');
  this.addProperty('in3', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in4','vector3');
  this.addProperty('in4', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in5','vector3');
  this.addProperty('in5', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in6','vector3');
  this.addProperty('in6', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in7','vector3');
  this.addProperty('in7', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in8','vector3');
  this.addProperty('in8', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in9','vector3');
  this.addProperty('in9', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in10','vector3');
  this.addProperty('in10', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('which','float');
  this.addProperty('which', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'switch_vector3';
  this.desc = "MaterialX:mtlx/conditional/switch_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#465';
}
mtlx_conditional_switch_vector3.nodedef_name = 'ND_switch_vector3';
mtlx_conditional_switch_vector3.nodedef_node = 'switch';
mtlx_conditional_switch_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
LiteGraph.registerNodeType('mtlx/conditional/switch_vector3',mtlx_conditional_switch_vector3);

/**
  * @function mtlx_conditional_switch_vector4
  * @description Library: mtlx. Category: switch. Type: vector4
  *   LiteGraph id: mtlx/conditional/switch_vector4
  */
function mtlx_conditional_switch_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_switch_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'switch';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_switch_vector4_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in3','vector4');
  this.addProperty('in3', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in4','vector4');
  this.addProperty('in4', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in5','vector4');
  this.addProperty('in5', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in6','vector4');
  this.addProperty('in6', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in7','vector4');
  this.addProperty('in7', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in8','vector4');
  this.addProperty('in8', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in9','vector4');
  this.addProperty('in9', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in10','vector4');
  this.addProperty('in10', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('which','float');
  this.addProperty('which', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'switch_vector4';
  this.desc = "MaterialX:mtlx/conditional/switch_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#275';
}
mtlx_conditional_switch_vector4.nodedef_name = 'ND_switch_vector4';
mtlx_conditional_switch_vector4.nodedef_node = 'switch';
mtlx_conditional_switch_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
LiteGraph.registerNodeType('mtlx/conditional/switch_vector4',mtlx_conditional_switch_vector4);

/**
  * @function mtlx_conditional_switch_matrix33
  * @description Library: mtlx. Category: switch. Type: matrix33
  *   LiteGraph id: mtlx/conditional/switch_matrix33
  */
function mtlx_conditional_switch_matrix33() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_switch_matrix33';
  this.nodedef_type = 'matrix33';
  this.nodedef_node = 'switch';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_switch_matrix33_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('in1','matrix33');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix33');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in3','matrix33');
  this.addProperty('in3', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in4','matrix33');
  this.addProperty('in4', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in5','matrix33');
  this.addProperty('in5', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in6','matrix33');
  this.addProperty('in6', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in7','matrix33');
  this.addProperty('in7', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in8','matrix33');
  this.addProperty('in8', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in9','matrix33');
  this.addProperty('in9', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in10','matrix33');
  this.addProperty('in10', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('which','float');
  this.addProperty('which', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix33');
  this.title = 'switch_matrix33';
  this.desc = "MaterialX:mtlx/conditional/switch_matrix33";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#333';
}
mtlx_conditional_switch_matrix33.nodedef_name = 'ND_switch_matrix33';
mtlx_conditional_switch_matrix33.nodedef_node = 'switch';
mtlx_conditional_switch_matrix33.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
LiteGraph.registerNodeType('mtlx/conditional/switch_matrix33',mtlx_conditional_switch_matrix33);

/**
  * @function mtlx_conditional_switch_matrix44
  * @description Library: mtlx. Category: switch. Type: matrix44
  *   LiteGraph id: mtlx/conditional/switch_matrix44
  */
function mtlx_conditional_switch_matrix44() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_switch_matrix44';
  this.nodedef_type = 'matrix44';
  this.nodedef_node = 'switch';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_switch_matrix44_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('in1','matrix44');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix44');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in3','matrix44');
  this.addProperty('in3', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in4','matrix44');
  this.addProperty('in4', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in5','matrix44');
  this.addProperty('in5', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in6','matrix44');
  this.addProperty('in6', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in7','matrix44');
  this.addProperty('in7', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in8','matrix44');
  this.addProperty('in8', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in9','matrix44');
  this.addProperty('in9', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in10','matrix44');
  this.addProperty('in10', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('which','float');
  this.addProperty('which', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix44');
  this.title = 'switch_matrix44';
  this.desc = "MaterialX:mtlx/conditional/switch_matrix44";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#444';
}
mtlx_conditional_switch_matrix44.nodedef_name = 'ND_switch_matrix44';
mtlx_conditional_switch_matrix44.nodedef_node = 'switch';
mtlx_conditional_switch_matrix44.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
LiteGraph.registerNodeType('mtlx/conditional/switch_matrix44',mtlx_conditional_switch_matrix44);

/**
  * @function mtlx_conditional_switch_floatI
  * @description Library: mtlx. Category: switch. Type: float
  *   LiteGraph id: mtlx/conditional/switch_floatI
  */
function mtlx_conditional_switch_floatI() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_switch_floatI';
  this.nodedef_type = 'float';
  this.nodedef_node = 'switch';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_switch_floatI_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('in1','float');
  this.addProperty('in1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in3','float');
  this.addProperty('in3', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in4','float');
  this.addProperty('in4', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in5','float');
  this.addProperty('in5', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in6','float');
  this.addProperty('in6', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in7','float');
  this.addProperty('in7', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in8','float');
  this.addProperty('in8', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in9','float');
  this.addProperty('in9', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in10','float');
  this.addProperty('in10', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('which','integer');
  this.addProperty('which', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'switch_float';
  this.desc = "MaterialX:mtlx/conditional/switch_floatI";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#161';
}
mtlx_conditional_switch_floatI.nodedef_name = 'ND_switch_floatI';
mtlx_conditional_switch_floatI.nodedef_node = 'switch';
mtlx_conditional_switch_floatI.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
LiteGraph.registerNodeType('mtlx/conditional/switch_floatI',mtlx_conditional_switch_floatI);

/**
  * @function mtlx_conditional_switch_color3I
  * @description Library: mtlx. Category: switch. Type: color3
  *   LiteGraph id: mtlx/conditional/switch_color3I
  */
function mtlx_conditional_switch_color3I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_switch_color3I';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'switch';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_switch_color3I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in3','color3');
  this.addProperty('in3', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in4','color3');
  this.addProperty('in4', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in5','color3');
  this.addProperty('in5', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in6','color3');
  this.addProperty('in6', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in7','color3');
  this.addProperty('in7', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in8','color3');
  this.addProperty('in8', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in9','color3');
  this.addProperty('in9', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in10','color3');
  this.addProperty('in10', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('which','integer');
  this.addProperty('which', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'switch_color3';
  this.desc = "MaterialX:mtlx/conditional/switch_color3I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_conditional_switch_color3I.nodedef_name = 'ND_switch_color3I';
mtlx_conditional_switch_color3I.nodedef_node = 'switch';
mtlx_conditional_switch_color3I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
LiteGraph.registerNodeType('mtlx/conditional/switch_color3I',mtlx_conditional_switch_color3I);

/**
  * @function mtlx_conditional_switch_color4I
  * @description Library: mtlx. Category: switch. Type: color4
  *   LiteGraph id: mtlx/conditional/switch_color4I
  */
function mtlx_conditional_switch_color4I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_switch_color4I';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'switch';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_switch_color4I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('in1','color4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in3','color4');
  this.addProperty('in3', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in4','color4');
  this.addProperty('in4', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in5','color4');
  this.addProperty('in5', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in6','color4');
  this.addProperty('in6', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in7','color4');
  this.addProperty('in7', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in8','color4');
  this.addProperty('in8', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in9','color4');
  this.addProperty('in9', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in10','color4');
  this.addProperty('in10', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('which','integer');
  this.addProperty('which', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'switch_color4';
  this.desc = "MaterialX:mtlx/conditional/switch_color4I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_conditional_switch_color4I.nodedef_name = 'ND_switch_color4I';
mtlx_conditional_switch_color4I.nodedef_node = 'switch';
mtlx_conditional_switch_color4I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
LiteGraph.registerNodeType('mtlx/conditional/switch_color4I',mtlx_conditional_switch_color4I);

/**
  * @function mtlx_conditional_switch_vector2I
  * @description Library: mtlx. Category: switch. Type: vector2
  *   LiteGraph id: mtlx/conditional/switch_vector2I
  */
function mtlx_conditional_switch_vector2I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_switch_vector2I';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'switch';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_switch_vector2I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector2');
  this.addProperty('in2', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in3','vector2');
  this.addProperty('in3', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in4','vector2');
  this.addProperty('in4', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in5','vector2');
  this.addProperty('in5', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in6','vector2');
  this.addProperty('in6', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in7','vector2');
  this.addProperty('in7', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in8','vector2');
  this.addProperty('in8', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in9','vector2');
  this.addProperty('in9', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in10','vector2');
  this.addProperty('in10', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('which','integer');
  this.addProperty('which', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'switch_vector2';
  this.desc = "MaterialX:mtlx/conditional/switch_vector2I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#265';
}
mtlx_conditional_switch_vector2I.nodedef_name = 'ND_switch_vector2I';
mtlx_conditional_switch_vector2I.nodedef_node = 'switch';
mtlx_conditional_switch_vector2I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
LiteGraph.registerNodeType('mtlx/conditional/switch_vector2I',mtlx_conditional_switch_vector2I);

/**
  * @function mtlx_conditional_switch_vector3I
  * @description Library: mtlx. Category: switch. Type: vector3
  *   LiteGraph id: mtlx/conditional/switch_vector3I
  */
function mtlx_conditional_switch_vector3I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_switch_vector3I';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'switch';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_switch_vector3I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector3');
  this.addProperty('in2', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in3','vector3');
  this.addProperty('in3', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in4','vector3');
  this.addProperty('in4', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in5','vector3');
  this.addProperty('in5', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in6','vector3');
  this.addProperty('in6', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in7','vector3');
  this.addProperty('in7', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in8','vector3');
  this.addProperty('in8', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in9','vector3');
  this.addProperty('in9', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in10','vector3');
  this.addProperty('in10', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('which','integer');
  this.addProperty('which', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'switch_vector3';
  this.desc = "MaterialX:mtlx/conditional/switch_vector3I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#465';
}
mtlx_conditional_switch_vector3I.nodedef_name = 'ND_switch_vector3I';
mtlx_conditional_switch_vector3I.nodedef_node = 'switch';
mtlx_conditional_switch_vector3I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
LiteGraph.registerNodeType('mtlx/conditional/switch_vector3I',mtlx_conditional_switch_vector3I);

/**
  * @function mtlx_conditional_switch_vector4I
  * @description Library: mtlx. Category: switch. Type: vector4
  *   LiteGraph id: mtlx/conditional/switch_vector4I
  */
function mtlx_conditional_switch_vector4I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_switch_vector4I';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'switch';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_switch_vector4I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('in1','vector4');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector4');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in3','vector4');
  this.addProperty('in3', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in4','vector4');
  this.addProperty('in4', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in5','vector4');
  this.addProperty('in5', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in6','vector4');
  this.addProperty('in6', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in7','vector4');
  this.addProperty('in7', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in8','vector4');
  this.addProperty('in8', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in9','vector4');
  this.addProperty('in9', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in10','vector4');
  this.addProperty('in10', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('which','integer');
  this.addProperty('which', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'switch_vector4';
  this.desc = "MaterialX:mtlx/conditional/switch_vector4I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#275';
}
mtlx_conditional_switch_vector4I.nodedef_name = 'ND_switch_vector4I';
mtlx_conditional_switch_vector4I.nodedef_node = 'switch';
mtlx_conditional_switch_vector4I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
LiteGraph.registerNodeType('mtlx/conditional/switch_vector4I',mtlx_conditional_switch_vector4I);

/**
  * @function mtlx_conditional_switch_matrix33I
  * @description Library: mtlx. Category: switch. Type: matrix33
  *   LiteGraph id: mtlx/conditional/switch_matrix33I
  */
function mtlx_conditional_switch_matrix33I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_switch_matrix33I';
  this.nodedef_type = 'matrix33';
  this.nodedef_node = 'switch';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_switch_matrix33I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('in1','matrix33');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix33');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in3','matrix33');
  this.addProperty('in3', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in4','matrix33');
  this.addProperty('in4', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in5','matrix33');
  this.addProperty('in5', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in6','matrix33');
  this.addProperty('in6', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in7','matrix33');
  this.addProperty('in7', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in8','matrix33');
  this.addProperty('in8', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in9','matrix33');
  this.addProperty('in9', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in10','matrix33');
  this.addProperty('in10', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('which','integer');
  this.addProperty('which', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix33');
  this.title = 'switch_matrix33';
  this.desc = "MaterialX:mtlx/conditional/switch_matrix33I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#333';
}
mtlx_conditional_switch_matrix33I.nodedef_name = 'ND_switch_matrix33I';
mtlx_conditional_switch_matrix33I.nodedef_node = 'switch';
mtlx_conditional_switch_matrix33I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
LiteGraph.registerNodeType('mtlx/conditional/switch_matrix33I',mtlx_conditional_switch_matrix33I);

/**
  * @function mtlx_conditional_switch_matrix44I
  * @description Library: mtlx. Category: switch. Type: matrix44
  *   LiteGraph id: mtlx/conditional/switch_matrix44I
  */
function mtlx_conditional_switch_matrix44I() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_switch_matrix44I';
  this.nodedef_type = 'matrix44';
  this.nodedef_node = 'switch';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_switch_matrix44I_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('in1','matrix44');
  this.addProperty('in1', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','matrix44');
  this.addProperty('in2', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in3','matrix44');
  this.addProperty('in3', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in4','matrix44');
  this.addProperty('in4', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in5','matrix44');
  this.addProperty('in5', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in6','matrix44');
  this.addProperty('in6', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in7','matrix44');
  this.addProperty('in7', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in8','matrix44');
  this.addProperty('in8', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in9','matrix44');
  this.addProperty('in9', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in10','matrix44');
  this.addProperty('in10', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('which','integer');
  this.addProperty('which', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix44');
  this.title = 'switch_matrix44';
  this.desc = "MaterialX:mtlx/conditional/switch_matrix44I";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#444';
}
mtlx_conditional_switch_matrix44I.nodedef_name = 'ND_switch_matrix44I';
mtlx_conditional_switch_matrix44I.nodedef_node = 'switch';
mtlx_conditional_switch_matrix44I.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/switch.html';
LiteGraph.registerNodeType('mtlx/conditional/switch_matrix44I',mtlx_conditional_switch_matrix44I);

/**
  * @function mtlx_channel_convert_float_color3
  * @description Library: mtlx. Category: switch. Type: color3
  *   LiteGraph id: mtlx/channel/convert_float_color3
  */
function mtlx_channel_convert_float_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_float_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_float_color3_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'convert_color3';
  this.desc = "MaterialX:mtlx/channel/convert_float_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_channel_convert_float_color3.nodedef_name = 'ND_convert_float_color3';
mtlx_channel_convert_float_color3.nodedef_node = 'convert';
mtlx_channel_convert_float_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_float_color3',mtlx_channel_convert_float_color3);

/**
  * @function mtlx_channel_convert_float_color4
  * @description Library: mtlx. Category: convert. Type: color4
  *   LiteGraph id: mtlx/channel/convert_float_color4
  */
function mtlx_channel_convert_float_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_float_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_float_color4_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'convert_color4';
  this.desc = "MaterialX:mtlx/channel/convert_float_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_channel_convert_float_color4.nodedef_name = 'ND_convert_float_color4';
mtlx_channel_convert_float_color4.nodedef_node = 'convert';
mtlx_channel_convert_float_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_float_color4',mtlx_channel_convert_float_color4);

/**
  * @function mtlx_channel_convert_float_vector2
  * @description Library: mtlx. Category: convert. Type: vector2
  *   LiteGraph id: mtlx/channel/convert_float_vector2
  */
function mtlx_channel_convert_float_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_float_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_float_vector2_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'convert_vector2';
  this.desc = "MaterialX:mtlx/channel/convert_float_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_channel_convert_float_vector2.nodedef_name = 'ND_convert_float_vector2';
mtlx_channel_convert_float_vector2.nodedef_node = 'convert';
mtlx_channel_convert_float_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_float_vector2',mtlx_channel_convert_float_vector2);

/**
  * @function mtlx_channel_convert_float_vector3
  * @description Library: mtlx. Category: convert. Type: vector3
  *   LiteGraph id: mtlx/channel/convert_float_vector3
  */
function mtlx_channel_convert_float_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_float_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_float_vector3_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'convert_vector3';
  this.desc = "MaterialX:mtlx/channel/convert_float_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_channel_convert_float_vector3.nodedef_name = 'ND_convert_float_vector3';
mtlx_channel_convert_float_vector3.nodedef_node = 'convert';
mtlx_channel_convert_float_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_float_vector3',mtlx_channel_convert_float_vector3);

/**
  * @function mtlx_channel_convert_float_vector4
  * @description Library: mtlx. Category: convert. Type: vector4
  *   LiteGraph id: mtlx/channel/convert_float_vector4
  */
function mtlx_channel_convert_float_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_float_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_float_vector4_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'convert_vector4';
  this.desc = "MaterialX:mtlx/channel/convert_float_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_channel_convert_float_vector4.nodedef_name = 'ND_convert_float_vector4';
mtlx_channel_convert_float_vector4.nodedef_node = 'convert';
mtlx_channel_convert_float_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_float_vector4',mtlx_channel_convert_float_vector4);

/**
  * @function mtlx_channel_convert_color3_color4
  * @description Library: mtlx. Category: convert. Type: color4
  *   LiteGraph id: mtlx/channel/convert_color3_color4
  */
function mtlx_channel_convert_color3_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_color3_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_color3_color4_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'convert_color4';
  this.desc = "MaterialX:mtlx/channel/convert_color3_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_channel_convert_color3_color4.nodedef_name = 'ND_convert_color3_color4';
mtlx_channel_convert_color3_color4.nodedef_node = 'convert';
mtlx_channel_convert_color3_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_color3_color4',mtlx_channel_convert_color3_color4);

/**
  * @function mtlx_channel_convert_color3_vector2
  * @description Library: mtlx. Category: convert. Type: vector2
  *   LiteGraph id: mtlx/channel/convert_color3_vector2
  */
function mtlx_channel_convert_color3_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_color3_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_color3_vector2_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'convert_vector2';
  this.desc = "MaterialX:mtlx/channel/convert_color3_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_channel_convert_color3_vector2.nodedef_name = 'ND_convert_color3_vector2';
mtlx_channel_convert_color3_vector2.nodedef_node = 'convert';
mtlx_channel_convert_color3_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_color3_vector2',mtlx_channel_convert_color3_vector2);

/**
  * @function mtlx_channel_convert_color3_vector3
  * @description Library: mtlx. Category: convert. Type: vector3
  *   LiteGraph id: mtlx/channel/convert_color3_vector3
  */
function mtlx_channel_convert_color3_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_color3_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_color3_vector3_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'convert_vector3';
  this.desc = "MaterialX:mtlx/channel/convert_color3_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_channel_convert_color3_vector3.nodedef_name = 'ND_convert_color3_vector3';
mtlx_channel_convert_color3_vector3.nodedef_node = 'convert';
mtlx_channel_convert_color3_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_color3_vector3',mtlx_channel_convert_color3_vector3);

/**
  * @function mtlx_channel_convert_color3_vector4
  * @description Library: mtlx. Category: convert. Type: vector4
  *   LiteGraph id: mtlx/channel/convert_color3_vector4
  */
function mtlx_channel_convert_color3_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_color3_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_color3_vector4_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'convert_vector4';
  this.desc = "MaterialX:mtlx/channel/convert_color3_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_channel_convert_color3_vector4.nodedef_name = 'ND_convert_color3_vector4';
mtlx_channel_convert_color3_vector4.nodedef_node = 'convert';
mtlx_channel_convert_color3_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_color3_vector4',mtlx_channel_convert_color3_vector4);

/**
  * @function mtlx_channel_convert_color4_color3
  * @description Library: mtlx. Category: convert. Type: color3
  *   LiteGraph id: mtlx/channel/convert_color4_color3
  */
function mtlx_channel_convert_color4_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_color4_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_color4_color3_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'convert_color3';
  this.desc = "MaterialX:mtlx/channel/convert_color4_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_channel_convert_color4_color3.nodedef_name = 'ND_convert_color4_color3';
mtlx_channel_convert_color4_color3.nodedef_node = 'convert';
mtlx_channel_convert_color4_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_color4_color3',mtlx_channel_convert_color4_color3);

/**
  * @function mtlx_channel_convert_color4_vector2
  * @description Library: mtlx. Category: convert. Type: vector2
  *   LiteGraph id: mtlx/channel/convert_color4_vector2
  */
function mtlx_channel_convert_color4_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_color4_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_color4_vector2_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'convert_vector2';
  this.desc = "MaterialX:mtlx/channel/convert_color4_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_channel_convert_color4_vector2.nodedef_name = 'ND_convert_color4_vector2';
mtlx_channel_convert_color4_vector2.nodedef_node = 'convert';
mtlx_channel_convert_color4_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_color4_vector2',mtlx_channel_convert_color4_vector2);

/**
  * @function mtlx_channel_convert_color4_vector3
  * @description Library: mtlx. Category: convert. Type: vector3
  *   LiteGraph id: mtlx/channel/convert_color4_vector3
  */
function mtlx_channel_convert_color4_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_color4_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_color4_vector3_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'convert_vector3';
  this.desc = "MaterialX:mtlx/channel/convert_color4_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_channel_convert_color4_vector3.nodedef_name = 'ND_convert_color4_vector3';
mtlx_channel_convert_color4_vector3.nodedef_node = 'convert';
mtlx_channel_convert_color4_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_color4_vector3',mtlx_channel_convert_color4_vector3);

/**
  * @function mtlx_channel_convert_color4_vector4
  * @description Library: mtlx. Category: convert. Type: vector4
  *   LiteGraph id: mtlx/channel/convert_color4_vector4
  */
function mtlx_channel_convert_color4_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_color4_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_color4_vector4_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'convert_vector4';
  this.desc = "MaterialX:mtlx/channel/convert_color4_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_channel_convert_color4_vector4.nodedef_name = 'ND_convert_color4_vector4';
mtlx_channel_convert_color4_vector4.nodedef_node = 'convert';
mtlx_channel_convert_color4_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_color4_vector4',mtlx_channel_convert_color4_vector4);

/**
  * @function mtlx_channel_convert_vector2_color3
  * @description Library: mtlx. Category: convert. Type: color3
  *   LiteGraph id: mtlx/channel/convert_vector2_color3
  */
function mtlx_channel_convert_vector2_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_vector2_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_vector2_color3_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'convert_color3';
  this.desc = "MaterialX:mtlx/channel/convert_vector2_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_channel_convert_vector2_color3.nodedef_name = 'ND_convert_vector2_color3';
mtlx_channel_convert_vector2_color3.nodedef_node = 'convert';
mtlx_channel_convert_vector2_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_vector2_color3',mtlx_channel_convert_vector2_color3);

/**
  * @function mtlx_channel_convert_vector2_color4
  * @description Library: mtlx. Category: convert. Type: color4
  *   LiteGraph id: mtlx/channel/convert_vector2_color4
  */
function mtlx_channel_convert_vector2_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_vector2_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_vector2_color4_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'convert_color4';
  this.desc = "MaterialX:mtlx/channel/convert_vector2_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_channel_convert_vector2_color4.nodedef_name = 'ND_convert_vector2_color4';
mtlx_channel_convert_vector2_color4.nodedef_node = 'convert';
mtlx_channel_convert_vector2_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_vector2_color4',mtlx_channel_convert_vector2_color4);

/**
  * @function mtlx_channel_convert_vector2_vector3
  * @description Library: mtlx. Category: convert. Type: vector3
  *   LiteGraph id: mtlx/channel/convert_vector2_vector3
  */
function mtlx_channel_convert_vector2_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_vector2_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_vector2_vector3_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'convert_vector3';
  this.desc = "MaterialX:mtlx/channel/convert_vector2_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_channel_convert_vector2_vector3.nodedef_name = 'ND_convert_vector2_vector3';
mtlx_channel_convert_vector2_vector3.nodedef_node = 'convert';
mtlx_channel_convert_vector2_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_vector2_vector3',mtlx_channel_convert_vector2_vector3);

/**
  * @function mtlx_channel_convert_vector2_vector4
  * @description Library: mtlx. Category: convert. Type: vector4
  *   LiteGraph id: mtlx/channel/convert_vector2_vector4
  */
function mtlx_channel_convert_vector2_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_vector2_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_vector2_vector4_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'convert_vector4';
  this.desc = "MaterialX:mtlx/channel/convert_vector2_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_channel_convert_vector2_vector4.nodedef_name = 'ND_convert_vector2_vector4';
mtlx_channel_convert_vector2_vector4.nodedef_node = 'convert';
mtlx_channel_convert_vector2_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_vector2_vector4',mtlx_channel_convert_vector2_vector4);

/**
  * @function mtlx_channel_convert_vector3_color3
  * @description Library: mtlx. Category: convert. Type: color3
  *   LiteGraph id: mtlx/channel/convert_vector3_color3
  */
function mtlx_channel_convert_vector3_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_vector3_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_vector3_color3_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'convert_color3';
  this.desc = "MaterialX:mtlx/channel/convert_vector3_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_channel_convert_vector3_color3.nodedef_name = 'ND_convert_vector3_color3';
mtlx_channel_convert_vector3_color3.nodedef_node = 'convert';
mtlx_channel_convert_vector3_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_vector3_color3',mtlx_channel_convert_vector3_color3);

/**
  * @function mtlx_channel_convert_vector3_color4
  * @description Library: mtlx. Category: convert. Type: color4
  *   LiteGraph id: mtlx/channel/convert_vector3_color4
  */
function mtlx_channel_convert_vector3_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_vector3_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_vector3_color4_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'convert_color4';
  this.desc = "MaterialX:mtlx/channel/convert_vector3_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_channel_convert_vector3_color4.nodedef_name = 'ND_convert_vector3_color4';
mtlx_channel_convert_vector3_color4.nodedef_node = 'convert';
mtlx_channel_convert_vector3_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_vector3_color4',mtlx_channel_convert_vector3_color4);

/**
  * @function mtlx_channel_convert_vector3_vector2
  * @description Library: mtlx. Category: convert. Type: vector2
  *   LiteGraph id: mtlx/channel/convert_vector3_vector2
  */
function mtlx_channel_convert_vector3_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_vector3_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_vector3_vector2_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'convert_vector2';
  this.desc = "MaterialX:mtlx/channel/convert_vector3_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_channel_convert_vector3_vector2.nodedef_name = 'ND_convert_vector3_vector2';
mtlx_channel_convert_vector3_vector2.nodedef_node = 'convert';
mtlx_channel_convert_vector3_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_vector3_vector2',mtlx_channel_convert_vector3_vector2);

/**
  * @function mtlx_channel_convert_vector3_vector4
  * @description Library: mtlx. Category: convert. Type: vector4
  *   LiteGraph id: mtlx/channel/convert_vector3_vector4
  */
function mtlx_channel_convert_vector3_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_vector3_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_vector3_vector4_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'convert_vector4';
  this.desc = "MaterialX:mtlx/channel/convert_vector3_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_channel_convert_vector3_vector4.nodedef_name = 'ND_convert_vector3_vector4';
mtlx_channel_convert_vector3_vector4.nodedef_node = 'convert';
mtlx_channel_convert_vector3_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_vector3_vector4',mtlx_channel_convert_vector3_vector4);

/**
  * @function mtlx_channel_convert_vector4_color3
  * @description Library: mtlx. Category: convert. Type: color3
  *   LiteGraph id: mtlx/channel/convert_vector4_color3
  */
function mtlx_channel_convert_vector4_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_vector4_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_vector4_color3_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'convert_color3';
  this.desc = "MaterialX:mtlx/channel/convert_vector4_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_channel_convert_vector4_color3.nodedef_name = 'ND_convert_vector4_color3';
mtlx_channel_convert_vector4_color3.nodedef_node = 'convert';
mtlx_channel_convert_vector4_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_vector4_color3',mtlx_channel_convert_vector4_color3);

/**
  * @function mtlx_channel_convert_vector4_color4
  * @description Library: mtlx. Category: convert. Type: color4
  *   LiteGraph id: mtlx/channel/convert_vector4_color4
  */
function mtlx_channel_convert_vector4_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_vector4_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_vector4_color4_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'convert_color4';
  this.desc = "MaterialX:mtlx/channel/convert_vector4_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_channel_convert_vector4_color4.nodedef_name = 'ND_convert_vector4_color4';
mtlx_channel_convert_vector4_color4.nodedef_node = 'convert';
mtlx_channel_convert_vector4_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_vector4_color4',mtlx_channel_convert_vector4_color4);

/**
  * @function mtlx_channel_convert_vector4_vector2
  * @description Library: mtlx. Category: convert. Type: vector2
  *   LiteGraph id: mtlx/channel/convert_vector4_vector2
  */
function mtlx_channel_convert_vector4_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_vector4_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_vector4_vector2_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'convert_vector2';
  this.desc = "MaterialX:mtlx/channel/convert_vector4_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_channel_convert_vector4_vector2.nodedef_name = 'ND_convert_vector4_vector2';
mtlx_channel_convert_vector4_vector2.nodedef_node = 'convert';
mtlx_channel_convert_vector4_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_vector4_vector2',mtlx_channel_convert_vector4_vector2);

/**
  * @function mtlx_channel_convert_vector4_vector3
  * @description Library: mtlx. Category: convert. Type: vector3
  *   LiteGraph id: mtlx/channel/convert_vector4_vector3
  */
function mtlx_channel_convert_vector4_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_vector4_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_vector4_vector3_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'convert_vector3';
  this.desc = "MaterialX:mtlx/channel/convert_vector4_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_channel_convert_vector4_vector3.nodedef_name = 'ND_convert_vector4_vector3';
mtlx_channel_convert_vector4_vector3.nodedef_node = 'convert';
mtlx_channel_convert_vector4_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_vector4_vector3',mtlx_channel_convert_vector4_vector3);

/**
  * @function mtlx_channel_convert_boolean_float
  * @description Library: mtlx. Category: convert. Type: float
  *   LiteGraph id: mtlx/channel/convert_boolean_float
  */
function mtlx_channel_convert_boolean_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_boolean_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_boolean_float_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','boolean');
  this.addProperty('in', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'convert_float';
  this.desc = "MaterialX:mtlx/channel/convert_boolean_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_channel_convert_boolean_float.nodedef_name = 'ND_convert_boolean_float';
mtlx_channel_convert_boolean_float.nodedef_node = 'convert';
mtlx_channel_convert_boolean_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_boolean_float',mtlx_channel_convert_boolean_float);

/**
  * @function mtlx_channel_convert_boolean_color3
  * @description Library: mtlx. Category: convert. Type: color3
  *   LiteGraph id: mtlx/channel/convert_boolean_color3
  */
function mtlx_channel_convert_boolean_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_boolean_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_boolean_color3_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','boolean');
  this.addProperty('in', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'convert_color3';
  this.desc = "MaterialX:mtlx/channel/convert_boolean_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_channel_convert_boolean_color3.nodedef_name = 'ND_convert_boolean_color3';
mtlx_channel_convert_boolean_color3.nodedef_node = 'convert';
mtlx_channel_convert_boolean_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_boolean_color3',mtlx_channel_convert_boolean_color3);

/**
  * @function mtlx_channel_convert_boolean_color4
  * @description Library: mtlx. Category: convert. Type: color4
  *   LiteGraph id: mtlx/channel/convert_boolean_color4
  */
function mtlx_channel_convert_boolean_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_boolean_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_boolean_color4_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','boolean');
  this.addProperty('in', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'convert_color4';
  this.desc = "MaterialX:mtlx/channel/convert_boolean_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_channel_convert_boolean_color4.nodedef_name = 'ND_convert_boolean_color4';
mtlx_channel_convert_boolean_color4.nodedef_node = 'convert';
mtlx_channel_convert_boolean_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_boolean_color4',mtlx_channel_convert_boolean_color4);

/**
  * @function mtlx_channel_convert_boolean_vector2
  * @description Library: mtlx. Category: convert. Type: vector2
  *   LiteGraph id: mtlx/channel/convert_boolean_vector2
  */
function mtlx_channel_convert_boolean_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_boolean_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_boolean_vector2_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','boolean');
  this.addProperty('in', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'convert_vector2';
  this.desc = "MaterialX:mtlx/channel/convert_boolean_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_channel_convert_boolean_vector2.nodedef_name = 'ND_convert_boolean_vector2';
mtlx_channel_convert_boolean_vector2.nodedef_node = 'convert';
mtlx_channel_convert_boolean_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_boolean_vector2',mtlx_channel_convert_boolean_vector2);

/**
  * @function mtlx_channel_convert_boolean_vector3
  * @description Library: mtlx. Category: convert. Type: vector3
  *   LiteGraph id: mtlx/channel/convert_boolean_vector3
  */
function mtlx_channel_convert_boolean_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_boolean_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_boolean_vector3_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','boolean');
  this.addProperty('in', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'convert_vector3';
  this.desc = "MaterialX:mtlx/channel/convert_boolean_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_channel_convert_boolean_vector3.nodedef_name = 'ND_convert_boolean_vector3';
mtlx_channel_convert_boolean_vector3.nodedef_node = 'convert';
mtlx_channel_convert_boolean_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_boolean_vector3',mtlx_channel_convert_boolean_vector3);

/**
  * @function mtlx_channel_convert_boolean_vector4
  * @description Library: mtlx. Category: convert. Type: vector4
  *   LiteGraph id: mtlx/channel/convert_boolean_vector4
  */
function mtlx_channel_convert_boolean_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_boolean_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_boolean_vector4_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','boolean');
  this.addProperty('in', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'convert_vector4';
  this.desc = "MaterialX:mtlx/channel/convert_boolean_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_channel_convert_boolean_vector4.nodedef_name = 'ND_convert_boolean_vector4';
mtlx_channel_convert_boolean_vector4.nodedef_node = 'convert';
mtlx_channel_convert_boolean_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_boolean_vector4',mtlx_channel_convert_boolean_vector4);

/**
  * @function mtlx_channel_convert_boolean_integer
  * @description Library: mtlx. Category: convert. Type: integer
  *   LiteGraph id: mtlx/channel/convert_boolean_integer
  */
function mtlx_channel_convert_boolean_integer() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_boolean_integer';
  this.nodedef_type = 'integer';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_boolean_integer_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','boolean');
  this.addProperty('in', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','integer');
  this.title = 'convert_integer';
  this.desc = "MaterialX:mtlx/channel/convert_boolean_integer";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#A32';
}
mtlx_channel_convert_boolean_integer.nodedef_name = 'ND_convert_boolean_integer';
mtlx_channel_convert_boolean_integer.nodedef_node = 'convert';
mtlx_channel_convert_boolean_integer.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_boolean_integer',mtlx_channel_convert_boolean_integer);

/**
  * @function mtlx_channel_convert_integer_float
  * @description Library: mtlx. Category: convert. Type: float
  *   LiteGraph id: mtlx/channel/convert_integer_float
  */
function mtlx_channel_convert_integer_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_integer_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_integer_float_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','integer');
  this.addProperty('in', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'convert_float';
  this.desc = "MaterialX:mtlx/channel/convert_integer_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_channel_convert_integer_float.nodedef_name = 'ND_convert_integer_float';
mtlx_channel_convert_integer_float.nodedef_node = 'convert';
mtlx_channel_convert_integer_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_integer_float',mtlx_channel_convert_integer_float);

/**
  * @function mtlx_channel_convert_integer_color3
  * @description Library: mtlx. Category: convert. Type: color3
  *   LiteGraph id: mtlx/channel/convert_integer_color3
  */
function mtlx_channel_convert_integer_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_integer_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_integer_color3_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','integer');
  this.addProperty('in', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'convert_color3';
  this.desc = "MaterialX:mtlx/channel/convert_integer_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_channel_convert_integer_color3.nodedef_name = 'ND_convert_integer_color3';
mtlx_channel_convert_integer_color3.nodedef_node = 'convert';
mtlx_channel_convert_integer_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_integer_color3',mtlx_channel_convert_integer_color3);

/**
  * @function mtlx_channel_convert_integer_color4
  * @description Library: mtlx. Category: convert. Type: color4
  *   LiteGraph id: mtlx/channel/convert_integer_color4
  */
function mtlx_channel_convert_integer_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_integer_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_integer_color4_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','integer');
  this.addProperty('in', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'convert_color4';
  this.desc = "MaterialX:mtlx/channel/convert_integer_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_channel_convert_integer_color4.nodedef_name = 'ND_convert_integer_color4';
mtlx_channel_convert_integer_color4.nodedef_node = 'convert';
mtlx_channel_convert_integer_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_integer_color4',mtlx_channel_convert_integer_color4);

/**
  * @function mtlx_channel_convert_integer_vector2
  * @description Library: mtlx. Category: convert. Type: vector2
  *   LiteGraph id: mtlx/channel/convert_integer_vector2
  */
function mtlx_channel_convert_integer_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_integer_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_integer_vector2_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','integer');
  this.addProperty('in', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'convert_vector2';
  this.desc = "MaterialX:mtlx/channel/convert_integer_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_channel_convert_integer_vector2.nodedef_name = 'ND_convert_integer_vector2';
mtlx_channel_convert_integer_vector2.nodedef_node = 'convert';
mtlx_channel_convert_integer_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_integer_vector2',mtlx_channel_convert_integer_vector2);

/**
  * @function mtlx_channel_convert_integer_vector3
  * @description Library: mtlx. Category: convert. Type: vector3
  *   LiteGraph id: mtlx/channel/convert_integer_vector3
  */
function mtlx_channel_convert_integer_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_integer_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_integer_vector3_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','integer');
  this.addProperty('in', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'convert_vector3';
  this.desc = "MaterialX:mtlx/channel/convert_integer_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_channel_convert_integer_vector3.nodedef_name = 'ND_convert_integer_vector3';
mtlx_channel_convert_integer_vector3.nodedef_node = 'convert';
mtlx_channel_convert_integer_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_integer_vector3',mtlx_channel_convert_integer_vector3);

/**
  * @function mtlx_channel_convert_integer_vector4
  * @description Library: mtlx. Category: convert. Type: vector4
  *   LiteGraph id: mtlx/channel/convert_integer_vector4
  */
function mtlx_channel_convert_integer_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_integer_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_integer_vector4_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','integer');
  this.addProperty('in', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'convert_vector4';
  this.desc = "MaterialX:mtlx/channel/convert_integer_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_channel_convert_integer_vector4.nodedef_name = 'ND_convert_integer_vector4';
mtlx_channel_convert_integer_vector4.nodedef_node = 'convert';
mtlx_channel_convert_integer_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_integer_vector4',mtlx_channel_convert_integer_vector4);

/**
  * @function mtlx_channel_convert_integer_boolean
  * @description Library: mtlx. Category: convert. Type: boolean
  *   LiteGraph id: mtlx/channel/convert_integer_boolean
  */
function mtlx_channel_convert_integer_boolean() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_integer_boolean';
  this.nodedef_type = 'boolean';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_integer_boolean_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','integer');
  this.addProperty('in', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','boolean');
  this.title = 'convert_boolean';
  this.desc = "MaterialX:mtlx/channel/convert_integer_boolean";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#060';
}
mtlx_channel_convert_integer_boolean.nodedef_name = 'ND_convert_integer_boolean';
mtlx_channel_convert_integer_boolean.nodedef_node = 'convert';
mtlx_channel_convert_integer_boolean.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/channel/convert_integer_boolean',mtlx_channel_convert_integer_boolean);

/**
  * @function mtlx_shader_convert_color3_surfaceshader
  * @description Library: mtlx. Category: convert. Type: surfaceshader
  *   LiteGraph id: mtlx/shader/convert_color3_surfaceshader
  */
function mtlx_shader_convert_color3_surfaceshader() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_color3_surfaceshader';
  this.nodedef_type = 'surfaceshader';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_color3_surfaceshader_out_genglsl.png';
  this.nodedef_group = 'shader';
  this.addInput('in','color3');
  this.addProperty('in', [0, 0, 0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','surfaceshader');
  this.title = 'convert_surfaceshader';
  this.desc = "MaterialX:mtlx/shader/convert_color3_surfaceshader";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_shader_convert_color3_surfaceshader.nodedef_name = 'ND_convert_color3_surfaceshader';
mtlx_shader_convert_color3_surfaceshader.nodedef_node = 'convert';
mtlx_shader_convert_color3_surfaceshader.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/shader/convert_color3_surfaceshader',mtlx_shader_convert_color3_surfaceshader);

/**
  * @function mtlx_shader_convert_color4_surfaceshader
  * @description Library: mtlx. Category: convert. Type: surfaceshader
  *   LiteGraph id: mtlx/shader/convert_color4_surfaceshader
  */
function mtlx_shader_convert_color4_surfaceshader() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_color4_surfaceshader';
  this.nodedef_type = 'surfaceshader';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_color4_surfaceshader_out_genglsl.png';
  this.nodedef_group = 'shader';
  this.addInput('in','color4');
  this.addProperty('in', [0, 0, 0, 0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','surfaceshader');
  this.title = 'convert_surfaceshader';
  this.desc = "MaterialX:mtlx/shader/convert_color4_surfaceshader";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_shader_convert_color4_surfaceshader.nodedef_name = 'ND_convert_color4_surfaceshader';
mtlx_shader_convert_color4_surfaceshader.nodedef_node = 'convert';
mtlx_shader_convert_color4_surfaceshader.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/shader/convert_color4_surfaceshader',mtlx_shader_convert_color4_surfaceshader);

/**
  * @function mtlx_shader_convert_float_surfaceshader
  * @description Library: mtlx. Category: convert. Type: surfaceshader
  *   LiteGraph id: mtlx/shader/convert_float_surfaceshader
  */
function mtlx_shader_convert_float_surfaceshader() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_float_surfaceshader';
  this.nodedef_type = 'surfaceshader';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_float_surfaceshader_out_genglsl.png';
  this.nodedef_group = 'shader';
  this.addInput('in','float');
  this.addProperty('in', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','surfaceshader');
  this.title = 'convert_surfaceshader';
  this.desc = "MaterialX:mtlx/shader/convert_float_surfaceshader";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_shader_convert_float_surfaceshader.nodedef_name = 'ND_convert_float_surfaceshader';
mtlx_shader_convert_float_surfaceshader.nodedef_node = 'convert';
mtlx_shader_convert_float_surfaceshader.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/shader/convert_float_surfaceshader',mtlx_shader_convert_float_surfaceshader);

/**
  * @function mtlx_shader_convert_vector2_surfaceshader
  * @description Library: mtlx. Category: convert. Type: surfaceshader
  *   LiteGraph id: mtlx/shader/convert_vector2_surfaceshader
  */
function mtlx_shader_convert_vector2_surfaceshader() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_vector2_surfaceshader';
  this.nodedef_type = 'surfaceshader';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_vector2_surfaceshader_out_genglsl.png';
  this.nodedef_group = 'shader';
  this.addInput('in','vector2');
  this.addProperty('in', [0, 0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','surfaceshader');
  this.title = 'convert_surfaceshader';
  this.desc = "MaterialX:mtlx/shader/convert_vector2_surfaceshader";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_shader_convert_vector2_surfaceshader.nodedef_name = 'ND_convert_vector2_surfaceshader';
mtlx_shader_convert_vector2_surfaceshader.nodedef_node = 'convert';
mtlx_shader_convert_vector2_surfaceshader.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/shader/convert_vector2_surfaceshader',mtlx_shader_convert_vector2_surfaceshader);

/**
  * @function mtlx_shader_convert_vector3_surfaceshader
  * @description Library: mtlx. Category: convert. Type: surfaceshader
  *   LiteGraph id: mtlx/shader/convert_vector3_surfaceshader
  */
function mtlx_shader_convert_vector3_surfaceshader() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_vector3_surfaceshader';
  this.nodedef_type = 'surfaceshader';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_vector3_surfaceshader_out_genglsl.png';
  this.nodedef_group = 'shader';
  this.addInput('in','vector3');
  this.addProperty('in', [0, 0, 0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','surfaceshader');
  this.title = 'convert_surfaceshader';
  this.desc = "MaterialX:mtlx/shader/convert_vector3_surfaceshader";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_shader_convert_vector3_surfaceshader.nodedef_name = 'ND_convert_vector3_surfaceshader';
mtlx_shader_convert_vector3_surfaceshader.nodedef_node = 'convert';
mtlx_shader_convert_vector3_surfaceshader.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/shader/convert_vector3_surfaceshader',mtlx_shader_convert_vector3_surfaceshader);

/**
  * @function mtlx_shader_convert_vector4_surfaceshader
  * @description Library: mtlx. Category: convert. Type: surfaceshader
  *   LiteGraph id: mtlx/shader/convert_vector4_surfaceshader
  */
function mtlx_shader_convert_vector4_surfaceshader() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_vector4_surfaceshader';
  this.nodedef_type = 'surfaceshader';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_vector4_surfaceshader_out_genglsl.png';
  this.nodedef_group = 'shader';
  this.addInput('in','vector4');
  this.addProperty('in', [0, 0, 0, 0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','surfaceshader');
  this.title = 'convert_surfaceshader';
  this.desc = "MaterialX:mtlx/shader/convert_vector4_surfaceshader";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_shader_convert_vector4_surfaceshader.nodedef_name = 'ND_convert_vector4_surfaceshader';
mtlx_shader_convert_vector4_surfaceshader.nodedef_node = 'convert';
mtlx_shader_convert_vector4_surfaceshader.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/shader/convert_vector4_surfaceshader',mtlx_shader_convert_vector4_surfaceshader);

/**
  * @function mtlx_shader_convert_integer_surfaceshader
  * @description Library: mtlx. Category: convert. Type: surfaceshader
  *   LiteGraph id: mtlx/shader/convert_integer_surfaceshader
  */
function mtlx_shader_convert_integer_surfaceshader() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_integer_surfaceshader';
  this.nodedef_type = 'surfaceshader';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_integer_surfaceshader_out_genglsl.png';
  this.nodedef_group = 'shader';
  this.addInput('in','integer');
  this.addProperty('in', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','surfaceshader');
  this.title = 'convert_surfaceshader';
  this.desc = "MaterialX:mtlx/shader/convert_integer_surfaceshader";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_shader_convert_integer_surfaceshader.nodedef_name = 'ND_convert_integer_surfaceshader';
mtlx_shader_convert_integer_surfaceshader.nodedef_node = 'convert';
mtlx_shader_convert_integer_surfaceshader.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/shader/convert_integer_surfaceshader',mtlx_shader_convert_integer_surfaceshader);

/**
  * @function mtlx_shader_convert_boolean_surfaceshader
  * @description Library: mtlx. Category: convert. Type: surfaceshader
  *   LiteGraph id: mtlx/shader/convert_boolean_surfaceshader
  */
function mtlx_shader_convert_boolean_surfaceshader() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_convert_boolean_surfaceshader';
  this.nodedef_type = 'surfaceshader';
  this.nodedef_node = 'convert';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_convert_boolean_surfaceshader_out_genglsl.png';
  this.nodedef_group = 'shader';
  this.addInput('in','boolean');
  this.addProperty('in', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','surfaceshader');
  this.title = 'convert_surfaceshader';
  this.desc = "MaterialX:mtlx/shader/convert_boolean_surfaceshader";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_shader_convert_boolean_surfaceshader.nodedef_name = 'ND_convert_boolean_surfaceshader';
mtlx_shader_convert_boolean_surfaceshader.nodedef_node = 'convert';
mtlx_shader_convert_boolean_surfaceshader.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/convert.html';
LiteGraph.registerNodeType('mtlx/shader/convert_boolean_surfaceshader',mtlx_shader_convert_boolean_surfaceshader);

/**
  * @function mtlx_channel_combine2_vector2
  * @description Library: mtlx. Category: convert. Type: vector2
  *   LiteGraph id: mtlx/channel/combine2_vector2
  */
function mtlx_channel_combine2_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_combine2_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'combine2';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/combine2.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_combine2_vector2_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in1','float');
  this.addProperty('in1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'combine2_vector2';
  this.desc = "MaterialX:mtlx/channel/combine2_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_channel_combine2_vector2.nodedef_name = 'ND_combine2_vector2';
mtlx_channel_combine2_vector2.nodedef_node = 'combine2';
mtlx_channel_combine2_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/combine2.html';
LiteGraph.registerNodeType('mtlx/channel/combine2_vector2',mtlx_channel_combine2_vector2);

/**
  * @function mtlx_channel_combine2_color4CF
  * @description Library: mtlx. Category: combine2. Type: color4
  *   LiteGraph id: mtlx/channel/combine2_color4CF
  */
function mtlx_channel_combine2_color4CF() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_combine2_color4CF';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'combine2';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/combine2.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_combine2_color4CF_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in1','color3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'combine2_color4';
  this.desc = "MaterialX:mtlx/channel/combine2_color4CF";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_channel_combine2_color4CF.nodedef_name = 'ND_combine2_color4CF';
mtlx_channel_combine2_color4CF.nodedef_node = 'combine2';
mtlx_channel_combine2_color4CF.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/combine2.html';
LiteGraph.registerNodeType('mtlx/channel/combine2_color4CF',mtlx_channel_combine2_color4CF);

/**
  * @function mtlx_channel_combine2_vector4VF
  * @description Library: mtlx. Category: combine2. Type: vector4
  *   LiteGraph id: mtlx/channel/combine2_vector4VF
  */
function mtlx_channel_combine2_vector4VF() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_combine2_vector4VF';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'combine2';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/combine2.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_combine2_vector4VF_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in1','vector3');
  this.addProperty('in1', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'combine2_vector4';
  this.desc = "MaterialX:mtlx/channel/combine2_vector4VF";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_channel_combine2_vector4VF.nodedef_name = 'ND_combine2_vector4VF';
mtlx_channel_combine2_vector4VF.nodedef_node = 'combine2';
mtlx_channel_combine2_vector4VF.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/combine2.html';
LiteGraph.registerNodeType('mtlx/channel/combine2_vector4VF',mtlx_channel_combine2_vector4VF);

/**
  * @function mtlx_channel_combine2_vector4VV
  * @description Library: mtlx. Category: combine2. Type: vector4
  *   LiteGraph id: mtlx/channel/combine2_vector4VV
  */
function mtlx_channel_combine2_vector4VV() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_combine2_vector4VV';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'combine2';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/combine2.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_combine2_vector4VV_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in1','vector2');
  this.addProperty('in1', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector2');
  this.addProperty('in2', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'combine2_vector4';
  this.desc = "MaterialX:mtlx/channel/combine2_vector4VV";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_channel_combine2_vector4VV.nodedef_name = 'ND_combine2_vector4VV';
mtlx_channel_combine2_vector4VV.nodedef_node = 'combine2';
mtlx_channel_combine2_vector4VV.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/combine2.html';
LiteGraph.registerNodeType('mtlx/channel/combine2_vector4VV',mtlx_channel_combine2_vector4VV);

/**
  * @function mtlx_channel_combine3_color3
  * @description Library: mtlx. Category: combine2. Type: color3
  *   LiteGraph id: mtlx/channel/combine3_color3
  */
function mtlx_channel_combine3_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_combine3_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'combine3';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/combine3.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_combine3_color3_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in1','float');
  this.addProperty('in1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in3','float');
  this.addProperty('in3', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'combine3_color3';
  this.desc = "MaterialX:mtlx/channel/combine3_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_channel_combine3_color3.nodedef_name = 'ND_combine3_color3';
mtlx_channel_combine3_color3.nodedef_node = 'combine3';
mtlx_channel_combine3_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/combine3.html';
LiteGraph.registerNodeType('mtlx/channel/combine3_color3',mtlx_channel_combine3_color3);

/**
  * @function mtlx_channel_combine3_vector3
  * @description Library: mtlx. Category: combine3. Type: vector3
  *   LiteGraph id: mtlx/channel/combine3_vector3
  */
function mtlx_channel_combine3_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_combine3_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'combine3';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/combine3.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_combine3_vector3_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in1','float');
  this.addProperty('in1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in3','float');
  this.addProperty('in3', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'combine3_vector3';
  this.desc = "MaterialX:mtlx/channel/combine3_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_channel_combine3_vector3.nodedef_name = 'ND_combine3_vector3';
mtlx_channel_combine3_vector3.nodedef_node = 'combine3';
mtlx_channel_combine3_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/combine3.html';
LiteGraph.registerNodeType('mtlx/channel/combine3_vector3',mtlx_channel_combine3_vector3);

/**
  * @function mtlx_channel_combine4_color4
  * @description Library: mtlx. Category: combine3. Type: color4
  *   LiteGraph id: mtlx/channel/combine4_color4
  */
function mtlx_channel_combine4_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_combine4_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'combine4';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/combine4.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_combine4_color4_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in1','float');
  this.addProperty('in1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in3','float');
  this.addProperty('in3', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in4','float');
  this.addProperty('in4', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'combine4_color4';
  this.desc = "MaterialX:mtlx/channel/combine4_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_channel_combine4_color4.nodedef_name = 'ND_combine4_color4';
mtlx_channel_combine4_color4.nodedef_node = 'combine4';
mtlx_channel_combine4_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/combine4.html';
LiteGraph.registerNodeType('mtlx/channel/combine4_color4',mtlx_channel_combine4_color4);

/**
  * @function mtlx_channel_combine4_vector4
  * @description Library: mtlx. Category: combine4. Type: vector4
  *   LiteGraph id: mtlx/channel/combine4_vector4
  */
function mtlx_channel_combine4_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_combine4_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'combine4';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/combine4.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_combine4_vector4_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in1','float');
  this.addProperty('in1', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in3','float');
  this.addProperty('in3', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in4','float');
  this.addProperty('in4', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'combine4_vector4';
  this.desc = "MaterialX:mtlx/channel/combine4_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_channel_combine4_vector4.nodedef_name = 'ND_combine4_vector4';
mtlx_channel_combine4_vector4.nodedef_node = 'combine4';
mtlx_channel_combine4_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/combine4.html';
LiteGraph.registerNodeType('mtlx/channel/combine4_vector4',mtlx_channel_combine4_vector4);

/**
  * @function mtlx_math_creatematrix_vector3_matrix33
  * @description Library: mtlx. Category: combine4. Type: matrix33
  *   LiteGraph id: mtlx/math/creatematrix_vector3_matrix33
  */
function mtlx_math_creatematrix_vector3_matrix33() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_creatematrix_vector3_matrix33';
  this.nodedef_type = 'matrix33';
  this.nodedef_node = 'creatematrix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/creatematrix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_creatematrix_vector3_matrix33_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector3');
  this.addProperty('in1', [1.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector3');
  this.addProperty('in2', [0.0, 1.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in3','vector3');
  this.addProperty('in3', [0.0, 0.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix33');
  this.title = 'creatematrix_matrix33';
  this.desc = "MaterialX:mtlx/math/creatematrix_vector3_matrix33";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#333';
}
mtlx_math_creatematrix_vector3_matrix33.nodedef_name = 'ND_creatematrix_vector3_matrix33';
mtlx_math_creatematrix_vector3_matrix33.nodedef_node = 'creatematrix';
mtlx_math_creatematrix_vector3_matrix33.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/creatematrix.html';
LiteGraph.registerNodeType('mtlx/math/creatematrix_vector3_matrix33',mtlx_math_creatematrix_vector3_matrix33);

/**
  * @function mtlx_math_creatematrix_vector3_matrix44
  * @description Library: mtlx. Category: creatematrix. Type: matrix44
  *   LiteGraph id: mtlx/math/creatematrix_vector3_matrix44
  */
function mtlx_math_creatematrix_vector3_matrix44() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_creatematrix_vector3_matrix44';
  this.nodedef_type = 'matrix44';
  this.nodedef_node = 'creatematrix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/creatematrix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_creatematrix_vector3_matrix44_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector3');
  this.addProperty('in1', [1.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector3');
  this.addProperty('in2', [0.0, 1.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in3','vector3');
  this.addProperty('in3', [0.0, 0.0, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in4','vector3');
  this.addProperty('in4', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix44');
  this.title = 'creatematrix_matrix44';
  this.desc = "MaterialX:mtlx/math/creatematrix_vector3_matrix44";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#444';
}
mtlx_math_creatematrix_vector3_matrix44.nodedef_name = 'ND_creatematrix_vector3_matrix44';
mtlx_math_creatematrix_vector3_matrix44.nodedef_node = 'creatematrix';
mtlx_math_creatematrix_vector3_matrix44.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/creatematrix.html';
LiteGraph.registerNodeType('mtlx/math/creatematrix_vector3_matrix44',mtlx_math_creatematrix_vector3_matrix44);

/**
  * @function mtlx_math_creatematrix_vector4_matrix44
  * @description Library: mtlx. Category: creatematrix. Type: matrix44
  *   LiteGraph id: mtlx/math/creatematrix_vector4_matrix44
  */
function mtlx_math_creatematrix_vector4_matrix44() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_creatematrix_vector4_matrix44';
  this.nodedef_type = 'matrix44';
  this.nodedef_node = 'creatematrix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/creatematrix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_creatematrix_vector4_matrix44_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in1','vector4');
  this.addProperty('in1', [1.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','vector4');
  this.addProperty('in2', [0.0, 1.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in3','vector4');
  this.addProperty('in3', [0.0, 0.0, 1.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in4','vector4');
  this.addProperty('in4', [0.0, 0.0, 0.0, 1.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix44');
  this.title = 'creatematrix_matrix44';
  this.desc = "MaterialX:mtlx/math/creatematrix_vector4_matrix44";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#444';
}
mtlx_math_creatematrix_vector4_matrix44.nodedef_name = 'ND_creatematrix_vector4_matrix44';
mtlx_math_creatematrix_vector4_matrix44.nodedef_node = 'creatematrix';
mtlx_math_creatematrix_vector4_matrix44.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/creatematrix.html';
LiteGraph.registerNodeType('mtlx/math/creatematrix_vector4_matrix44',mtlx_math_creatematrix_vector4_matrix44);

/**
  * @function mtlx_channel_extract_color3
  * @description Library: mtlx. Category: creatematrix. Type: float
  *   LiteGraph id: mtlx/channel/extract_color3
  */
function mtlx_channel_extract_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_extract_color3';
  this.nodedef_type = 'float';
  this.nodedef_node = 'extract';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/extract.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_extract_color3_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('index','integer');
  this.addProperty('index', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0","uimax":"2","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'extract_float';
  this.desc = "MaterialX:mtlx/channel/extract_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_channel_extract_color3.nodedef_name = 'ND_extract_color3';
mtlx_channel_extract_color3.nodedef_node = 'extract';
mtlx_channel_extract_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/extract.html';
LiteGraph.registerNodeType('mtlx/channel/extract_color3',mtlx_channel_extract_color3);

/**
  * @function mtlx_channel_extract_color4
  * @description Library: mtlx. Category: extract. Type: float
  *   LiteGraph id: mtlx/channel/extract_color4
  */
function mtlx_channel_extract_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_extract_color4';
  this.nodedef_type = 'float';
  this.nodedef_node = 'extract';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/extract.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_extract_color4_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('index','integer');
  this.addProperty('index', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0","uimax":"3","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'extract_float';
  this.desc = "MaterialX:mtlx/channel/extract_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_channel_extract_color4.nodedef_name = 'ND_extract_color4';
mtlx_channel_extract_color4.nodedef_node = 'extract';
mtlx_channel_extract_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/extract.html';
LiteGraph.registerNodeType('mtlx/channel/extract_color4',mtlx_channel_extract_color4);

/**
  * @function mtlx_channel_extract_vector2
  * @description Library: mtlx. Category: extract. Type: float
  *   LiteGraph id: mtlx/channel/extract_vector2
  */
function mtlx_channel_extract_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_extract_vector2';
  this.nodedef_type = 'float';
  this.nodedef_node = 'extract';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/extract.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_extract_vector2_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('index','integer');
  this.addProperty('index', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0","uimax":"1","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'extract_float';
  this.desc = "MaterialX:mtlx/channel/extract_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_channel_extract_vector2.nodedef_name = 'ND_extract_vector2';
mtlx_channel_extract_vector2.nodedef_node = 'extract';
mtlx_channel_extract_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/extract.html';
LiteGraph.registerNodeType('mtlx/channel/extract_vector2',mtlx_channel_extract_vector2);

/**
  * @function mtlx_channel_extract_vector3
  * @description Library: mtlx. Category: extract. Type: float
  *   LiteGraph id: mtlx/channel/extract_vector3
  */
function mtlx_channel_extract_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_extract_vector3';
  this.nodedef_type = 'float';
  this.nodedef_node = 'extract';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/extract.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_extract_vector3_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('index','integer');
  this.addProperty('index', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0","uimax":"2","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'extract_float';
  this.desc = "MaterialX:mtlx/channel/extract_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_channel_extract_vector3.nodedef_name = 'ND_extract_vector3';
mtlx_channel_extract_vector3.nodedef_node = 'extract';
mtlx_channel_extract_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/extract.html';
LiteGraph.registerNodeType('mtlx/channel/extract_vector3',mtlx_channel_extract_vector3);

/**
  * @function mtlx_channel_extract_vector4
  * @description Library: mtlx. Category: extract. Type: float
  *   LiteGraph id: mtlx/channel/extract_vector4
  */
function mtlx_channel_extract_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_extract_vector4';
  this.nodedef_type = 'float';
  this.nodedef_node = 'extract';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/extract.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_extract_vector4_out_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('index','integer');
  this.addProperty('index', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0","uimax":"3","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'extract_float';
  this.desc = "MaterialX:mtlx/channel/extract_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_channel_extract_vector4.nodedef_name = 'ND_extract_vector4';
mtlx_channel_extract_vector4.nodedef_node = 'extract';
mtlx_channel_extract_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/extract.html';
LiteGraph.registerNodeType('mtlx/channel/extract_vector4',mtlx_channel_extract_vector4);

/**
  * @function mtlx_channel_separate2_vector2
  * @description Library: mtlx. Category: extract. Type: multioutput
  *   LiteGraph id: mtlx/channel/separate2_vector2
  */
function mtlx_channel_separate2_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_separate2_vector2';
  this.nodedef_type = 'multioutput';
  this.nodedef_node = 'separate2';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/separate2.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_separate2_vector2_outx_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('outx','float');
  this.addOutput('outy','float');
  this.title = 'separate2_multioutput';
  this.desc = "MaterialX:mtlx/channel/separate2_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_channel_separate2_vector2.nodedef_name = 'ND_separate2_vector2';
mtlx_channel_separate2_vector2.nodedef_node = 'separate2';
mtlx_channel_separate2_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/separate2.html';
LiteGraph.registerNodeType('mtlx/channel/separate2_vector2',mtlx_channel_separate2_vector2);

/**
  * @function mtlx_channel_separate3_color3
  * @description Library: mtlx. Category: separate2. Type: multioutput
  *   LiteGraph id: mtlx/channel/separate3_color3
  */
function mtlx_channel_separate3_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_separate3_color3';
  this.nodedef_type = 'multioutput';
  this.nodedef_node = 'separate3';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/separate3.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_separate3_color3_outr_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('outr','float');
  this.addOutput('outg','float');
  this.addOutput('outb','float');
  this.title = 'separate3_multioutput';
  this.desc = "MaterialX:mtlx/channel/separate3_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_channel_separate3_color3.nodedef_name = 'ND_separate3_color3';
mtlx_channel_separate3_color3.nodedef_node = 'separate3';
mtlx_channel_separate3_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/separate3.html';
LiteGraph.registerNodeType('mtlx/channel/separate3_color3',mtlx_channel_separate3_color3);

/**
  * @function mtlx_channel_separate3_vector3
  * @description Library: mtlx. Category: separate3. Type: multioutput
  *   LiteGraph id: mtlx/channel/separate3_vector3
  */
function mtlx_channel_separate3_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_separate3_vector3';
  this.nodedef_type = 'multioutput';
  this.nodedef_node = 'separate3';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/separate3.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_separate3_vector3_outx_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('outx','float');
  this.addOutput('outy','float');
  this.addOutput('outz','float');
  this.title = 'separate3_multioutput';
  this.desc = "MaterialX:mtlx/channel/separate3_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_channel_separate3_vector3.nodedef_name = 'ND_separate3_vector3';
mtlx_channel_separate3_vector3.nodedef_node = 'separate3';
mtlx_channel_separate3_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/separate3.html';
LiteGraph.registerNodeType('mtlx/channel/separate3_vector3',mtlx_channel_separate3_vector3);

/**
  * @function mtlx_channel_separate4_color4
  * @description Library: mtlx. Category: separate3. Type: multioutput
  *   LiteGraph id: mtlx/channel/separate4_color4
  */
function mtlx_channel_separate4_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_separate4_color4';
  this.nodedef_type = 'multioutput';
  this.nodedef_node = 'separate4';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/separate4.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_separate4_color4_outr_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('outr','float');
  this.addOutput('outg','float');
  this.addOutput('outb','float');
  this.addOutput('outa','float');
  this.title = 'separate4_multioutput';
  this.desc = "MaterialX:mtlx/channel/separate4_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_channel_separate4_color4.nodedef_name = 'ND_separate4_color4';
mtlx_channel_separate4_color4.nodedef_node = 'separate4';
mtlx_channel_separate4_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/separate4.html';
LiteGraph.registerNodeType('mtlx/channel/separate4_color4',mtlx_channel_separate4_color4);

/**
  * @function mtlx_channel_separate4_vector4
  * @description Library: mtlx. Category: separate4. Type: multioutput
  *   LiteGraph id: mtlx/channel/separate4_vector4
  */
function mtlx_channel_separate4_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_separate4_vector4';
  this.nodedef_type = 'multioutput';
  this.nodedef_node = 'separate4';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/separate4.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_separate4_vector4_outx_genglsl.png';
  this.nodedef_group = 'channel';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('outx','float');
  this.addOutput('outy','float');
  this.addOutput('outz','float');
  this.addOutput('outw','float');
  this.title = 'separate4_multioutput';
  this.desc = "MaterialX:mtlx/channel/separate4_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_channel_separate4_vector4.nodedef_name = 'ND_separate4_vector4';
mtlx_channel_separate4_vector4.nodedef_node = 'separate4';
mtlx_channel_separate4_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/separate4.html';
LiteGraph.registerNodeType('mtlx/channel/separate4_vector4',mtlx_channel_separate4_vector4);

/**
  * @function mtlx_convolution2d_blur_float
  * @description Library: mtlx. Category: separate4. Type: float
  *   LiteGraph id: mtlx/convolution2d/blur_float
  */
function mtlx_convolution2d_blur_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_blur_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'blur';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/blur.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_blur_float_out_genglsl.png';
  this.nodedef_group = 'convolution2d';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('size','float');
  this.addProperty('size', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'box', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["box","gaussian"]});
  this.addOutput('out','float');
  this.title = 'blur_float';
  this.desc = "MaterialX:mtlx/convolution2d/blur_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_convolution2d_blur_float.nodedef_name = 'ND_blur_float';
mtlx_convolution2d_blur_float.nodedef_node = 'blur';
mtlx_convolution2d_blur_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/blur.html';
LiteGraph.registerNodeType('mtlx/convolution2d/blur_float',mtlx_convolution2d_blur_float);

/**
  * @function mtlx_convolution2d_blur_color3
  * @description Library: mtlx. Category: blur. Type: color3
  *   LiteGraph id: mtlx/convolution2d/blur_color3
  */
function mtlx_convolution2d_blur_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_blur_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'blur';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/blur.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_blur_color3_out_genglsl.png';
  this.nodedef_group = 'convolution2d';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('size','float');
  this.addProperty('size', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'box', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["box","gaussian"]});
  this.addOutput('out','color3');
  this.title = 'blur_color3';
  this.desc = "MaterialX:mtlx/convolution2d/blur_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_convolution2d_blur_color3.nodedef_name = 'ND_blur_color3';
mtlx_convolution2d_blur_color3.nodedef_node = 'blur';
mtlx_convolution2d_blur_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/blur.html';
LiteGraph.registerNodeType('mtlx/convolution2d/blur_color3',mtlx_convolution2d_blur_color3);

/**
  * @function mtlx_convolution2d_blur_color4
  * @description Library: mtlx. Category: blur. Type: color4
  *   LiteGraph id: mtlx/convolution2d/blur_color4
  */
function mtlx_convolution2d_blur_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_blur_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'blur';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/blur.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_blur_color4_out_genglsl.png';
  this.nodedef_group = 'convolution2d';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('size','float');
  this.addProperty('size', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'box', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["box","gaussian"]});
  this.addOutput('out','color4');
  this.title = 'blur_color4';
  this.desc = "MaterialX:mtlx/convolution2d/blur_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_convolution2d_blur_color4.nodedef_name = 'ND_blur_color4';
mtlx_convolution2d_blur_color4.nodedef_node = 'blur';
mtlx_convolution2d_blur_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/blur.html';
LiteGraph.registerNodeType('mtlx/convolution2d/blur_color4',mtlx_convolution2d_blur_color4);

/**
  * @function mtlx_convolution2d_blur_vector2
  * @description Library: mtlx. Category: blur. Type: vector2
  *   LiteGraph id: mtlx/convolution2d/blur_vector2
  */
function mtlx_convolution2d_blur_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_blur_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'blur';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/blur.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_blur_vector2_out_genglsl.png';
  this.nodedef_group = 'convolution2d';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('size','float');
  this.addProperty('size', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'box', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["box","gaussian"]});
  this.addOutput('out','vector2');
  this.title = 'blur_vector2';
  this.desc = "MaterialX:mtlx/convolution2d/blur_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_convolution2d_blur_vector2.nodedef_name = 'ND_blur_vector2';
mtlx_convolution2d_blur_vector2.nodedef_node = 'blur';
mtlx_convolution2d_blur_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/blur.html';
LiteGraph.registerNodeType('mtlx/convolution2d/blur_vector2',mtlx_convolution2d_blur_vector2);

/**
  * @function mtlx_convolution2d_blur_vector3
  * @description Library: mtlx. Category: blur. Type: vector3
  *   LiteGraph id: mtlx/convolution2d/blur_vector3
  */
function mtlx_convolution2d_blur_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_blur_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'blur';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/blur.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_blur_vector3_out_genglsl.png';
  this.nodedef_group = 'convolution2d';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('size','float');
  this.addProperty('size', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'box', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["box","gaussian"]});
  this.addOutput('out','vector3');
  this.title = 'blur_vector3';
  this.desc = "MaterialX:mtlx/convolution2d/blur_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_convolution2d_blur_vector3.nodedef_name = 'ND_blur_vector3';
mtlx_convolution2d_blur_vector3.nodedef_node = 'blur';
mtlx_convolution2d_blur_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/blur.html';
LiteGraph.registerNodeType('mtlx/convolution2d/blur_vector3',mtlx_convolution2d_blur_vector3);

/**
  * @function mtlx_convolution2d_blur_vector4
  * @description Library: mtlx. Category: blur. Type: vector4
  *   LiteGraph id: mtlx/convolution2d/blur_vector4
  */
function mtlx_convolution2d_blur_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_blur_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'blur';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/blur.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_blur_vector4_out_genglsl.png';
  this.nodedef_group = 'convolution2d';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('size','float');
  this.addProperty('size', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'box', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["box","gaussian"]});
  this.addOutput('out','vector4');
  this.title = 'blur_vector4';
  this.desc = "MaterialX:mtlx/convolution2d/blur_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_convolution2d_blur_vector4.nodedef_name = 'ND_blur_vector4';
mtlx_convolution2d_blur_vector4.nodedef_node = 'blur';
mtlx_convolution2d_blur_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/blur.html';
LiteGraph.registerNodeType('mtlx/convolution2d/blur_vector4',mtlx_convolution2d_blur_vector4);

/**
  * @function mtlx_convolution2d_heighttonormal_vector3
  * @description Library: mtlx. Category: blur. Type: vector3
  *   LiteGraph id: mtlx/convolution2d/heighttonormal_vector3
  */
function mtlx_convolution2d_heighttonormal_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_heighttonormal_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'heighttonormal';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/heighttonormal.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_heighttonormal_vector3_out_genglsl.png';
  this.nodedef_group = 'convolution2d';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('scale','float');
  this.addProperty('scale', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'heighttonormal_vector3';
  this.desc = "MaterialX:mtlx/convolution2d/heighttonormal_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_convolution2d_heighttonormal_vector3.nodedef_name = 'ND_heighttonormal_vector3';
mtlx_convolution2d_heighttonormal_vector3.nodedef_node = 'heighttonormal';
mtlx_convolution2d_heighttonormal_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/heighttonormal.html';
LiteGraph.registerNodeType('mtlx/convolution2d/heighttonormal_vector3',mtlx_convolution2d_heighttonormal_vector3);

/**
  * @function mtlx_conditional_logical_and
  * @description Library: mtlx. Category: heighttonormal. Type: boolean
  *   LiteGraph id: mtlx/conditional/logical_and
  */
function mtlx_conditional_logical_and() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_logical_and';
  this.nodedef_type = 'boolean';
  this.nodedef_node = 'and';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/and.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_logical_and_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('in1','boolean');
  this.addProperty('in1', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','boolean');
  this.addProperty('in2', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','boolean');
  this.title = 'and_boolean';
  this.desc = "MaterialX:mtlx/conditional/logical_and";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#060';
}
mtlx_conditional_logical_and.nodedef_name = 'ND_logical_and';
mtlx_conditional_logical_and.nodedef_node = 'and';
mtlx_conditional_logical_and.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/and.html';
LiteGraph.registerNodeType('mtlx/conditional/logical_and',mtlx_conditional_logical_and);

/**
  * @function mtlx_conditional_logical_or
  * @description Library: mtlx. Category: and. Type: boolean
  *   LiteGraph id: mtlx/conditional/logical_or
  */
function mtlx_conditional_logical_or() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_logical_or';
  this.nodedef_type = 'boolean';
  this.nodedef_node = 'or';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/or.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_logical_or_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('in1','boolean');
  this.addProperty('in1', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','boolean');
  this.addProperty('in2', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','boolean');
  this.title = 'or_boolean';
  this.desc = "MaterialX:mtlx/conditional/logical_or";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#060';
}
mtlx_conditional_logical_or.nodedef_name = 'ND_logical_or';
mtlx_conditional_logical_or.nodedef_node = 'or';
mtlx_conditional_logical_or.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/or.html';
LiteGraph.registerNodeType('mtlx/conditional/logical_or',mtlx_conditional_logical_or);

/**
  * @function mtlx_conditional_logical_xor
  * @description Library: mtlx. Category: or. Type: boolean
  *   LiteGraph id: mtlx/conditional/logical_xor
  */
function mtlx_conditional_logical_xor() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_logical_xor';
  this.nodedef_type = 'boolean';
  this.nodedef_node = 'xor';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/xor.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_logical_xor_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('in1','boolean');
  this.addProperty('in1', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','boolean');
  this.addProperty('in2', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','boolean');
  this.title = 'xor_boolean';
  this.desc = "MaterialX:mtlx/conditional/logical_xor";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#060';
}
mtlx_conditional_logical_xor.nodedef_name = 'ND_logical_xor';
mtlx_conditional_logical_xor.nodedef_node = 'xor';
mtlx_conditional_logical_xor.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/xor.html';
LiteGraph.registerNodeType('mtlx/conditional/logical_xor',mtlx_conditional_logical_xor);

/**
  * @function mtlx_conditional_logical_not
  * @description Library: mtlx. Category: xor. Type: boolean
  *   LiteGraph id: mtlx/conditional/logical_not
  */
function mtlx_conditional_logical_not() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_logical_not';
  this.nodedef_type = 'boolean';
  this.nodedef_node = 'not';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/not.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_logical_not_out_genglsl.png';
  this.nodedef_group = 'conditional';
  this.addInput('in','boolean');
  this.addProperty('in', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','boolean');
  this.title = 'not_boolean';
  this.desc = "MaterialX:mtlx/conditional/logical_not";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#532200';
  this.title_text_color = '#000';
  this.shape = LiteGraph.CARD_SHAPE;
  this.boxcolor = '#060';
}
mtlx_conditional_logical_not.nodedef_name = 'ND_logical_not';
mtlx_conditional_logical_not.nodedef_node = 'not';
mtlx_conditional_logical_not.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/not.html';
LiteGraph.registerNodeType('mtlx/conditional/logical_not',mtlx_conditional_logical_not);

/**
  * @function mtlx_organization_dot_float
  * @description Library: mtlx. Category: not. Type: float
  *   LiteGraph id: mtlx/organization/dot_float
  */
function mtlx_organization_dot_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_dot_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'dot';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_dot_float_out_genglsl.png';
  this.nodedef_group = 'organization';
  this.addInput('in','float');
  this.addProperty('in', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('note','string');
  this.addProperty('note', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'dot_float';
  this.desc = "MaterialX:mtlx/organization/dot_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_organization_dot_float.nodedef_name = 'ND_dot_float';
mtlx_organization_dot_float.nodedef_node = 'dot';
mtlx_organization_dot_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
LiteGraph.registerNodeType('mtlx/organization/dot_float',mtlx_organization_dot_float);

/**
  * @function mtlx_organization_dot_color3
  * @description Library: mtlx. Category: dot. Type: color3
  *   LiteGraph id: mtlx/organization/dot_color3
  */
function mtlx_organization_dot_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_dot_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'dot';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_dot_color3_out_genglsl.png';
  this.nodedef_group = 'organization';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('note','string');
  this.addProperty('note', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'dot_color3';
  this.desc = "MaterialX:mtlx/organization/dot_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_organization_dot_color3.nodedef_name = 'ND_dot_color3';
mtlx_organization_dot_color3.nodedef_node = 'dot';
mtlx_organization_dot_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
LiteGraph.registerNodeType('mtlx/organization/dot_color3',mtlx_organization_dot_color3);

/**
  * @function mtlx_organization_dot_color4
  * @description Library: mtlx. Category: dot. Type: color4
  *   LiteGraph id: mtlx/organization/dot_color4
  */
function mtlx_organization_dot_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_dot_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'dot';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_dot_color4_out_genglsl.png';
  this.nodedef_group = 'organization';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('note','string');
  this.addProperty('note', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'dot_color4';
  this.desc = "MaterialX:mtlx/organization/dot_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_organization_dot_color4.nodedef_name = 'ND_dot_color4';
mtlx_organization_dot_color4.nodedef_node = 'dot';
mtlx_organization_dot_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
LiteGraph.registerNodeType('mtlx/organization/dot_color4',mtlx_organization_dot_color4);

/**
  * @function mtlx_organization_dot_vector2
  * @description Library: mtlx. Category: dot. Type: vector2
  *   LiteGraph id: mtlx/organization/dot_vector2
  */
function mtlx_organization_dot_vector2() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_dot_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'dot';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_dot_vector2_out_genglsl.png';
  this.nodedef_group = 'organization';
  this.addInput('in','vector2');
  this.addProperty('in', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('note','string');
  this.addProperty('note', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'dot_vector2';
  this.desc = "MaterialX:mtlx/organization/dot_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_organization_dot_vector2.nodedef_name = 'ND_dot_vector2';
mtlx_organization_dot_vector2.nodedef_node = 'dot';
mtlx_organization_dot_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
LiteGraph.registerNodeType('mtlx/organization/dot_vector2',mtlx_organization_dot_vector2);

/**
  * @function mtlx_organization_dot_vector3
  * @description Library: mtlx. Category: dot. Type: vector3
  *   LiteGraph id: mtlx/organization/dot_vector3
  */
function mtlx_organization_dot_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_dot_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'dot';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_dot_vector3_out_genglsl.png';
  this.nodedef_group = 'organization';
  this.addInput('in','vector3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('note','string');
  this.addProperty('note', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'dot_vector3';
  this.desc = "MaterialX:mtlx/organization/dot_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_organization_dot_vector3.nodedef_name = 'ND_dot_vector3';
mtlx_organization_dot_vector3.nodedef_node = 'dot';
mtlx_organization_dot_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
LiteGraph.registerNodeType('mtlx/organization/dot_vector3',mtlx_organization_dot_vector3);

/**
  * @function mtlx_organization_dot_vector4
  * @description Library: mtlx. Category: dot. Type: vector4
  *   LiteGraph id: mtlx/organization/dot_vector4
  */
function mtlx_organization_dot_vector4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_dot_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'dot';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_dot_vector4_out_genglsl.png';
  this.nodedef_group = 'organization';
  this.addInput('in','vector4');
  this.addProperty('in', [0.0, 0.0, 0.0, 0.0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('note','string');
  this.addProperty('note', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'dot_vector4';
  this.desc = "MaterialX:mtlx/organization/dot_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_organization_dot_vector4.nodedef_name = 'ND_dot_vector4';
mtlx_organization_dot_vector4.nodedef_node = 'dot';
mtlx_organization_dot_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
LiteGraph.registerNodeType('mtlx/organization/dot_vector4',mtlx_organization_dot_vector4);

/**
  * @function mtlx_organization_dot_boolean
  * @description Library: mtlx. Category: dot. Type: boolean
  *   LiteGraph id: mtlx/organization/dot_boolean
  */
function mtlx_organization_dot_boolean() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_dot_boolean';
  this.nodedef_type = 'boolean';
  this.nodedef_node = 'dot';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_dot_boolean_out_genglsl.png';
  this.nodedef_group = 'organization';
  this.addInput('in','boolean');
  this.addProperty('in', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('note','string');
  this.addProperty('note', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','boolean');
  this.title = 'dot_boolean';
  this.desc = "MaterialX:mtlx/organization/dot_boolean";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#060';
}
mtlx_organization_dot_boolean.nodedef_name = 'ND_dot_boolean';
mtlx_organization_dot_boolean.nodedef_node = 'dot';
mtlx_organization_dot_boolean.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
LiteGraph.registerNodeType('mtlx/organization/dot_boolean',mtlx_organization_dot_boolean);

/**
  * @function mtlx_organization_dot_integer
  * @description Library: mtlx. Category: dot. Type: integer
  *   LiteGraph id: mtlx/organization/dot_integer
  */
function mtlx_organization_dot_integer() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_dot_integer';
  this.nodedef_type = 'integer';
  this.nodedef_node = 'dot';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_dot_integer_out_genglsl.png';
  this.nodedef_group = 'organization';
  this.addInput('in','integer');
  this.addProperty('in', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('note','string');
  this.addProperty('note', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','integer');
  this.title = 'dot_integer';
  this.desc = "MaterialX:mtlx/organization/dot_integer";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#A32';
}
mtlx_organization_dot_integer.nodedef_name = 'ND_dot_integer';
mtlx_organization_dot_integer.nodedef_node = 'dot';
mtlx_organization_dot_integer.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
LiteGraph.registerNodeType('mtlx/organization/dot_integer',mtlx_organization_dot_integer);

/**
  * @function mtlx_organization_dot_matrix33
  * @description Library: mtlx. Category: dot. Type: matrix33
  *   LiteGraph id: mtlx/organization/dot_matrix33
  */
function mtlx_organization_dot_matrix33() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_dot_matrix33';
  this.nodedef_type = 'matrix33';
  this.nodedef_node = 'dot';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_dot_matrix33_out_genglsl.png';
  this.nodedef_group = 'organization';
  this.addInput('in','matrix33');
  this.addProperty('in', [1.0,0.0,0.0, 0.0,1.0,0.0, 0.0,0.0,1.0], 'matrix33',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('note','string');
  this.addProperty('note', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix33');
  this.title = 'dot_matrix33';
  this.desc = "MaterialX:mtlx/organization/dot_matrix33";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#333';
}
mtlx_organization_dot_matrix33.nodedef_name = 'ND_dot_matrix33';
mtlx_organization_dot_matrix33.nodedef_node = 'dot';
mtlx_organization_dot_matrix33.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
LiteGraph.registerNodeType('mtlx/organization/dot_matrix33',mtlx_organization_dot_matrix33);

/**
  * @function mtlx_organization_dot_matrix44
  * @description Library: mtlx. Category: dot. Type: matrix44
  *   LiteGraph id: mtlx/organization/dot_matrix44
  */
function mtlx_organization_dot_matrix44() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_dot_matrix44';
  this.nodedef_type = 'matrix44';
  this.nodedef_node = 'dot';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_dot_matrix44_out_genglsl.png';
  this.nodedef_group = 'organization';
  this.addInput('in','matrix44');
  this.addProperty('in', [1.0,0.0,0.0,0.0, 0.0,1.0,0.0,0.0, 0.0,0.0,1.0,0.0, 0.0,0.0,0.0,1.0], 'matrix44',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('note','string');
  this.addProperty('note', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','matrix44');
  this.title = 'dot_matrix44';
  this.desc = "MaterialX:mtlx/organization/dot_matrix44";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#444';
}
mtlx_organization_dot_matrix44.nodedef_name = 'ND_dot_matrix44';
mtlx_organization_dot_matrix44.nodedef_node = 'dot';
mtlx_organization_dot_matrix44.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
LiteGraph.registerNodeType('mtlx/organization/dot_matrix44',mtlx_organization_dot_matrix44);

/**
  * @function mtlx_organization_dot_string
  * @description Library: mtlx. Category: dot. Type: string
  *   LiteGraph id: mtlx/organization/dot_string
  */
function mtlx_organization_dot_string() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_dot_string';
  this.nodedef_type = 'string';
  this.nodedef_node = 'dot';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_dot_string_out_genglsl.png';
  this.nodedef_group = 'organization';
  this.addInput('in','string');
  this.addProperty('in', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('note','string');
  this.addProperty('note', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','string');
  this.title = 'dot_string';
  this.desc = "MaterialX:mtlx/organization/dot_string";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#395';
}
mtlx_organization_dot_string.nodedef_name = 'ND_dot_string';
mtlx_organization_dot_string.nodedef_node = 'dot';
mtlx_organization_dot_string.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
LiteGraph.registerNodeType('mtlx/organization/dot_string',mtlx_organization_dot_string);

/**
  * @function mtlx_organization_dot_filename
  * @description Library: mtlx. Category: dot. Type: filename
  *   LiteGraph id: mtlx/organization/dot_filename
  */
function mtlx_organization_dot_filename() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_dot_filename';
  this.nodedef_type = 'filename';
  this.nodedef_node = 'dot';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_dot_filename_out_genglsl.png';
  this.nodedef_group = 'organization';
  this.addInput('in','filename');
  this.addProperty('in', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('note','string');
  this.addProperty('note', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','filename');
  this.title = 'dot_filename';
  this.desc = "MaterialX:mtlx/organization/dot_filename";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#888';
}
mtlx_organization_dot_filename.nodedef_name = 'ND_dot_filename';
mtlx_organization_dot_filename.nodedef_node = 'dot';
mtlx_organization_dot_filename.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
LiteGraph.registerNodeType('mtlx/organization/dot_filename',mtlx_organization_dot_filename);

/**
  * @function mtlx_organization_dot_surfaceshader
  * @description Library: mtlx. Category: dot. Type: surfaceshader
  *   LiteGraph id: mtlx/organization/dot_surfaceshader
  */
function mtlx_organization_dot_surfaceshader() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_dot_surfaceshader';
  this.nodedef_type = 'surfaceshader';
  this.nodedef_node = 'dot';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_dot_surfaceshader_out_genglsl.png';
  this.nodedef_group = 'organization';
  this.addInput('in','surfaceshader');
  this.addProperty('in', '', 'surfaceshader',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('note','string');
  this.addProperty('note', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','surfaceshader');
  this.title = 'dot_surfaceshader';
  this.desc = "MaterialX:mtlx/organization/dot_surfaceshader";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#232';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_organization_dot_surfaceshader.nodedef_name = 'ND_dot_surfaceshader';
mtlx_organization_dot_surfaceshader.nodedef_node = 'dot';
mtlx_organization_dot_surfaceshader.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
LiteGraph.registerNodeType('mtlx/organization/dot_surfaceshader',mtlx_organization_dot_surfaceshader);

/**
  * @function mtlx_organization_dot_displacementshader
  * @description Library: mtlx. Category: dot. Type: displacementshader
  *   LiteGraph id: mtlx/organization/dot_displacementshader
  */
function mtlx_organization_dot_displacementshader() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_dot_displacementshader';
  this.nodedef_type = 'displacementshader';
  this.nodedef_node = 'dot';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_dot_displacementshader_out_genglsl.png';
  this.nodedef_group = 'organization';
  this.addInput('in','displacementshader');
  this.addProperty('in', '', 'displacementshader',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('note','string');
  this.addProperty('note', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','displacementshader');
  this.title = 'dot_displacementshader';
  this.desc = "MaterialX:mtlx/organization/dot_displacementshader";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#232';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_organization_dot_displacementshader.nodedef_name = 'ND_dot_displacementshader';
mtlx_organization_dot_displacementshader.nodedef_node = 'dot';
mtlx_organization_dot_displacementshader.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
LiteGraph.registerNodeType('mtlx/organization/dot_displacementshader',mtlx_organization_dot_displacementshader);

/**
  * @function mtlx_organization_dot_volumeshader
  * @description Library: mtlx. Category: dot. Type: volumeshader
  *   LiteGraph id: mtlx/organization/dot_volumeshader
  */
function mtlx_organization_dot_volumeshader() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_dot_volumeshader';
  this.nodedef_type = 'volumeshader';
  this.nodedef_node = 'dot';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_dot_volumeshader_out_genglsl.png';
  this.nodedef_group = 'organization';
  this.addInput('in','volumeshader');
  this.addProperty('in', '', 'volumeshader',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('note','string');
  this.addProperty('note', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','volumeshader');
  this.title = 'dot_volumeshader';
  this.desc = "MaterialX:mtlx/organization/dot_volumeshader";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_organization_dot_volumeshader.nodedef_name = 'ND_dot_volumeshader';
mtlx_organization_dot_volumeshader.nodedef_node = 'dot';
mtlx_organization_dot_volumeshader.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
LiteGraph.registerNodeType('mtlx/organization/dot_volumeshader',mtlx_organization_dot_volumeshader);

/**
  * @function mtlx_organization_dot_lightshader
  * @description Library: mtlx. Category: dot. Type: lightshader
  *   LiteGraph id: mtlx/organization/dot_lightshader
  */
function mtlx_organization_dot_lightshader() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_dot_lightshader';
  this.nodedef_type = 'lightshader';
  this.nodedef_node = 'dot';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_dot_lightshader_out_genglsl.png';
  this.nodedef_group = 'organization';
  this.addInput('in','lightshader');
  this.addProperty('in', '', 'lightshader',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('note','string');
  this.addProperty('note', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','lightshader');
  this.title = 'dot_lightshader';
  this.desc = "MaterialX:mtlx/organization/dot_lightshader";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_organization_dot_lightshader.nodedef_name = 'ND_dot_lightshader';
mtlx_organization_dot_lightshader.nodedef_node = 'dot';
mtlx_organization_dot_lightshader.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dot.html';
LiteGraph.registerNodeType('mtlx/organization/dot_lightshader',mtlx_organization_dot_lightshader);

/**
  * @function mtlx_pbr_oren_nayar_diffuse_bsdf
  * @description Library: mtlx. Category: dot. Type: BSDF
  *   LiteGraph id: mtlx/pbr/oren_nayar_diffuse_bsdf
  */
function mtlx_pbr_oren_nayar_diffuse_bsdf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_oren_nayar_diffuse_bsdf';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'oren_nayar_diffuse_bsdf';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/oren_nayar_diffuse_bsdf.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_oren_nayar_diffuse_bsdf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('weight','float');
  this.addProperty('weight', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('color','color3');
  this.addProperty('color', [0.18, 0.18, 0.18], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('roughness','float');
  this.addProperty('roughness', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nworld"});
  this.addInput('energy_compensation','boolean');
  this.addProperty('energy_compensation', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','BSDF');
  this.title = 'oren_nayar_diffuse_bsdf_BSDF';
  this.desc = "MaterialX:mtlx/pbr/oren_nayar_diffuse_bsdf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_oren_nayar_diffuse_bsdf.nodedef_name = 'ND_oren_nayar_diffuse_bsdf';
mtlx_pbr_oren_nayar_diffuse_bsdf.nodedef_node = 'oren_nayar_diffuse_bsdf';
mtlx_pbr_oren_nayar_diffuse_bsdf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/oren_nayar_diffuse_bsdf.html';
LiteGraph.registerNodeType('mtlx/pbr/oren_nayar_diffuse_bsdf',mtlx_pbr_oren_nayar_diffuse_bsdf);

/**
  * @function mtlx_pbr_burley_diffuse_bsdf
  * @description Library: mtlx. Category: oren_nayar_diffuse_bsdf. Type: BSDF
  *   LiteGraph id: mtlx/pbr/burley_diffuse_bsdf
  */
function mtlx_pbr_burley_diffuse_bsdf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_burley_diffuse_bsdf';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'burley_diffuse_bsdf';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/burley_diffuse_bsdf.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_burley_diffuse_bsdf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('weight','float');
  this.addProperty('weight', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('color','color3');
  this.addProperty('color', [0.18, 0.18, 0.18], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('roughness','float');
  this.addProperty('roughness', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nworld"});
  this.addOutput('out','BSDF');
  this.title = 'burley_diffuse_bsdf_BSDF';
  this.desc = "MaterialX:mtlx/pbr/burley_diffuse_bsdf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_burley_diffuse_bsdf.nodedef_name = 'ND_burley_diffuse_bsdf';
mtlx_pbr_burley_diffuse_bsdf.nodedef_node = 'burley_diffuse_bsdf';
mtlx_pbr_burley_diffuse_bsdf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/burley_diffuse_bsdf.html';
LiteGraph.registerNodeType('mtlx/pbr/burley_diffuse_bsdf',mtlx_pbr_burley_diffuse_bsdf);

/**
  * @function mtlx_pbr_translucent_bsdf
  * @description Library: mtlx. Category: burley_diffuse_bsdf. Type: BSDF
  *   LiteGraph id: mtlx/pbr/translucent_bsdf
  */
function mtlx_pbr_translucent_bsdf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_translucent_bsdf';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'translucent_bsdf';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/translucent_bsdf.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_translucent_bsdf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('weight','float');
  this.addProperty('weight', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('color','color3');
  this.addProperty('color', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nworld"});
  this.addOutput('out','BSDF');
  this.title = 'translucent_bsdf_BSDF';
  this.desc = "MaterialX:mtlx/pbr/translucent_bsdf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_translucent_bsdf.nodedef_name = 'ND_translucent_bsdf';
mtlx_pbr_translucent_bsdf.nodedef_node = 'translucent_bsdf';
mtlx_pbr_translucent_bsdf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/translucent_bsdf.html';
LiteGraph.registerNodeType('mtlx/pbr/translucent_bsdf',mtlx_pbr_translucent_bsdf);

/**
  * @function mtlx_pbr_dielectric_bsdf
  * @description Library: mtlx. Category: translucent_bsdf. Type: BSDF
  *   LiteGraph id: mtlx/pbr/dielectric_bsdf
  */
function mtlx_pbr_dielectric_bsdf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_dielectric_bsdf';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'dielectric_bsdf';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dielectric_bsdf.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_dielectric_bsdf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('weight','float');
  this.addProperty('weight', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('tint','color3');
  this.addProperty('tint', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('ior','float');
  this.addProperty('ior', 1.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('roughness','vector2');
  this.addProperty('roughness', [0.05, 0.05], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('thinfilm_thickness','float');
  this.addProperty('thinfilm_thickness', 0, 'float',{"colorspace":"","unit":"nanometer","unittype":"distance","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('thinfilm_ior','float');
  this.addProperty('thinfilm_ior', 1.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nworld"});
  this.addInput('tangent','vector3');
  this.addProperty('tangent', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Tworld"});
  this.addInput('distribution','string');
  this.addProperty('distribution', 'ggx', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["ggx"]});
  this.addInput('scatter_mode','string');
  this.addProperty('scatter_mode', 'R', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["R","T","RT"]});
  this.addOutput('out','BSDF');
  this.title = 'dielectric_bsdf_BSDF';
  this.desc = "MaterialX:mtlx/pbr/dielectric_bsdf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_dielectric_bsdf.nodedef_name = 'ND_dielectric_bsdf';
mtlx_pbr_dielectric_bsdf.nodedef_node = 'dielectric_bsdf';
mtlx_pbr_dielectric_bsdf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/dielectric_bsdf.html';
LiteGraph.registerNodeType('mtlx/pbr/dielectric_bsdf',mtlx_pbr_dielectric_bsdf);

/**
  * @function mtlx_pbr_conductor_bsdf
  * @description Library: mtlx. Category: dielectric_bsdf. Type: BSDF
  *   LiteGraph id: mtlx/pbr/conductor_bsdf
  */
function mtlx_pbr_conductor_bsdf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_conductor_bsdf';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'conductor_bsdf';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/conductor_bsdf.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_conductor_bsdf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('weight','float');
  this.addProperty('weight', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('ior','color3');
  this.addProperty('ior', [0.183, 0.421, 1.373], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('extinction','color3');
  this.addProperty('extinction', [3.424, 2.346, 1.770], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('roughness','vector2');
  this.addProperty('roughness', [0.05, 0.05], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('thinfilm_thickness','float');
  this.addProperty('thinfilm_thickness', 0, 'float',{"colorspace":"","unit":"nanometer","unittype":"distance","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('thinfilm_ior','float');
  this.addProperty('thinfilm_ior', 1.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nworld"});
  this.addInput('tangent','vector3');
  this.addProperty('tangent', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Tworld"});
  this.addInput('distribution','string');
  this.addProperty('distribution', 'ggx', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["ggx"]});
  this.addOutput('out','BSDF');
  this.title = 'conductor_bsdf_BSDF';
  this.desc = "MaterialX:mtlx/pbr/conductor_bsdf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_conductor_bsdf.nodedef_name = 'ND_conductor_bsdf';
mtlx_pbr_conductor_bsdf.nodedef_node = 'conductor_bsdf';
mtlx_pbr_conductor_bsdf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/conductor_bsdf.html';
LiteGraph.registerNodeType('mtlx/pbr/conductor_bsdf',mtlx_pbr_conductor_bsdf);

/**
  * @function mtlx_pbr_generalized_schlick_bsdf
  * @description Library: mtlx. Category: conductor_bsdf. Type: BSDF
  *   LiteGraph id: mtlx/pbr/generalized_schlick_bsdf
  */
function mtlx_pbr_generalized_schlick_bsdf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_generalized_schlick_bsdf';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'generalized_schlick_bsdf';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/generalized_schlick_bsdf.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_generalized_schlick_bsdf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('weight','float');
  this.addProperty('weight', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('color0','color3');
  this.addProperty('color0', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('color82','color3');
  this.addProperty('color82', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('color90','color3');
  this.addProperty('color90', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('exponent','float');
  this.addProperty('exponent', 5.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('roughness','vector2');
  this.addProperty('roughness', [0.05, 0.05], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('thinfilm_thickness','float');
  this.addProperty('thinfilm_thickness', 0, 'float',{"colorspace":"","unit":"nanometer","unittype":"distance","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('thinfilm_ior','float');
  this.addProperty('thinfilm_ior', 1.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nworld"});
  this.addInput('tangent','vector3');
  this.addProperty('tangent', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Tworld"});
  this.addInput('distribution','string');
  this.addProperty('distribution', 'ggx', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["ggx"]});
  this.addInput('scatter_mode','string');
  this.addProperty('scatter_mode', 'R', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["R","T","RT"]});
  this.addOutput('out','BSDF');
  this.title = 'generalized_schlick_bsdf_BSDF';
  this.desc = "MaterialX:mtlx/pbr/generalized_schlick_bsdf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_generalized_schlick_bsdf.nodedef_name = 'ND_generalized_schlick_bsdf';
mtlx_pbr_generalized_schlick_bsdf.nodedef_node = 'generalized_schlick_bsdf';
mtlx_pbr_generalized_schlick_bsdf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/generalized_schlick_bsdf.html';
LiteGraph.registerNodeType('mtlx/pbr/generalized_schlick_bsdf',mtlx_pbr_generalized_schlick_bsdf);

/**
  * @function mtlx_pbr_subsurface_bsdf
  * @description Library: mtlx. Category: generalized_schlick_bsdf. Type: BSDF
  *   LiteGraph id: mtlx/pbr/subsurface_bsdf
  */
function mtlx_pbr_subsurface_bsdf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_subsurface_bsdf';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'subsurface_bsdf';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subsurface_bsdf.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_subsurface_bsdf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('weight','float');
  this.addProperty('weight', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('color','color3');
  this.addProperty('color', [0.18, 0.18, 0.18], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('radius','color3');
  this.addProperty('radius', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('anisotropy','float');
  this.addProperty('anisotropy', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nworld"});
  this.addOutput('out','BSDF');
  this.title = 'subsurface_bsdf_BSDF';
  this.desc = "MaterialX:mtlx/pbr/subsurface_bsdf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_subsurface_bsdf.nodedef_name = 'ND_subsurface_bsdf';
mtlx_pbr_subsurface_bsdf.nodedef_node = 'subsurface_bsdf';
mtlx_pbr_subsurface_bsdf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/subsurface_bsdf.html';
LiteGraph.registerNodeType('mtlx/pbr/subsurface_bsdf',mtlx_pbr_subsurface_bsdf);

/**
  * @function mtlx_pbr_sheen_bsdf
  * @description Library: mtlx. Category: subsurface_bsdf. Type: BSDF
  *   LiteGraph id: mtlx/pbr/sheen_bsdf
  */
function mtlx_pbr_sheen_bsdf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_sheen_bsdf';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'sheen_bsdf';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sheen_bsdf.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_sheen_bsdf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('weight','float');
  this.addProperty('weight', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('color','color3');
  this.addProperty('color', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('roughness','float');
  this.addProperty('roughness', 0.3, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nworld"});
  this.addInput('mode','string');
  this.addProperty('mode', 'conty_kulla', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["conty_kulla"," zeltner"]});
  this.addOutput('out','BSDF');
  this.title = 'sheen_bsdf_BSDF';
  this.desc = "MaterialX:mtlx/pbr/sheen_bsdf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_sheen_bsdf.nodedef_name = 'ND_sheen_bsdf';
mtlx_pbr_sheen_bsdf.nodedef_node = 'sheen_bsdf';
mtlx_pbr_sheen_bsdf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/sheen_bsdf.html';
LiteGraph.registerNodeType('mtlx/pbr/sheen_bsdf',mtlx_pbr_sheen_bsdf);

/**
  * @function mtlx_pbr_uniform_edf
  * @description Library: mtlx. Category: sheen_bsdf. Type: EDF
  *   LiteGraph id: mtlx/pbr/uniform_edf
  */
function mtlx_pbr_uniform_edf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_uniform_edf';
  this.nodedef_type = 'EDF';
  this.nodedef_node = 'uniform_edf';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/uniform_edf.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_uniform_edf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('color','color3');
  this.addProperty('color', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','EDF');
  this.title = 'uniform_edf_EDF';
  this.desc = "MaterialX:mtlx/pbr/uniform_edf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_uniform_edf.nodedef_name = 'ND_uniform_edf';
mtlx_pbr_uniform_edf.nodedef_node = 'uniform_edf';
mtlx_pbr_uniform_edf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/uniform_edf.html';
LiteGraph.registerNodeType('mtlx/pbr/uniform_edf',mtlx_pbr_uniform_edf);

/**
  * @function mtlx_pbr_conical_edf
  * @description Library: mtlx. Category: uniform_edf. Type: EDF
  *   LiteGraph id: mtlx/pbr/conical_edf
  */
function mtlx_pbr_conical_edf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_conical_edf';
  this.nodedef_type = 'EDF';
  this.nodedef_node = 'conical_edf';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/conical_edf.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_conical_edf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('color','color3');
  this.addProperty('color', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nworld"});
  this.addInput('inner_angle','float');
  this.addProperty('inner_angle', 60.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outer_angle','float');
  this.addProperty('outer_angle', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','EDF');
  this.title = 'conical_edf_EDF';
  this.desc = "MaterialX:mtlx/pbr/conical_edf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_conical_edf.nodedef_name = 'ND_conical_edf';
mtlx_pbr_conical_edf.nodedef_node = 'conical_edf';
mtlx_pbr_conical_edf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/conical_edf.html';
LiteGraph.registerNodeType('mtlx/pbr/conical_edf',mtlx_pbr_conical_edf);

/**
  * @function mtlx_pbr_measured_edf
  * @description Library: mtlx. Category: conical_edf. Type: EDF
  *   LiteGraph id: mtlx/pbr/measured_edf
  */
function mtlx_pbr_measured_edf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_measured_edf';
  this.nodedef_type = 'EDF';
  this.nodedef_node = 'measured_edf';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/measured_edf.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_measured_edf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('color','color3');
  this.addProperty('color', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nworld"});
  this.addInput('file','filename');
  this.addProperty('file', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','EDF');
  this.title = 'measured_edf_EDF';
  this.desc = "MaterialX:mtlx/pbr/measured_edf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_measured_edf.nodedef_name = 'ND_measured_edf';
mtlx_pbr_measured_edf.nodedef_node = 'measured_edf';
mtlx_pbr_measured_edf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/measured_edf.html';
LiteGraph.registerNodeType('mtlx/pbr/measured_edf',mtlx_pbr_measured_edf);

/**
  * @function mtlx_pbr_generalized_schlick_edf
  * @description Library: mtlx. Category: measured_edf. Type: EDF
  *   LiteGraph id: mtlx/pbr/generalized_schlick_edf
  */
function mtlx_pbr_generalized_schlick_edf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_generalized_schlick_edf';
  this.nodedef_type = 'EDF';
  this.nodedef_node = 'generalized_schlick_edf';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/generalized_schlick_edf.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_generalized_schlick_edf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('color0','color3');
  this.addProperty('color0', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('color90','color3');
  this.addProperty('color90', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('exponent','float');
  this.addProperty('exponent', 5.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('base','EDF');
  this.addProperty('base', '', 'EDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','EDF');
  this.title = 'generalized_schlick_edf_EDF';
  this.desc = "MaterialX:mtlx/pbr/generalized_schlick_edf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_generalized_schlick_edf.nodedef_name = 'ND_generalized_schlick_edf';
mtlx_pbr_generalized_schlick_edf.nodedef_node = 'generalized_schlick_edf';
mtlx_pbr_generalized_schlick_edf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/generalized_schlick_edf.html';
LiteGraph.registerNodeType('mtlx/pbr/generalized_schlick_edf',mtlx_pbr_generalized_schlick_edf);

/**
  * @function mtlx_pbr_absorption_vdf
  * @description Library: mtlx. Category: generalized_schlick_edf. Type: VDF
  *   LiteGraph id: mtlx/pbr/absorption_vdf
  */
function mtlx_pbr_absorption_vdf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_absorption_vdf';
  this.nodedef_type = 'VDF';
  this.nodedef_node = 'absorption_vdf';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/absorption_vdf.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_absorption_vdf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('absorption','vector3');
  this.addProperty('absorption', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','VDF');
  this.title = 'absorption_vdf_VDF';
  this.desc = "MaterialX:mtlx/pbr/absorption_vdf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_absorption_vdf.nodedef_name = 'ND_absorption_vdf';
mtlx_pbr_absorption_vdf.nodedef_node = 'absorption_vdf';
mtlx_pbr_absorption_vdf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/absorption_vdf.html';
LiteGraph.registerNodeType('mtlx/pbr/absorption_vdf',mtlx_pbr_absorption_vdf);

/**
  * @function mtlx_pbr_anisotropic_vdf
  * @description Library: mtlx. Category: absorption_vdf. Type: VDF
  *   LiteGraph id: mtlx/pbr/anisotropic_vdf
  */
function mtlx_pbr_anisotropic_vdf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_anisotropic_vdf';
  this.nodedef_type = 'VDF';
  this.nodedef_node = 'anisotropic_vdf';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/anisotropic_vdf.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_anisotropic_vdf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('absorption','vector3');
  this.addProperty('absorption', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('scattering','vector3');
  this.addProperty('scattering', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('anisotropy','float');
  this.addProperty('anisotropy', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','VDF');
  this.title = 'anisotropic_vdf_VDF';
  this.desc = "MaterialX:mtlx/pbr/anisotropic_vdf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_anisotropic_vdf.nodedef_name = 'ND_anisotropic_vdf';
mtlx_pbr_anisotropic_vdf.nodedef_node = 'anisotropic_vdf';
mtlx_pbr_anisotropic_vdf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/anisotropic_vdf.html';
LiteGraph.registerNodeType('mtlx/pbr/anisotropic_vdf',mtlx_pbr_anisotropic_vdf);

/**
  * @function mtlx_pbr_surface
  * @description Library: mtlx. Category: anisotropic_vdf. Type: surfaceshader
  *   LiteGraph id: mtlx/pbr/surface
  */
function mtlx_pbr_surface() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_surface';
  this.nodedef_type = 'surfaceshader';
  this.nodedef_node = 'surface';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/surface.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_surface_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('bsdf','BSDF');
  this.addProperty('bsdf', '', 'BSDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('edf','EDF');
  this.addProperty('edf', '', 'EDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('opacity','float');
  this.addProperty('opacity', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('thin_walled','boolean');
  this.addProperty('thin_walled', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','surfaceshader');
  this.title = 'surface_surfaceshader';
  this.desc = "MaterialX:mtlx/pbr/surface";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#232';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_surface.nodedef_name = 'ND_surface';
mtlx_pbr_surface.nodedef_node = 'surface';
mtlx_pbr_surface.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/surface.html';
LiteGraph.registerNodeType('mtlx/pbr/surface',mtlx_pbr_surface);

/**
  * @function mtlx_pbr_volume
  * @description Library: mtlx. Category: surface. Type: volumeshader
  *   LiteGraph id: mtlx/pbr/volume
  */
function mtlx_pbr_volume() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_volume';
  this.nodedef_type = 'volumeshader';
  this.nodedef_node = 'volume';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/volume.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_volume_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('vdf','VDF');
  this.addProperty('vdf', '', 'VDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('edf','EDF');
  this.addProperty('edf', '', 'EDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','volumeshader');
  this.title = 'volume_volumeshader';
  this.desc = "MaterialX:mtlx/pbr/volume";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_volume.nodedef_name = 'ND_volume';
mtlx_pbr_volume.nodedef_node = 'volume';
mtlx_pbr_volume.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/volume.html';
LiteGraph.registerNodeType('mtlx/pbr/volume',mtlx_pbr_volume);

/**
  * @function mtlx_pbr_light
  * @description Library: mtlx. Category: volume. Type: lightshader
  *   LiteGraph id: mtlx/pbr/light
  */
function mtlx_pbr_light() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_light';
  this.nodedef_type = 'lightshader';
  this.nodedef_node = 'light';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/light.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_light_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('edf','EDF');
  this.addProperty('edf', '', 'EDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('intensity','float');
  this.addProperty('intensity', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('exposure','float');
  this.addProperty('exposure', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','lightshader');
  this.title = 'light_lightshader';
  this.desc = "MaterialX:mtlx/pbr/light";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_light.nodedef_name = 'ND_light';
mtlx_pbr_light.nodedef_node = 'light';
mtlx_pbr_light.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/light.html';
LiteGraph.registerNodeType('mtlx/pbr/light',mtlx_pbr_light);

/**
  * @function mtlx_pbr_displacement_float
  * @description Library: mtlx. Category: light. Type: displacementshader
  *   LiteGraph id: mtlx/pbr/displacement_float
  */
function mtlx_pbr_displacement_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_displacement_float';
  this.nodedef_type = 'displacementshader';
  this.nodedef_node = 'displacement';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/displacement.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_displacement_float_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('displacement','float');
  this.addProperty('displacement', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('scale','float');
  this.addProperty('scale', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','displacementshader');
  this.title = 'displacement_displacementshader';
  this.desc = "MaterialX:mtlx/pbr/displacement_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#232';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_displacement_float.nodedef_name = 'ND_displacement_float';
mtlx_pbr_displacement_float.nodedef_node = 'displacement';
mtlx_pbr_displacement_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/displacement.html';
LiteGraph.registerNodeType('mtlx/pbr/displacement_float',mtlx_pbr_displacement_float);

/**
  * @function mtlx_pbr_displacement_vector3
  * @description Library: mtlx. Category: displacement. Type: displacementshader
  *   LiteGraph id: mtlx/pbr/displacement_vector3
  */
function mtlx_pbr_displacement_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_displacement_vector3';
  this.nodedef_type = 'displacementshader';
  this.nodedef_node = 'displacement';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/displacement.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_displacement_vector3_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('displacement','vector3');
  this.addProperty('displacement', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('scale','float');
  this.addProperty('scale', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','displacementshader');
  this.title = 'displacement_displacementshader';
  this.desc = "MaterialX:mtlx/pbr/displacement_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#232';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_displacement_vector3.nodedef_name = 'ND_displacement_vector3';
mtlx_pbr_displacement_vector3.nodedef_node = 'displacement';
mtlx_pbr_displacement_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/displacement.html';
LiteGraph.registerNodeType('mtlx/pbr/displacement_vector3',mtlx_pbr_displacement_vector3);

/**
  * @function mtlx_pbr_layer_bsdf
  * @description Library: mtlx. Category: displacement. Type: BSDF
  *   LiteGraph id: mtlx/pbr/layer_bsdf
  */
function mtlx_pbr_layer_bsdf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_layer_bsdf';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'layer';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/layer.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_layer_bsdf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('top','BSDF');
  this.addProperty('top', '', 'BSDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('base','BSDF');
  this.addProperty('base', '', 'BSDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','BSDF');
  this.title = 'layer_BSDF';
  this.desc = "MaterialX:mtlx/pbr/layer_bsdf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_layer_bsdf.nodedef_name = 'ND_layer_bsdf';
mtlx_pbr_layer_bsdf.nodedef_node = 'layer';
mtlx_pbr_layer_bsdf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/layer.html';
LiteGraph.registerNodeType('mtlx/pbr/layer_bsdf',mtlx_pbr_layer_bsdf);

/**
  * @function mtlx_pbr_layer_vdf
  * @description Library: mtlx. Category: layer. Type: BSDF
  *   LiteGraph id: mtlx/pbr/layer_vdf
  */
function mtlx_pbr_layer_vdf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_layer_vdf';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'layer';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/layer.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_layer_vdf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('top','BSDF');
  this.addProperty('top', '', 'BSDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('base','VDF');
  this.addProperty('base', '', 'VDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','BSDF');
  this.title = 'layer_BSDF';
  this.desc = "MaterialX:mtlx/pbr/layer_vdf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_layer_vdf.nodedef_name = 'ND_layer_vdf';
mtlx_pbr_layer_vdf.nodedef_node = 'layer';
mtlx_pbr_layer_vdf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/layer.html';
LiteGraph.registerNodeType('mtlx/pbr/layer_vdf',mtlx_pbr_layer_vdf);

/**
  * @function mtlx_pbr_mix_bsdf
  * @description Library: mtlx. Category: layer. Type: BSDF
  *   LiteGraph id: mtlx/pbr/mix_bsdf
  */
function mtlx_pbr_mix_bsdf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_mix_bsdf';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'mix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_mix_bsdf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('fg','BSDF');
  this.addProperty('fg', '', 'BSDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','BSDF');
  this.addProperty('bg', '', 'BSDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','BSDF');
  this.title = 'mix_BSDF';
  this.desc = "MaterialX:mtlx/pbr/mix_bsdf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_mix_bsdf.nodedef_name = 'ND_mix_bsdf';
mtlx_pbr_mix_bsdf.nodedef_node = 'mix';
mtlx_pbr_mix_bsdf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
LiteGraph.registerNodeType('mtlx/pbr/mix_bsdf',mtlx_pbr_mix_bsdf);

/**
  * @function mtlx_pbr_mix_edf
  * @description Library: mtlx. Category: mix. Type: EDF
  *   LiteGraph id: mtlx/pbr/mix_edf
  */
function mtlx_pbr_mix_edf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_mix_edf';
  this.nodedef_type = 'EDF';
  this.nodedef_node = 'mix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_mix_edf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('fg','EDF');
  this.addProperty('fg', '', 'EDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','EDF');
  this.addProperty('bg', '', 'EDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','EDF');
  this.title = 'mix_EDF';
  this.desc = "MaterialX:mtlx/pbr/mix_edf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_mix_edf.nodedef_name = 'ND_mix_edf';
mtlx_pbr_mix_edf.nodedef_node = 'mix';
mtlx_pbr_mix_edf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
LiteGraph.registerNodeType('mtlx/pbr/mix_edf',mtlx_pbr_mix_edf);

/**
  * @function mtlx_pbr_mix_vdf
  * @description Library: mtlx. Category: mix. Type: VDF
  *   LiteGraph id: mtlx/pbr/mix_vdf
  */
function mtlx_pbr_mix_vdf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_mix_vdf';
  this.nodedef_type = 'VDF';
  this.nodedef_node = 'mix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_mix_vdf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('fg','VDF');
  this.addProperty('fg', '', 'VDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bg','VDF');
  this.addProperty('bg', '', 'VDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','VDF');
  this.title = 'mix_VDF';
  this.desc = "MaterialX:mtlx/pbr/mix_vdf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_mix_vdf.nodedef_name = 'ND_mix_vdf';
mtlx_pbr_mix_vdf.nodedef_node = 'mix';
mtlx_pbr_mix_vdf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/mix.html';
LiteGraph.registerNodeType('mtlx/pbr/mix_vdf',mtlx_pbr_mix_vdf);

/**
  * @function mtlx_pbr_add_bsdf
  * @description Library: mtlx. Category: mix. Type: BSDF
  *   LiteGraph id: mtlx/pbr/add_bsdf
  */
function mtlx_pbr_add_bsdf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_add_bsdf';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'add';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_add_bsdf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('in1','BSDF');
  this.addProperty('in1', '', 'BSDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','BSDF');
  this.addProperty('in2', '', 'BSDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','BSDF');
  this.title = 'add_BSDF';
  this.desc = "MaterialX:mtlx/pbr/add_bsdf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_add_bsdf.nodedef_name = 'ND_add_bsdf';
mtlx_pbr_add_bsdf.nodedef_node = 'add';
mtlx_pbr_add_bsdf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
LiteGraph.registerNodeType('mtlx/pbr/add_bsdf',mtlx_pbr_add_bsdf);

/**
  * @function mtlx_pbr_add_edf
  * @description Library: mtlx. Category: add. Type: EDF
  *   LiteGraph id: mtlx/pbr/add_edf
  */
function mtlx_pbr_add_edf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_add_edf';
  this.nodedef_type = 'EDF';
  this.nodedef_node = 'add';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_add_edf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('in1','EDF');
  this.addProperty('in1', '', 'EDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','EDF');
  this.addProperty('in2', '', 'EDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','EDF');
  this.title = 'add_EDF';
  this.desc = "MaterialX:mtlx/pbr/add_edf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_add_edf.nodedef_name = 'ND_add_edf';
mtlx_pbr_add_edf.nodedef_node = 'add';
mtlx_pbr_add_edf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
LiteGraph.registerNodeType('mtlx/pbr/add_edf',mtlx_pbr_add_edf);

/**
  * @function mtlx_pbr_add_vdf
  * @description Library: mtlx. Category: add. Type: VDF
  *   LiteGraph id: mtlx/pbr/add_vdf
  */
function mtlx_pbr_add_vdf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_add_vdf';
  this.nodedef_type = 'VDF';
  this.nodedef_node = 'add';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_add_vdf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('in1','VDF');
  this.addProperty('in1', '', 'VDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','VDF');
  this.addProperty('in2', '', 'VDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','VDF');
  this.title = 'add_VDF';
  this.desc = "MaterialX:mtlx/pbr/add_vdf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_add_vdf.nodedef_name = 'ND_add_vdf';
mtlx_pbr_add_vdf.nodedef_node = 'add';
mtlx_pbr_add_vdf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/add.html';
LiteGraph.registerNodeType('mtlx/pbr/add_vdf',mtlx_pbr_add_vdf);

/**
  * @function mtlx_pbr_multiply_bsdfC
  * @description Library: mtlx. Category: add. Type: BSDF
  *   LiteGraph id: mtlx/pbr/multiply_bsdfC
  */
function mtlx_pbr_multiply_bsdfC() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_multiply_bsdfC';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'multiply';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_multiply_bsdfC_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('in1','BSDF');
  this.addProperty('in1', '', 'BSDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color3');
  this.addProperty('in2', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','BSDF');
  this.title = 'multiply_BSDF';
  this.desc = "MaterialX:mtlx/pbr/multiply_bsdfC";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_multiply_bsdfC.nodedef_name = 'ND_multiply_bsdfC';
mtlx_pbr_multiply_bsdfC.nodedef_node = 'multiply';
mtlx_pbr_multiply_bsdfC.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
LiteGraph.registerNodeType('mtlx/pbr/multiply_bsdfC',mtlx_pbr_multiply_bsdfC);

/**
  * @function mtlx_pbr_multiply_bsdfF
  * @description Library: mtlx. Category: multiply. Type: BSDF
  *   LiteGraph id: mtlx/pbr/multiply_bsdfF
  */
function mtlx_pbr_multiply_bsdfF() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_multiply_bsdfF';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'multiply';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_multiply_bsdfF_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('in1','BSDF');
  this.addProperty('in1', '', 'BSDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','BSDF');
  this.title = 'multiply_BSDF';
  this.desc = "MaterialX:mtlx/pbr/multiply_bsdfF";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_multiply_bsdfF.nodedef_name = 'ND_multiply_bsdfF';
mtlx_pbr_multiply_bsdfF.nodedef_node = 'multiply';
mtlx_pbr_multiply_bsdfF.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
LiteGraph.registerNodeType('mtlx/pbr/multiply_bsdfF',mtlx_pbr_multiply_bsdfF);

/**
  * @function mtlx_pbr_multiply_edfC
  * @description Library: mtlx. Category: multiply. Type: EDF
  *   LiteGraph id: mtlx/pbr/multiply_edfC
  */
function mtlx_pbr_multiply_edfC() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_multiply_edfC';
  this.nodedef_type = 'EDF';
  this.nodedef_node = 'multiply';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_multiply_edfC_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('in1','EDF');
  this.addProperty('in1', '', 'EDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color3');
  this.addProperty('in2', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','EDF');
  this.title = 'multiply_EDF';
  this.desc = "MaterialX:mtlx/pbr/multiply_edfC";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_multiply_edfC.nodedef_name = 'ND_multiply_edfC';
mtlx_pbr_multiply_edfC.nodedef_node = 'multiply';
mtlx_pbr_multiply_edfC.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
LiteGraph.registerNodeType('mtlx/pbr/multiply_edfC',mtlx_pbr_multiply_edfC);

/**
  * @function mtlx_pbr_multiply_edfF
  * @description Library: mtlx. Category: multiply. Type: EDF
  *   LiteGraph id: mtlx/pbr/multiply_edfF
  */
function mtlx_pbr_multiply_edfF() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_multiply_edfF';
  this.nodedef_type = 'EDF';
  this.nodedef_node = 'multiply';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_multiply_edfF_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('in1','EDF');
  this.addProperty('in1', '', 'EDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','EDF');
  this.title = 'multiply_EDF';
  this.desc = "MaterialX:mtlx/pbr/multiply_edfF";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_multiply_edfF.nodedef_name = 'ND_multiply_edfF';
mtlx_pbr_multiply_edfF.nodedef_node = 'multiply';
mtlx_pbr_multiply_edfF.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
LiteGraph.registerNodeType('mtlx/pbr/multiply_edfF',mtlx_pbr_multiply_edfF);

/**
  * @function mtlx_pbr_multiply_vdfC
  * @description Library: mtlx. Category: multiply. Type: VDF
  *   LiteGraph id: mtlx/pbr/multiply_vdfC
  */
function mtlx_pbr_multiply_vdfC() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_multiply_vdfC';
  this.nodedef_type = 'VDF';
  this.nodedef_node = 'multiply';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_multiply_vdfC_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('in1','VDF');
  this.addProperty('in1', '', 'VDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','color3');
  this.addProperty('in2', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','VDF');
  this.title = 'multiply_VDF';
  this.desc = "MaterialX:mtlx/pbr/multiply_vdfC";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_multiply_vdfC.nodedef_name = 'ND_multiply_vdfC';
mtlx_pbr_multiply_vdfC.nodedef_node = 'multiply';
mtlx_pbr_multiply_vdfC.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
LiteGraph.registerNodeType('mtlx/pbr/multiply_vdfC',mtlx_pbr_multiply_vdfC);

/**
  * @function mtlx_pbr_multiply_vdfF
  * @description Library: mtlx. Category: multiply. Type: VDF
  *   LiteGraph id: mtlx/pbr/multiply_vdfF
  */
function mtlx_pbr_multiply_vdfF() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_multiply_vdfF';
  this.nodedef_type = 'VDF';
  this.nodedef_node = 'multiply';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_multiply_vdfF_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('in1','VDF');
  this.addProperty('in1', '', 'VDF',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('in2','float');
  this.addProperty('in2', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','VDF');
  this.title = 'multiply_VDF';
  this.desc = "MaterialX:mtlx/pbr/multiply_vdfF";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_multiply_vdfF.nodedef_name = 'ND_multiply_vdfF';
mtlx_pbr_multiply_vdfF.nodedef_node = 'multiply';
mtlx_pbr_multiply_vdfF.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/multiply.html';
LiteGraph.registerNodeType('mtlx/pbr/multiply_vdfF',mtlx_pbr_multiply_vdfF);

/**
  * @function mtlx_pbr_roughness_anisotropy
  * @description Library: mtlx. Category: multiply. Type: vector2
  *   LiteGraph id: mtlx/pbr/roughness_anisotropy
  */
function mtlx_pbr_roughness_anisotropy() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_roughness_anisotropy';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'roughness_anisotropy';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/roughness_anisotropy.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_roughness_anisotropy_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('roughness','float');
  this.addProperty('roughness', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('anisotropy','float');
  this.addProperty('anisotropy', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'roughness_anisotropy_vector2';
  this.desc = "MaterialX:mtlx/pbr/roughness_anisotropy";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_pbr_roughness_anisotropy.nodedef_name = 'ND_roughness_anisotropy';
mtlx_pbr_roughness_anisotropy.nodedef_node = 'roughness_anisotropy';
mtlx_pbr_roughness_anisotropy.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/roughness_anisotropy.html';
LiteGraph.registerNodeType('mtlx/pbr/roughness_anisotropy',mtlx_pbr_roughness_anisotropy);

/**
  * @function mtlx_pbr_roughness_dual
  * @description Library: mtlx. Category: roughness_anisotropy. Type: vector2
  *   LiteGraph id: mtlx/pbr/roughness_dual
  */
function mtlx_pbr_roughness_dual() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_roughness_dual';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'roughness_dual';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/roughness_dual.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_roughness_dual_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('roughness','vector2');
  this.addProperty('roughness', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'roughness_dual_vector2';
  this.desc = "MaterialX:mtlx/pbr/roughness_dual";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_pbr_roughness_dual.nodedef_name = 'ND_roughness_dual';
mtlx_pbr_roughness_dual.nodedef_node = 'roughness_dual';
mtlx_pbr_roughness_dual.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/roughness_dual.html';
LiteGraph.registerNodeType('mtlx/pbr/roughness_dual',mtlx_pbr_roughness_dual);

/**
  * @function mtlx_pbr_glossiness_anisotropy
  * @description Library: mtlx. Category: roughness_dual. Type: vector2
  *   LiteGraph id: mtlx/pbr/glossiness_anisotropy
  */
function mtlx_pbr_glossiness_anisotropy() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_glossiness_anisotropy';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'glossiness_anisotropy';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/glossiness_anisotropy.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_glossiness_anisotropy_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('glossiness','float');
  this.addProperty('glossiness', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('anisotropy','float');
  this.addProperty('anisotropy', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'glossiness_anisotropy_vector2';
  this.desc = "MaterialX:mtlx/pbr/glossiness_anisotropy";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_pbr_glossiness_anisotropy.nodedef_name = 'ND_glossiness_anisotropy';
mtlx_pbr_glossiness_anisotropy.nodedef_node = 'glossiness_anisotropy';
mtlx_pbr_glossiness_anisotropy.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/glossiness_anisotropy.html';
LiteGraph.registerNodeType('mtlx/pbr/glossiness_anisotropy',mtlx_pbr_glossiness_anisotropy);

/**
  * @function mtlx_pbr_blackbody
  * @description Library: mtlx. Category: glossiness_anisotropy. Type: color3
  *   LiteGraph id: mtlx/pbr/blackbody
  */
function mtlx_pbr_blackbody() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_blackbody';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'blackbody';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/blackbody.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_blackbody_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('temperature','float');
  this.addProperty('temperature', 5000.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'blackbody_color3';
  this.desc = "MaterialX:mtlx/pbr/blackbody";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_pbr_blackbody.nodedef_name = 'ND_blackbody';
mtlx_pbr_blackbody.nodedef_node = 'blackbody';
mtlx_pbr_blackbody.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/blackbody.html';
LiteGraph.registerNodeType('mtlx/pbr/blackbody',mtlx_pbr_blackbody);

/**
  * @function mtlx_pbr_artistic_ior
  * @description Library: mtlx. Category: blackbody. Type: multioutput
  *   LiteGraph id: mtlx/pbr/artistic_ior
  */
function mtlx_pbr_artistic_ior() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_artistic_ior';
  this.nodedef_type = 'multioutput';
  this.nodedef_node = 'artistic_ior';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/artistic_ior.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_artistic_ior_ior_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('reflectivity','color3');
  this.addProperty('reflectivity', [0.944, 0.776, 0.373], 'color3',{"colorspace":"lin_rec709","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('edge_color','color3');
  this.addProperty('edge_color', [0.998, 0.981, 0.751], 'color3',{"colorspace":"lin_rec709","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('ior','color3');
  this.addOutput('extinction','color3');
  this.title = 'artistic_ior_multioutput';
  this.desc = "MaterialX:mtlx/pbr/artistic_ior";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_artistic_ior.nodedef_name = 'ND_artistic_ior';
mtlx_pbr_artistic_ior.nodedef_node = 'artistic_ior';
mtlx_pbr_artistic_ior.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/artistic_ior.html';
LiteGraph.registerNodeType('mtlx/pbr/artistic_ior',mtlx_pbr_artistic_ior);

/**
  * @function mtlx_npr_viewdirection_vector3
  * @description Library: mtlx. Category: artistic_ior. Type: vector3
  *   LiteGraph id: mtlx/npr/viewdirection_vector3
  */
function mtlx_npr_viewdirection_vector3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_viewdirection_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'viewdirection';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/viewdirection.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_viewdirection_vector3_out_genglsl.png';
  this.nodedef_group = 'npr';
  this.addInput('space','string');
  this.addProperty('space', 'world', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["model","object","world"]});
  this.addOutput('out','vector3');
  this.title = 'viewdirection_vector3';
  this.desc = "MaterialX:mtlx/npr/viewdirection_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_npr_viewdirection_vector3.nodedef_name = 'ND_viewdirection_vector3';
mtlx_npr_viewdirection_vector3.nodedef_node = 'viewdirection';
mtlx_npr_viewdirection_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/viewdirection.html';
LiteGraph.registerNodeType('mtlx/npr/viewdirection_vector3',mtlx_npr_viewdirection_vector3);

/**
  * @function mtlx_npr_facingratio_float
  * @description Library: mtlx. Category: viewdirection. Type: float
  *   LiteGraph id: mtlx/npr/facingratio_float
  */
function mtlx_npr_facingratio_float() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_facingratio_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'facingratio';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/facingratio.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_facingratio_float_out_genglsl.png';
  this.nodedef_group = 'npr';
  this.addInput('viewdirection','vector3');
  this.addProperty('viewdirection', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Vworld"});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nworld"});
  this.addInput('faceforward','boolean');
  this.addProperty('faceforward', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('invert','boolean');
  this.addProperty('invert', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'facingratio_float';
  this.desc = "MaterialX:mtlx/npr/facingratio_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_npr_facingratio_float.nodedef_name = 'ND_facingratio_float';
mtlx_npr_facingratio_float.nodedef_node = 'facingratio';
mtlx_npr_facingratio_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/facingratio.html';
LiteGraph.registerNodeType('mtlx/npr/facingratio_float',mtlx_npr_facingratio_float);

/**
  * @function mtlx_npr_gooch_shade
  * @description Library: mtlx. Category: facingratio. Type: color3
  *   LiteGraph id: mtlx/npr/gooch_shade
  */
function mtlx_npr_gooch_shade() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_gooch_shade';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'gooch_shade';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/gooch_shade.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_gooch_shade_out_genglsl.png';
  this.nodedef_group = 'npr';
  this.addInput('warm_color','color3');
  this.addProperty('warm_color', [0.8, 0.8, 0.7], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Warm Color","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('cool_color','color3');
  this.addProperty('cool_color', [0.3, 0.3, 0.8], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Cool Color","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('specular_intensity','float');
  this.addProperty('specular_intensity', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Specular Intensity","uimin":"0","uimax":"1","uifolder":"","defaultgeomprop":""});
  this.addInput('shininess','float');
  this.addProperty('shininess', 64, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Shininess","uimin":"1","uimax":"256","uifolder":"","defaultgeomprop":""});
  this.addInput('light_direction','vector3');
  this.addProperty('light_direction', [1, -0.5, -0.5], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Light Direction","uimin":[-1,-1,-1],"uimax":[1,1,1],"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'gooch_shade_color3';
  this.desc = "MaterialX:mtlx/npr/gooch_shade";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_npr_gooch_shade.nodedef_name = 'ND_gooch_shade';
mtlx_npr_gooch_shade.nodedef_node = 'gooch_shade';
mtlx_npr_gooch_shade.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/gooch_shade.html';
LiteGraph.registerNodeType('mtlx/npr/gooch_shade',mtlx_npr_gooch_shade);

/**
  * @function mtlx_pbr_open_pbr_surface_surfaceshader
  * @description Library: mtlx. Category: gooch_shade. Type: surfaceshader
  *   LiteGraph id: mtlx/pbr/open_pbr_surface_surfaceshader
  */
function mtlx_pbr_open_pbr_surface_surfaceshader() {
  this.nodedef_icon = './Icons/openpbr_logo.svg';
  this.nodedef_name = 'ND_open_pbr_surface_surfaceshader';
  this.nodedef_type = 'surfaceshader';
  this.nodedef_node = 'open_pbr_surface';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/open_pbr_surface.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_open_pbr_surface_surfaceshader_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('base_weight','float');
  this.addProperty('base_weight', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Base Weight","uimin":"0.0","uimax":"1.0","uifolder":"Base","defaultgeomprop":""});
  this.addInput('base_color','color3');
  this.addProperty('base_color', [0.8, 0.8, 0.8], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Base Color","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Base","defaultgeomprop":""});
  this.addInput('base_diffuse_roughness','float');
  this.addProperty('base_diffuse_roughness', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Base Diffuse Roughness","uimin":"0.0","uimax":"1.0","uifolder":"Base","defaultgeomprop":""});
  this.addInput('base_metalness','float');
  this.addProperty('base_metalness', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Base Metalness","uimin":"0.0","uimax":"1.0","uifolder":"Base","defaultgeomprop":""});
  this.addInput('specular_weight','float');
  this.addProperty('specular_weight', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Specular Weight","uimin":"0.0","uimax":"1.0","uifolder":"Specular","defaultgeomprop":""});
  this.addInput('specular_color','color3');
  this.addProperty('specular_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Specular Color","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Specular","defaultgeomprop":""});
  this.addInput('specular_roughness','float');
  this.addProperty('specular_roughness', 0.3, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Specular Roughness","uimin":"0.0","uimax":"1.0","uifolder":"Specular","defaultgeomprop":""});
  this.addInput('specular_ior','float');
  this.addProperty('specular_ior', 1.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Specular Index of Refraction","uimin":"1.0","uimax":"3.0","uifolder":"Specular","defaultgeomprop":""});
  this.addInput('specular_roughness_anisotropy','float');
  this.addProperty('specular_roughness_anisotropy', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Specular Anisotropy","uimin":"0.0","uimax":"1.0","uifolder":"Specular","defaultgeomprop":""});
  this.addInput('transmission_weight','float');
  this.addProperty('transmission_weight', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission Weight","uimin":"0.0","uimax":"1.0","uifolder":"Transmission","defaultgeomprop":""});
  this.addInput('transmission_color','color3');
  this.addProperty('transmission_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission Color","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Transmission","defaultgeomprop":""});
  this.addInput('transmission_depth','float');
  this.addProperty('transmission_depth', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission Depth","uimin":"0.0","uimax":"1.0","uifolder":"Transmission","defaultgeomprop":""});
  this.addInput('transmission_scatter','color3');
  this.addProperty('transmission_scatter', [0, 0, 0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission Scatter","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Transmission","defaultgeomprop":""});
  this.addInput('transmission_scatter_anisotropy','float');
  this.addProperty('transmission_scatter_anisotropy', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission Anisotropy","uimin":"-1.0","uimax":"1.0","uifolder":"Transmission","defaultgeomprop":""});
  this.addInput('transmission_dispersion_scale','float');
  this.addProperty('transmission_dispersion_scale', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission Dispersion Scale","uimin":"0.0","uimax":"1.0","uifolder":"Transmission","defaultgeomprop":""});
  this.addInput('transmission_dispersion_abbe_number','float');
  this.addProperty('transmission_dispersion_abbe_number', 20.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission Dispersion Abbe Number","uimin":"9.0","uimax":"91.0","uifolder":"Transmission","defaultgeomprop":""});
  this.addInput('subsurface_weight','float');
  this.addProperty('subsurface_weight', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Subsurface Weight","uimin":"0.0","uimax":"1.0","uifolder":"Subsurface","defaultgeomprop":""});
  this.addInput('subsurface_color','color3');
  this.addProperty('subsurface_color', [0.8, 0.8, 0.8], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Subsurface Color","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Subsurface","defaultgeomprop":""});
  this.addInput('subsurface_radius','float');
  this.addProperty('subsurface_radius', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Subsurface Radius","uimin":"0.0","uimax":"1.0","uifolder":"Subsurface","defaultgeomprop":""});
  this.addInput('subsurface_radius_scale','color3');
  this.addProperty('subsurface_radius_scale', [1.0, 0.5, 0.25], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Subsurface Radius Scale","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Subsurface","defaultgeomprop":""});
  this.addInput('subsurface_scatter_anisotropy','float');
  this.addProperty('subsurface_scatter_anisotropy', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Subsurface Anisotropy","uimin":"-1.0","uimax":"1.0","uifolder":"Subsurface","defaultgeomprop":""});
  this.addInput('fuzz_weight','float');
  this.addProperty('fuzz_weight', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Fuzz Weight","uimin":"0.0","uimax":"1.0","uifolder":"Fuzz","defaultgeomprop":""});
  this.addInput('fuzz_color','color3');
  this.addProperty('fuzz_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Fuzz Color","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Fuzz","defaultgeomprop":""});
  this.addInput('fuzz_roughness','float');
  this.addProperty('fuzz_roughness', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Fuzz Roughness","uimin":"0.0","uimax":"1.0","uifolder":"Fuzz","defaultgeomprop":""});
  this.addInput('coat_weight','float');
  this.addProperty('coat_weight', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Coat Weight","uimin":"0.0","uimax":"1.0","uifolder":"Coat","defaultgeomprop":""});
  this.addInput('coat_color','color3');
  this.addProperty('coat_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Coat Color","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Coat","defaultgeomprop":""});
  this.addInput('coat_roughness','float');
  this.addProperty('coat_roughness', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Coat Roughness","uimin":"0.0","uimax":"1.0","uifolder":"Coat","defaultgeomprop":""});
  this.addInput('coat_roughness_anisotropy','float');
  this.addProperty('coat_roughness_anisotropy', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Coat Anisotropy","uimin":"0.0","uimax":"1.0","uifolder":"Coat","defaultgeomprop":""});
  this.addInput('coat_ior','float');
  this.addProperty('coat_ior', 1.6, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Coat Index of Refraction","uimin":"1.0","uimax":"3.0","uifolder":"Coat","defaultgeomprop":""});
  this.addInput('coat_darkening','float');
  this.addProperty('coat_darkening', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Coat Darkening","uimin":"0.0","uimax":"1.0","uifolder":"Coat","defaultgeomprop":""});
  this.addInput('thin_film_weight','float');
  this.addProperty('thin_film_weight', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Thin Film Weight","uimin":"0.0","uimax":"1.0","uifolder":"Thin Film","defaultgeomprop":""});
  this.addInput('thin_film_thickness','float');
  this.addProperty('thin_film_thickness', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Thin Film Thickness","uimin":"0.0","uimax":"1.0","uifolder":"Thin Film","defaultgeomprop":""});
  this.addInput('thin_film_ior','float');
  this.addProperty('thin_film_ior', 1.4, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Thin Film Index of Refraction","uimin":"1.0","uimax":"3.0","uifolder":"Thin Film","defaultgeomprop":""});
  this.addInput('emission_luminance','float');
  this.addProperty('emission_luminance', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Emission Luminance","uimin":"0.0","uimax":"1000.0","uifolder":"Emission","defaultgeomprop":""});
  this.addInput('emission_color','color3');
  this.addProperty('emission_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Emission Color","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Emission","defaultgeomprop":""});
  this.addInput('geometry_opacity','float');
  this.addProperty('geometry_opacity', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Opacity","uimin":"0","uimax":"1","uifolder":"Geometry","defaultgeomprop":""});
  this.addInput('geometry_thin_walled','boolean');
  this.addProperty('geometry_thin_walled', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"Thin Walled","uimin":null,"uimax":null,"uifolder":"Geometry","defaultgeomprop":""});
  this.addInput('geometry_normal','vector3');
  this.addProperty('geometry_normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Normal","uimin":null,"uimax":null,"uifolder":"Geometry","defaultgeomprop":"Nworld"});
  this.addInput('geometry_coat_normal','vector3');
  this.addProperty('geometry_coat_normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Coat Normal","uimin":null,"uimax":null,"uifolder":"Geometry","defaultgeomprop":"Nworld"});
  this.addInput('geometry_tangent','vector3');
  this.addProperty('geometry_tangent', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Tangent","uimin":null,"uimax":null,"uifolder":"Geometry","defaultgeomprop":"Tworld"});
  this.addInput('geometry_coat_tangent','vector3');
  this.addProperty('geometry_coat_tangent', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Coat Tangent","uimin":null,"uimax":null,"uifolder":"Geometry","defaultgeomprop":"Tworld"});
  this.addOutput('out','surfaceshader');
  this.title = 'open_pbr_surface_surfaceshader';
  this.desc = "MaterialX:mtlx/pbr/open_pbr_surface_surfaceshader";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#232';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_open_pbr_surface_surfaceshader.nodedef_name = 'ND_open_pbr_surface_surfaceshader';
mtlx_pbr_open_pbr_surface_surfaceshader.nodedef_node = 'open_pbr_surface';
mtlx_pbr_open_pbr_surface_surfaceshader.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/open_pbr_surface.html';
LiteGraph.registerNodeType('mtlx/pbr/open_pbr_surface_surfaceshader',mtlx_pbr_open_pbr_surface_surfaceshader);

/**
  * @function mtlx_pbr_open_pbr_anisotropy
  * @description Library: mtlx. Category: open_pbr_surface. Type: vector2
  *   LiteGraph id: mtlx/pbr/open_pbr_anisotropy
  */
function mtlx_pbr_open_pbr_anisotropy() {
  this.nodedef_icon = './Icons/openpbr_logo.svg';
  this.nodedef_name = 'ND_open_pbr_anisotropy';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'open_pbr_anisotropy';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/open_pbr_anisotropy.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_open_pbr_anisotropy_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('roughness','float');
  this.addProperty('roughness', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('anisotropy','float');
  this.addProperty('anisotropy', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'open_pbr_anisotropy_vector2';
  this.desc = "MaterialX:mtlx/pbr/open_pbr_anisotropy";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_pbr_open_pbr_anisotropy.nodedef_name = 'ND_open_pbr_anisotropy';
mtlx_pbr_open_pbr_anisotropy.nodedef_node = 'open_pbr_anisotropy';
mtlx_pbr_open_pbr_anisotropy.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/open_pbr_anisotropy.html';
LiteGraph.registerNodeType('mtlx/pbr/open_pbr_anisotropy',mtlx_pbr_open_pbr_anisotropy);

/**
  * @function mtlx_pbr_gltf_pbr_surfaceshader
  * @description Library: mtlx. Category: open_pbr_anisotropy. Type: surfaceshader
  *   LiteGraph id: mtlx/pbr/gltf_pbr_surfaceshader
  */
function mtlx_pbr_gltf_pbr_surfaceshader() {
  this.nodedef_icon = './Icons/gltf_logo.webp';
  this.nodedef_name = 'ND_gltf_pbr_surfaceshader';
  this.nodedef_type = 'surfaceshader';
  this.nodedef_node = 'gltf_pbr';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/gltf_pbr.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_gltf_pbr_surfaceshader_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('base_color','color3');
  this.addProperty('base_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Base Color","uimin":"0, 0, 0","uimax":"1, 1, 1","uifolder":"Base","defaultgeomprop":""});
  this.addInput('metallic','float');
  this.addProperty('metallic', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Metallic","uimin":"0","uimax":"1","uifolder":"Base","defaultgeomprop":""});
  this.addInput('roughness','float');
  this.addProperty('roughness', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Roughness","uimin":"0","uimax":"1","uifolder":"Base","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Normal","uimin":null,"uimax":null,"uifolder":"Base","defaultgeomprop":"Nworld"});
  this.addInput('tangent','vector3');
  this.addProperty('tangent', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Tangent","uimin":null,"uimax":null,"uifolder":"Base","defaultgeomprop":"Tworld"});
  this.addInput('occlusion','float');
  this.addProperty('occlusion', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Occlusion","uimin":"0","uimax":"1","uifolder":"Base","defaultgeomprop":""});
  this.addInput('transmission','float');
  this.addProperty('transmission', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission","uimin":"0","uimax":"1","uifolder":"Base","defaultgeomprop":""});
  this.addInput('specular','float');
  this.addProperty('specular', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Specular","uimin":"0","uimax":"1","uifolder":"Base","defaultgeomprop":""});
  this.addInput('specular_color','color3');
  this.addProperty('specular_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Specular Color","uimin":"0, 0, 0","uimax":"1, 1, 1","uifolder":"Base","defaultgeomprop":""});
  this.addInput('ior','float');
  this.addProperty('ior', 1.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Index of Refraction","uimin":"1","uimax":"3","uifolder":"Base","defaultgeomprop":""});
  this.addInput('alpha','float');
  this.addProperty('alpha', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Alpha","uimin":"0","uimax":"1","uifolder":"Alpha","defaultgeomprop":""});
  this.addInput('alpha_mode','integer');
  this.addProperty('alpha_mode', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Alpha Mode","uimin":null,"uimax":null,"uifolder":"Alpha","defaultgeomprop":"","enum":["OPAQUE"," MASK"," BLEND"],"enumvalues":["0"," 1"," 2"]});
  this.addInput('alpha_cutoff','float');
  this.addProperty('alpha_cutoff', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Alpha Cutoff","uimin":"0","uimax":"1","uifolder":"Alpha","defaultgeomprop":""});
  this.addInput('iridescence','float');
  this.addProperty('iridescence', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Iridescence","uimin":"0","uimax":"1","uifolder":"Iridescence","defaultgeomprop":""});
  this.addInput('iridescence_ior','float');
  this.addProperty('iridescence_ior', 1.3, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Iridescence Index of Refraction","uimin":"1","uimax":"3","uifolder":"Iridescence","defaultgeomprop":""});
  this.addInput('iridescence_thickness','float');
  this.addProperty('iridescence_thickness', 100, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Iridescence Thickness","uimin":"100","uimax":"400","uifolder":"Iridescence","defaultgeomprop":""});
  this.addInput('sheen_color','color3');
  this.addProperty('sheen_color', [0, 0, 0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Sheen Color","uimin":"0, 0, 0","uimax":"1, 1, 1","uifolder":"Sheen","defaultgeomprop":""});
  this.addInput('sheen_roughness','float');
  this.addProperty('sheen_roughness', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Sheen Roughness","uimin":"0","uimax":"1","uifolder":"Sheen","defaultgeomprop":""});
  this.addInput('clearcoat','float');
  this.addProperty('clearcoat', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Clearcoat","uimin":"0","uimax":"1","uifolder":"Clearcoat","defaultgeomprop":""});
  this.addInput('clearcoat_roughness','float');
  this.addProperty('clearcoat_roughness', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Clearcoat Roughness","uimin":"0","uimax":"1","uifolder":"Clearcoat","defaultgeomprop":""});
  this.addInput('clearcoat_normal','vector3');
  this.addProperty('clearcoat_normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Clearcoat Normal","uimin":null,"uimax":null,"uifolder":"Clearcoat","defaultgeomprop":"Nworld"});
  this.addInput('emissive','color3');
  this.addProperty('emissive', [0, 0, 0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Emissive","uimin":"0, 0, 0","uimax":"1, 1, 1","uifolder":"Emission","defaultgeomprop":""});
  this.addInput('emissive_strength','float');
  this.addProperty('emissive_strength', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Emissive Strength","uimin":"0","uimax":null,"uifolder":"Emission","defaultgeomprop":""});
  this.addInput('thickness','float');
  this.addProperty('thickness', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Thickness","uimin":"0","uimax":null,"uifolder":"Volume","defaultgeomprop":""});
  this.addInput('attenuation_distance','float');
  this.addProperty('attenuation_distance', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Attenuation Distance","uimin":"0","uimax":null,"uifolder":"Volume","defaultgeomprop":""});
  this.addInput('attenuation_color','color3');
  this.addProperty('attenuation_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Attenuation Color","uimin":"0, 0, 0","uimax":"1, 1, 1","uifolder":"Volume","defaultgeomprop":""});
  this.addOutput('out','surfaceshader');
  this.title = 'gltf_pbr_surfaceshader';
  this.desc = "MaterialX:mtlx/pbr/gltf_pbr_surfaceshader";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#232';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_gltf_pbr_surfaceshader.nodedef_name = 'ND_gltf_pbr_surfaceshader';
mtlx_pbr_gltf_pbr_surfaceshader.nodedef_node = 'gltf_pbr';
mtlx_pbr_gltf_pbr_surfaceshader.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/gltf_pbr.html';
LiteGraph.registerNodeType('mtlx/pbr/gltf_pbr_surfaceshader',mtlx_pbr_gltf_pbr_surfaceshader);

/**
  * @function mtlx_texture2d_gltf_colorimage
  * @description Library: mtlx. Category: gltf_pbr. Type: multioutput
  *   LiteGraph id: mtlx/texture2d/gltf_colorimage
  */
function mtlx_texture2d_gltf_colorimage() {
  this.nodedef_icon = './Icons/gltf_logo.webp';
  this.nodedef_name = 'ND_gltf_colorimage';
  this.nodedef_type = 'multioutput';
  this.nodedef_node = 'gltf_colorimage';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/gltf_colorimage.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_gltf_colorimage_outcolor_genglsl.png';
  this.nodedef_group = 'texture2d';
  this.addInput('file','filename');
  this.addProperty('file', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Image","defaultgeomprop":""});
  this.addInput('default','color4');
  this.addProperty('default', [0, 0, 0, 0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Image","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Image","defaultgeomprop":"UV0"});
  this.addInput('pivot','vector2');
  this.addProperty('pivot', [0, 1], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Image","defaultgeomprop":""});
  this.addInput('scale','vector2');
  this.addProperty('scale', [1, 1], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Image","defaultgeomprop":""});
  this.addInput('rotate','float');
  this.addProperty('rotate', 0, 'float',{"colorspace":"","unit":"degree","unittype":"angle","uiname":"","uimin":"0","uimax":"360","uifolder":"Image","defaultgeomprop":""});
  this.addInput('offset','vector2');
  this.addProperty('offset', [0, 0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Image","defaultgeomprop":""});
  this.addInput('operationorder','integer');
  this.addProperty('operationorder', 1, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Image","defaultgeomprop":""});
  this.addInput('uaddressmode','string');
  this.addProperty('uaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Image","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('vaddressmode','string');
  this.addProperty('vaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Image","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Image","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addInput('color','color4');
  this.addProperty('color', [1, 1, 1, 1], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Color","defaultgeomprop":""});
  this.addInput('geomcolor','color4');
  this.addProperty('geomcolor', [1, 1, 1, 1], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"Geometry Color","uimin":null,"uimax":null,"uifolder":"Color","defaultgeomprop":""});
  this.addOutput('outcolor','color3');
  this.addOutput('outa','float');
  this.title = 'gltf_colorimage_multioutput';
  this.desc = "MaterialX:mtlx/texture2d/gltf_colorimage";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_texture2d_gltf_colorimage.nodedef_name = 'ND_gltf_colorimage';
mtlx_texture2d_gltf_colorimage.nodedef_node = 'gltf_colorimage';
mtlx_texture2d_gltf_colorimage.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/gltf_colorimage.html';
LiteGraph.registerNodeType('mtlx/texture2d/gltf_colorimage',mtlx_texture2d_gltf_colorimage);

/**
  * @function mtlx_texture2d_gltf_image_color3_color3_1_0
  * @description Library: mtlx. Category: gltf_colorimage. Type: color3
  *   LiteGraph id: mtlx/texture2d/gltf_image_color3_color3_1_0
  */
function mtlx_texture2d_gltf_image_color3_color3_1_0() {
  this.nodedef_icon = './Icons/gltf_logo.webp';
  this.nodedef_name = 'ND_gltf_image_color3_color3_1_0';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'gltf_image';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/gltf_image.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_gltf_image_color3_color3_1_0_out_genglsl.png';
  this.nodedef_group = 'texture2d';
  this.addInput('file','filename');
  this.addProperty('file', '', 'filename',{"colorspace":"none","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('factor','color3');
  this.addProperty('factor', [1,1,1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','color3');
  this.addProperty('default', [0, 0, 0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('pivot','vector2');
  this.addProperty('pivot', [0, 1], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('scale','vector2');
  this.addProperty('scale', [1, 1], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('rotate','float');
  this.addProperty('rotate', 0, 'float',{"colorspace":"","unit":"degree","unittype":"angle","uiname":"","uimin":"0","uimax":"360","uifolder":"","defaultgeomprop":""});
  this.addInput('offset','vector2');
  this.addProperty('offset', [0, 0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('operationorder','integer');
  this.addProperty('operationorder', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('uaddressmode','string');
  this.addProperty('uaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('vaddressmode','string');
  this.addProperty('vaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addOutput('out','color3');
  this.title = 'gltf_image_color3';
  this.desc = "MaterialX:mtlx/texture2d/gltf_image_color3_color3_1_0";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_texture2d_gltf_image_color3_color3_1_0.nodedef_name = 'ND_gltf_image_color3_color3_1_0';
mtlx_texture2d_gltf_image_color3_color3_1_0.nodedef_node = 'gltf_image';
mtlx_texture2d_gltf_image_color3_color3_1_0.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/gltf_image.html';
LiteGraph.registerNodeType('mtlx/texture2d/gltf_image_color3_color3_1_0',mtlx_texture2d_gltf_image_color3_color3_1_0);

/**
  * @function mtlx_texture2d_gltf_image_color4_color4_1_0
  * @description Library: mtlx. Category: gltf_image. Type: color4
  *   LiteGraph id: mtlx/texture2d/gltf_image_color4_color4_1_0
  */
function mtlx_texture2d_gltf_image_color4_color4_1_0() {
  this.nodedef_icon = './Icons/gltf_logo.webp';
  this.nodedef_name = 'ND_gltf_image_color4_color4_1_0';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'gltf_image';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/gltf_image.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_gltf_image_color4_color4_1_0_out_genglsl.png';
  this.nodedef_group = 'texture2d';
  this.addInput('file','filename');
  this.addProperty('file', '', 'filename',{"colorspace":"none","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('factor','color4');
  this.addProperty('factor', [1,1,1,1], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','color4');
  this.addProperty('default', [0, 0, 0, 0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('pivot','vector2');
  this.addProperty('pivot', [0, 1], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('scale','vector2');
  this.addProperty('scale', [1, 1], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('rotate','float');
  this.addProperty('rotate', 0, 'float',{"colorspace":"","unit":"degree","unittype":"angle","uiname":"","uimin":"0","uimax":"360","uifolder":"","defaultgeomprop":""});
  this.addInput('offset','vector2');
  this.addProperty('offset', [0, 0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('operationorder','integer');
  this.addProperty('operationorder', 1, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('uaddressmode','string');
  this.addProperty('uaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('vaddressmode','string');
  this.addProperty('vaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addOutput('out','color4');
  this.title = 'gltf_image_color4';
  this.desc = "MaterialX:mtlx/texture2d/gltf_image_color4_color4_1_0";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_texture2d_gltf_image_color4_color4_1_0.nodedef_name = 'ND_gltf_image_color4_color4_1_0';
mtlx_texture2d_gltf_image_color4_color4_1_0.nodedef_node = 'gltf_image';
mtlx_texture2d_gltf_image_color4_color4_1_0.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/gltf_image.html';
LiteGraph.registerNodeType('mtlx/texture2d/gltf_image_color4_color4_1_0',mtlx_texture2d_gltf_image_color4_color4_1_0);

/**
  * @function mtlx_texture2d_gltf_image_float_float_1_0
  * @description Library: mtlx. Category: gltf_image. Type: float
  *   LiteGraph id: mtlx/texture2d/gltf_image_float_float_1_0
  */
function mtlx_texture2d_gltf_image_float_float_1_0() {
  this.nodedef_icon = './Icons/gltf_logo.webp';
  this.nodedef_name = 'ND_gltf_image_float_float_1_0';
  this.nodedef_type = 'float';
  this.nodedef_node = 'gltf_image';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/gltf_image.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_gltf_image_float_float_1_0_out_genglsl.png';
  this.nodedef_group = 'texture2d';
  this.addInput('file','filename');
  this.addProperty('file', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('factor','float');
  this.addProperty('factor', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','float');
  this.addProperty('default', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('pivot','vector2');
  this.addProperty('pivot', [0, 1], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('scale','vector2');
  this.addProperty('scale', [1, 1], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('rotate','float');
  this.addProperty('rotate', 0, 'float',{"colorspace":"","unit":"degree","unittype":"angle","uiname":"","uimin":"0","uimax":"360","uifolder":"","defaultgeomprop":""});
  this.addInput('offset','vector2');
  this.addProperty('offset', [0, 0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('operationorder','integer');
  this.addProperty('operationorder', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('uaddressmode','string');
  this.addProperty('uaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('vaddressmode','string');
  this.addProperty('vaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addOutput('out','float');
  this.title = 'gltf_image_float';
  this.desc = "MaterialX:mtlx/texture2d/gltf_image_float_float_1_0";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_texture2d_gltf_image_float_float_1_0.nodedef_name = 'ND_gltf_image_float_float_1_0';
mtlx_texture2d_gltf_image_float_float_1_0.nodedef_node = 'gltf_image';
mtlx_texture2d_gltf_image_float_float_1_0.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/gltf_image.html';
LiteGraph.registerNodeType('mtlx/texture2d/gltf_image_float_float_1_0',mtlx_texture2d_gltf_image_float_float_1_0);

/**
  * @function mtlx_texture2d_gltf_image_vector3_vector3_1_0
  * @description Library: mtlx. Category: gltf_image. Type: vector3
  *   LiteGraph id: mtlx/texture2d/gltf_image_vector3_vector3_1_0
  */
function mtlx_texture2d_gltf_image_vector3_vector3_1_0() {
  this.nodedef_icon = './Icons/gltf_logo.webp';
  this.nodedef_name = 'ND_gltf_image_vector3_vector3_1_0';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'gltf_image';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/gltf_image.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_gltf_image_vector3_vector3_1_0_out_genglsl.png';
  this.nodedef_group = 'texture2d';
  this.addInput('file','filename');
  this.addProperty('file', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','vector3');
  this.addProperty('default', [0, 0, 0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('pivot','vector2');
  this.addProperty('pivot', [0, 1], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('scale','vector2');
  this.addProperty('scale', [1, 1], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('rotate','float');
  this.addProperty('rotate', 0, 'float',{"colorspace":"","unit":"degree","unittype":"angle","uiname":"","uimin":"0","uimax":"360","uifolder":"","defaultgeomprop":""});
  this.addInput('offset','vector2');
  this.addProperty('offset', [0, 0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('operationorder','integer');
  this.addProperty('operationorder', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('uaddressmode','string');
  this.addProperty('uaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('vaddressmode','string');
  this.addProperty('vaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addOutput('out','vector3');
  this.title = 'gltf_image_vector3';
  this.desc = "MaterialX:mtlx/texture2d/gltf_image_vector3_vector3_1_0";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_texture2d_gltf_image_vector3_vector3_1_0.nodedef_name = 'ND_gltf_image_vector3_vector3_1_0';
mtlx_texture2d_gltf_image_vector3_vector3_1_0.nodedef_node = 'gltf_image';
mtlx_texture2d_gltf_image_vector3_vector3_1_0.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/gltf_image.html';
LiteGraph.registerNodeType('mtlx/texture2d/gltf_image_vector3_vector3_1_0',mtlx_texture2d_gltf_image_vector3_vector3_1_0);

/**
  * @function mtlx_texture2d_gltf_normalmap_vector3_1_0
  * @description Library: mtlx. Category: gltf_image. Type: vector3
  *   LiteGraph id: mtlx/texture2d/gltf_normalmap_vector3_1_0
  */
function mtlx_texture2d_gltf_normalmap_vector3_1_0() {
  this.nodedef_icon = './Icons/gltf_logo.webp';
  this.nodedef_name = 'ND_gltf_normalmap_vector3_1_0';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'gltf_normalmap';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/gltf_normalmap.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_gltf_normalmap_vector3_1_0_out_genglsl.png';
  this.nodedef_group = 'texture2d';
  this.addInput('file','filename');
  this.addProperty('file', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('default','vector3');
  this.addProperty('default', [0.5, 0.5, 1], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('pivot','vector2');
  this.addProperty('pivot', [0, 1], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('scale','vector2');
  this.addProperty('scale', [1, 1], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('rotate','float');
  this.addProperty('rotate', 0, 'float',{"colorspace":"","unit":"degree","unittype":"angle","uiname":"","uimin":"0","uimax":"360","uifolder":"","defaultgeomprop":""});
  this.addInput('offset','vector2');
  this.addProperty('offset', [0, 0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('operationorder','integer');
  this.addProperty('operationorder', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('uaddressmode','string');
  this.addProperty('uaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('vaddressmode','string');
  this.addProperty('vaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addOutput('out','vector3');
  this.title = 'gltf_normalmap_vector3';
  this.desc = "MaterialX:mtlx/texture2d/gltf_normalmap_vector3_1_0";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_texture2d_gltf_normalmap_vector3_1_0.nodedef_name = 'ND_gltf_normalmap_vector3_1_0';
mtlx_texture2d_gltf_normalmap_vector3_1_0.nodedef_node = 'gltf_normalmap';
mtlx_texture2d_gltf_normalmap_vector3_1_0.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/gltf_normalmap.html';
LiteGraph.registerNodeType('mtlx/texture2d/gltf_normalmap_vector3_1_0',mtlx_texture2d_gltf_normalmap_vector3_1_0);

/**
  * @function mtlx_texture2d_gltf_iridescence_thickness_float_1_0
  * @description Library: mtlx. Category: gltf_normalmap. Type: float
  *   LiteGraph id: mtlx/texture2d/gltf_iridescence_thickness_float_1_0
  */
function mtlx_texture2d_gltf_iridescence_thickness_float_1_0() {
  this.nodedef_icon = './Icons/gltf_logo.webp';
  this.nodedef_name = 'ND_gltf_iridescence_thickness_float_1_0';
  this.nodedef_type = 'float';
  this.nodedef_node = 'gltf_iridescence_thickness';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/gltf_iridescence_thickness.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_gltf_iridescence_thickness_float_1_0_out_genglsl.png';
  this.nodedef_group = 'texture2d';
  this.addInput('file','filename');
  this.addProperty('file', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Image","defaultgeomprop":""});
  this.addInput('default','vector3');
  this.addProperty('default', [0, 0, 0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Image","defaultgeomprop":""});
  this.addInput('texcoord','vector2');
  this.addProperty('texcoord', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Image","defaultgeomprop":"UV0"});
  this.addInput('pivot','vector2');
  this.addProperty('pivot', [0, 0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Image","defaultgeomprop":""});
  this.addInput('scale','vector2');
  this.addProperty('scale', [1, 1], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Image","defaultgeomprop":""});
  this.addInput('rotate','float');
  this.addProperty('rotate', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Image","defaultgeomprop":""});
  this.addInput('offset','vector2');
  this.addProperty('offset', [0, 0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Image","defaultgeomprop":""});
  this.addInput('uaddressmode','string');
  this.addProperty('uaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Image","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('vaddressmode','string');
  this.addProperty('vaddressmode', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Image","defaultgeomprop":"","enum":["constant","clamp","periodic","mirror"]});
  this.addInput('filtertype','string');
  this.addProperty('filtertype', 'linear', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Image","defaultgeomprop":"","enum":["closest","linear","cubic"]});
  this.addInput('thicknessMin','float');
  this.addProperty('thicknessMin', 100, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Thickness","defaultgeomprop":""});
  this.addInput('thicknessMax','float');
  this.addProperty('thicknessMax', 400, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"Thickness","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'gltf_iridescence_thickness_float';
  this.desc = "MaterialX:mtlx/texture2d/gltf_iridescence_thickness_float_1_0";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_texture2d_gltf_iridescence_thickness_float_1_0.nodedef_name = 'ND_gltf_iridescence_thickness_float_1_0';
mtlx_texture2d_gltf_iridescence_thickness_float_1_0.nodedef_node = 'gltf_iridescence_thickness';
mtlx_texture2d_gltf_iridescence_thickness_float_1_0.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/gltf_iridescence_thickness.html';
LiteGraph.registerNodeType('mtlx/texture2d/gltf_iridescence_thickness_float_1_0',mtlx_texture2d_gltf_iridescence_thickness_float_1_0);

/**
  * @function mtlx_pbr_UsdPreviewSurface_surfaceshader
  * @description Library: mtlx. Category: gltf_iridescence_thickness. Type: surfaceshader
  *   LiteGraph id: mtlx/pbr/UsdPreviewSurface_surfaceshader
  */
function mtlx_pbr_UsdPreviewSurface_surfaceshader() {
  this.nodedef_icon = './Icons/openusd_logo.webp';
  this.nodedef_name = 'ND_UsdPreviewSurface_surfaceshader';
  this.nodedef_type = 'surfaceshader';
  this.nodedef_node = 'UsdPreviewSurface';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/UsdPreviewSurface.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_UsdPreviewSurface_surfaceshader_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('diffuseColor','color3');
  this.addProperty('diffuseColor', [0.18, 0.18, 0.18], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0,0,0","uimax":"1,1,1","uifolder":"","defaultgeomprop":""});
  this.addInput('emissiveColor','color3');
  this.addProperty('emissiveColor', [0, 0, 0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0,0,0","uimax":"1,1,1","uifolder":"","defaultgeomprop":""});
  this.addInput('useSpecularWorkflow','integer');
  this.addProperty('useSpecularWorkflow', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0","uimax":"1","uifolder":"","defaultgeomprop":""});
  this.addInput('specularColor','color3');
  this.addProperty('specularColor', [0, 0, 0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0,0,0","uimax":"1,1,1","uifolder":"","defaultgeomprop":""});
  this.addInput('metallic','float');
  this.addProperty('metallic', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('roughness','float');
  this.addProperty('roughness', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('clearcoat','float');
  this.addProperty('clearcoat', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('clearcoatRoughness','float');
  this.addProperty('clearcoatRoughness', 0.01, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('opacity','float');
  this.addProperty('opacity', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('opacityThreshold','float');
  this.addProperty('opacityThreshold', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('ior','float');
  this.addProperty('ior', 1.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"1.0","uimax":"3.0","uifolder":"","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0, 0, 1], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":[-1,-1,-1],"uimax":[1,1,1],"uifolder":"","defaultgeomprop":""});
  this.addInput('displacement','float');
  this.addProperty('displacement', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('occlusion','float');
  this.addProperty('occlusion', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','surfaceshader');
  this.title = 'UsdPreviewSurface_surfaceshader';
  this.desc = "MaterialX:mtlx/pbr/UsdPreviewSurface_surfaceshader";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#232';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_UsdPreviewSurface_surfaceshader.nodedef_name = 'ND_UsdPreviewSurface_surfaceshader';
mtlx_pbr_UsdPreviewSurface_surfaceshader.nodedef_node = 'UsdPreviewSurface';
mtlx_pbr_UsdPreviewSurface_surfaceshader.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/UsdPreviewSurface.html';
LiteGraph.registerNodeType('mtlx/pbr/UsdPreviewSurface_surfaceshader',mtlx_pbr_UsdPreviewSurface_surfaceshader);

/**
  * @function mtlx_texture2d_UsdUVTexture
  * @description Library: mtlx. Category: UsdPreviewSurface. Type: multioutput
  *   LiteGraph id: mtlx/texture2d/UsdUVTexture
  */
function mtlx_texture2d_UsdUVTexture() {
  this.nodedef_icon = './Icons/openusd_logo.webp';
  this.nodedef_name = 'ND_UsdUVTexture';
  this.nodedef_type = 'multioutput';
  this.nodedef_node = 'UsdUVTexture';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/UsdUVTexture.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_UsdUVTexture_r_genglsl.png';
  this.nodedef_group = 'texture2d';
  this.addInput('file','filename');
  this.addProperty('file', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('st','vector2');
  this.addProperty('st', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('wrapS','string');
  this.addProperty('wrapS', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["black","clamp","periodic","mirror"]});
  this.addInput('wrapT','string');
  this.addProperty('wrapT', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["black","clamp","periodic","mirror"]});
  this.addInput('fallback','color4');
  this.addProperty('fallback', [0, 0, 0, 1], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('scale','color4');
  this.addProperty('scale', [1, 1, 1, 1], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bias','color4');
  this.addProperty('bias', [0, 0, 0, 0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('r','float');
  this.addOutput('g','float');
  this.addOutput('b','float');
  this.addOutput('a','float');
  this.addOutput('rgb','color3');
  this.addOutput('rgba','color4');
  this.title = 'UsdUVTexture_multioutput';
  this.desc = "MaterialX:mtlx/texture2d/UsdUVTexture";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_texture2d_UsdUVTexture.nodedef_name = 'ND_UsdUVTexture';
mtlx_texture2d_UsdUVTexture.nodedef_node = 'UsdUVTexture';
mtlx_texture2d_UsdUVTexture.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/UsdUVTexture.html';
LiteGraph.registerNodeType('mtlx/texture2d/UsdUVTexture',mtlx_texture2d_UsdUVTexture);

/**
  * @function mtlx_texture2d_UsdUVTexture_23
  * @description Library: mtlx. Category: UsdUVTexture. Type: multioutput
  *   LiteGraph id: mtlx/texture2d/UsdUVTexture_23
  */
function mtlx_texture2d_UsdUVTexture_23() {
  this.nodedef_icon = './Icons/openusd_logo.webp';
  this.nodedef_name = 'ND_UsdUVTexture_23';
  this.nodedef_type = 'multioutput';
  this.nodedef_node = 'UsdUVTexture';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/UsdUVTexture.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_UsdUVTexture_23_r_genglsl.png';
  this.nodedef_group = 'texture2d';
  this.addInput('file','filename');
  this.addProperty('file', '', 'filename',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('st','vector2');
  this.addProperty('st', [0.0, 0.0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"UV0"});
  this.addInput('wrapS','string');
  this.addProperty('wrapS', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["black","clamp","periodic","mirror"]});
  this.addInput('wrapT','string');
  this.addProperty('wrapT', 'periodic', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"","enum":["black","clamp","periodic","mirror"]});
  this.addInput('fallback','color4');
  this.addProperty('fallback', [0, 0, 0, 1], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('scale','color4');
  this.addProperty('scale', [1, 1, 1, 1], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('bias','color4');
  this.addProperty('bias', [0, 0, 0, 0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('r','float');
  this.addOutput('g','float');
  this.addOutput('b','float');
  this.addOutput('a','float');
  this.addOutput('rgb','color3');
  this.title = 'UsdUVTexture_multioutput';
  this.desc = "MaterialX:mtlx/texture2d/UsdUVTexture_23";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_texture2d_UsdUVTexture_23.nodedef_name = 'ND_UsdUVTexture_23';
mtlx_texture2d_UsdUVTexture_23.nodedef_node = 'UsdUVTexture';
mtlx_texture2d_UsdUVTexture_23.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/UsdUVTexture.html';
LiteGraph.registerNodeType('mtlx/texture2d/UsdUVTexture_23',mtlx_texture2d_UsdUVTexture_23);

/**
  * @function mtlx_geometric_UsdPrimvarReader_integer
  * @description Library: mtlx. Category: UsdUVTexture. Type: integer
  *   LiteGraph id: mtlx/geometric/UsdPrimvarReader_integer
  */
function mtlx_geometric_UsdPrimvarReader_integer() {
  this.nodedef_icon = './Icons/openusd_logo.webp';
  this.nodedef_name = 'ND_UsdPrimvarReader_integer';
  this.nodedef_type = 'integer';
  this.nodedef_node = 'UsdPrimvarReader';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/UsdPrimvarReader.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_UsdPrimvarReader_integer_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('varname','string');
  this.addProperty('varname', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('fallback','integer');
  this.addProperty('fallback', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','integer');
  this.title = 'UsdPrimvarReader_integer';
  this.desc = "MaterialX:mtlx/geometric/UsdPrimvarReader_integer";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#A32';
}
mtlx_geometric_UsdPrimvarReader_integer.nodedef_name = 'ND_UsdPrimvarReader_integer';
mtlx_geometric_UsdPrimvarReader_integer.nodedef_node = 'UsdPrimvarReader';
mtlx_geometric_UsdPrimvarReader_integer.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/UsdPrimvarReader.html';
LiteGraph.registerNodeType('mtlx/geometric/UsdPrimvarReader_integer',mtlx_geometric_UsdPrimvarReader_integer);

/**
  * @function mtlx_geometric_UsdPrimvarReader_boolean
  * @description Library: mtlx. Category: UsdPrimvarReader. Type: boolean
  *   LiteGraph id: mtlx/geometric/UsdPrimvarReader_boolean
  */
function mtlx_geometric_UsdPrimvarReader_boolean() {
  this.nodedef_icon = './Icons/openusd_logo.webp';
  this.nodedef_name = 'ND_UsdPrimvarReader_boolean';
  this.nodedef_type = 'boolean';
  this.nodedef_node = 'UsdPrimvarReader';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/UsdPrimvarReader.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_UsdPrimvarReader_boolean_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('varname','string');
  this.addProperty('varname', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('fallback','boolean');
  this.addProperty('fallback', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','boolean');
  this.title = 'UsdPrimvarReader_boolean';
  this.desc = "MaterialX:mtlx/geometric/UsdPrimvarReader_boolean";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#060';
}
mtlx_geometric_UsdPrimvarReader_boolean.nodedef_name = 'ND_UsdPrimvarReader_boolean';
mtlx_geometric_UsdPrimvarReader_boolean.nodedef_node = 'UsdPrimvarReader';
mtlx_geometric_UsdPrimvarReader_boolean.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/UsdPrimvarReader.html';
LiteGraph.registerNodeType('mtlx/geometric/UsdPrimvarReader_boolean',mtlx_geometric_UsdPrimvarReader_boolean);

/**
  * @function mtlx_geometric_UsdPrimvarReader_string
  * @description Library: mtlx. Category: UsdPrimvarReader. Type: string
  *   LiteGraph id: mtlx/geometric/UsdPrimvarReader_string
  */
function mtlx_geometric_UsdPrimvarReader_string() {
  this.nodedef_icon = './Icons/openusd_logo.webp';
  this.nodedef_name = 'ND_UsdPrimvarReader_string';
  this.nodedef_type = 'string';
  this.nodedef_node = 'UsdPrimvarReader';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/UsdPrimvarReader.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_UsdPrimvarReader_string_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('varname','string');
  this.addProperty('varname', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('fallback','string');
  this.addProperty('fallback', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','string');
  this.title = 'UsdPrimvarReader_string';
  this.desc = "MaterialX:mtlx/geometric/UsdPrimvarReader_string";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#395';
}
mtlx_geometric_UsdPrimvarReader_string.nodedef_name = 'ND_UsdPrimvarReader_string';
mtlx_geometric_UsdPrimvarReader_string.nodedef_node = 'UsdPrimvarReader';
mtlx_geometric_UsdPrimvarReader_string.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/UsdPrimvarReader.html';
LiteGraph.registerNodeType('mtlx/geometric/UsdPrimvarReader_string',mtlx_geometric_UsdPrimvarReader_string);

/**
  * @function mtlx_geometric_UsdPrimvarReader_float
  * @description Library: mtlx. Category: UsdPrimvarReader. Type: float
  *   LiteGraph id: mtlx/geometric/UsdPrimvarReader_float
  */
function mtlx_geometric_UsdPrimvarReader_float() {
  this.nodedef_icon = './Icons/openusd_logo.webp';
  this.nodedef_name = 'ND_UsdPrimvarReader_float';
  this.nodedef_type = 'float';
  this.nodedef_node = 'UsdPrimvarReader';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/UsdPrimvarReader.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_UsdPrimvarReader_float_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('varname','string');
  this.addProperty('varname', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('fallback','float');
  this.addProperty('fallback', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','float');
  this.title = 'UsdPrimvarReader_float';
  this.desc = "MaterialX:mtlx/geometric/UsdPrimvarReader_float";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#161';
}
mtlx_geometric_UsdPrimvarReader_float.nodedef_name = 'ND_UsdPrimvarReader_float';
mtlx_geometric_UsdPrimvarReader_float.nodedef_node = 'UsdPrimvarReader';
mtlx_geometric_UsdPrimvarReader_float.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/UsdPrimvarReader.html';
LiteGraph.registerNodeType('mtlx/geometric/UsdPrimvarReader_float',mtlx_geometric_UsdPrimvarReader_float);

/**
  * @function mtlx_geometric_UsdPrimvarReader_vector2
  * @description Library: mtlx. Category: UsdPrimvarReader. Type: vector2
  *   LiteGraph id: mtlx/geometric/UsdPrimvarReader_vector2
  */
function mtlx_geometric_UsdPrimvarReader_vector2() {
  this.nodedef_icon = './Icons/openusd_logo.webp';
  this.nodedef_name = 'ND_UsdPrimvarReader_vector2';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'UsdPrimvarReader';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/UsdPrimvarReader.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_UsdPrimvarReader_vector2_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('varname','string');
  this.addProperty('varname', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('fallback','vector2');
  this.addProperty('fallback', [0, 0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'UsdPrimvarReader_vector2';
  this.desc = "MaterialX:mtlx/geometric/UsdPrimvarReader_vector2";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_geometric_UsdPrimvarReader_vector2.nodedef_name = 'ND_UsdPrimvarReader_vector2';
mtlx_geometric_UsdPrimvarReader_vector2.nodedef_node = 'UsdPrimvarReader';
mtlx_geometric_UsdPrimvarReader_vector2.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/UsdPrimvarReader.html';
LiteGraph.registerNodeType('mtlx/geometric/UsdPrimvarReader_vector2',mtlx_geometric_UsdPrimvarReader_vector2);

/**
  * @function mtlx_geometric_UsdPrimvarReader_vector3
  * @description Library: mtlx. Category: UsdPrimvarReader. Type: vector3
  *   LiteGraph id: mtlx/geometric/UsdPrimvarReader_vector3
  */
function mtlx_geometric_UsdPrimvarReader_vector3() {
  this.nodedef_icon = './Icons/openusd_logo.webp';
  this.nodedef_name = 'ND_UsdPrimvarReader_vector3';
  this.nodedef_type = 'vector3';
  this.nodedef_node = 'UsdPrimvarReader';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/UsdPrimvarReader.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_UsdPrimvarReader_vector3_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('varname','string');
  this.addProperty('varname', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('fallback','vector3');
  this.addProperty('fallback', [0, 0, 0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector3');
  this.title = 'UsdPrimvarReader_vector3';
  this.desc = "MaterialX:mtlx/geometric/UsdPrimvarReader_vector3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#465';
}
mtlx_geometric_UsdPrimvarReader_vector3.nodedef_name = 'ND_UsdPrimvarReader_vector3';
mtlx_geometric_UsdPrimvarReader_vector3.nodedef_node = 'UsdPrimvarReader';
mtlx_geometric_UsdPrimvarReader_vector3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/UsdPrimvarReader.html';
LiteGraph.registerNodeType('mtlx/geometric/UsdPrimvarReader_vector3',mtlx_geometric_UsdPrimvarReader_vector3);

/**
  * @function mtlx_geometric_UsdPrimvarReader_vector4
  * @description Library: mtlx. Category: UsdPrimvarReader. Type: vector4
  *   LiteGraph id: mtlx/geometric/UsdPrimvarReader_vector4
  */
function mtlx_geometric_UsdPrimvarReader_vector4() {
  this.nodedef_icon = './Icons/openusd_logo.webp';
  this.nodedef_name = 'ND_UsdPrimvarReader_vector4';
  this.nodedef_type = 'vector4';
  this.nodedef_node = 'UsdPrimvarReader';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/UsdPrimvarReader.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_UsdPrimvarReader_vector4_out_genglsl.png';
  this.nodedef_group = 'geometric';
  this.addInput('varname','string');
  this.addProperty('varname', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('fallback','vector4');
  this.addProperty('fallback', [0, 0, 0, 0], 'vector4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector4');
  this.title = 'UsdPrimvarReader_vector4';
  this.desc = "MaterialX:mtlx/geometric/UsdPrimvarReader_vector4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#275';
}
mtlx_geometric_UsdPrimvarReader_vector4.nodedef_name = 'ND_UsdPrimvarReader_vector4';
mtlx_geometric_UsdPrimvarReader_vector4.nodedef_node = 'UsdPrimvarReader';
mtlx_geometric_UsdPrimvarReader_vector4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/UsdPrimvarReader.html';
LiteGraph.registerNodeType('mtlx/geometric/UsdPrimvarReader_vector4',mtlx_geometric_UsdPrimvarReader_vector4);

/**
  * @function mtlx_math_UsdTransform2d
  * @description Library: mtlx. Category: UsdPrimvarReader. Type: vector2
  *   LiteGraph id: mtlx/math/UsdTransform2d
  */
function mtlx_math_UsdTransform2d() {
  this.nodedef_icon = './Icons/openusd_logo.webp';
  this.nodedef_name = 'ND_UsdTransform2d';
  this.nodedef_type = 'vector2';
  this.nodedef_node = 'UsdTransform2d';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/UsdTransform2d.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_UsdTransform2d_out_genglsl.png';
  this.nodedef_group = 'math';
  this.addInput('in','vector2');
  this.addProperty('in', [0, 0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('rotation','float');
  this.addProperty('rotation', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('scale','vector2');
  this.addProperty('scale', [1, 1], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('translation','vector2');
  this.addProperty('translation', [0, 0], 'vector2',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','vector2');
  this.title = 'UsdTransform2d_vector2';
  this.desc = "MaterialX:mtlx/math/UsdTransform2d";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#265';
}
mtlx_math_UsdTransform2d.nodedef_name = 'ND_UsdTransform2d';
mtlx_math_UsdTransform2d.nodedef_node = 'UsdTransform2d';
mtlx_math_UsdTransform2d.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/UsdTransform2d.html';
LiteGraph.registerNodeType('mtlx/math/UsdTransform2d',mtlx_math_UsdTransform2d);

/**
  * @function mtlx_pbr_disney_brdf_2012_surface
  * @description Library: mtlx. Category: UsdTransform2d. Type: surfaceshader
  *   LiteGraph id: mtlx/pbr/disney_brdf_2012_surface
  */
function mtlx_pbr_disney_brdf_2012_surface() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_disney_brdf_2012_surface';
  this.nodedef_type = 'surfaceshader';
  this.nodedef_node = 'disney_brdf_2012';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/disney_brdf_2012.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_disney_brdf_2012_surface_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('baseColor','color3');
  this.addProperty('baseColor', [0.16, 0.16, 0.16], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('metallic','float');
  this.addProperty('metallic', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('subsurface','float');
  this.addProperty('subsurface', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('specular','float');
  this.addProperty('specular', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('roughness','float');
  this.addProperty('roughness', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('specularTint','float');
  this.addProperty('specularTint', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('anisotropic','float');
  this.addProperty('anisotropic', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('sheen','float');
  this.addProperty('sheen', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('sheenTint','float');
  this.addProperty('sheenTint', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('clearcoat','float');
  this.addProperty('clearcoat', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('clearcoatGloss','float');
  this.addProperty('clearcoatGloss', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','surfaceshader');
  this.title = 'disney_brdf_2012_surfaceshader';
  this.desc = "MaterialX:mtlx/pbr/disney_brdf_2012_surface";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#232';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_disney_brdf_2012_surface.nodedef_name = 'ND_disney_brdf_2012_surface';
mtlx_pbr_disney_brdf_2012_surface.nodedef_node = 'disney_brdf_2012';
mtlx_pbr_disney_brdf_2012_surface.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/disney_brdf_2012.html';
LiteGraph.registerNodeType('mtlx/pbr/disney_brdf_2012_surface',mtlx_pbr_disney_brdf_2012_surface);

/**
  * @function mtlx_pbr_disney_bsdf_2015_surface
  * @description Library: mtlx. Category: disney_brdf_2012. Type: surfaceshader
  *   LiteGraph id: mtlx/pbr/disney_bsdf_2015_surface
  */
function mtlx_pbr_disney_bsdf_2015_surface() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_disney_bsdf_2015_surface';
  this.nodedef_type = 'surfaceshader';
  this.nodedef_node = 'disney_bsdf_2015';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/disney_bsdf_2015.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_disney_bsdf_2015_surface_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('baseColor','color3');
  this.addProperty('baseColor', [0.16, 0.16, 0.16], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('metallic','float');
  this.addProperty('metallic', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('roughness','float');
  this.addProperty('roughness', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('anisotropic','float');
  this.addProperty('anisotropic', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('specularTint','float');
  this.addProperty('specularTint', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('sheen','float');
  this.addProperty('sheen', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('sheenTint','float');
  this.addProperty('sheenTint', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('clearcoat','float');
  this.addProperty('clearcoat', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('clearcoatGloss','float');
  this.addProperty('clearcoatGloss', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('specTrans','float');
  this.addProperty('specTrans', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('ior','float');
  this.addProperty('ior', 1.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('scatterDistance','vector3');
  this.addProperty('scatterDistance', [0, 0, 0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('flatness','float');
  this.addProperty('flatness', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('diffTrans','float');
  this.addProperty('diffTrans', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('thin','boolean');
  this.addProperty('thin', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','surfaceshader');
  this.title = 'disney_bsdf_2015_surfaceshader';
  this.desc = "MaterialX:mtlx/pbr/disney_bsdf_2015_surface";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#232';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_disney_bsdf_2015_surface.nodedef_name = 'ND_disney_bsdf_2015_surface';
mtlx_pbr_disney_bsdf_2015_surface.nodedef_node = 'disney_bsdf_2015';
mtlx_pbr_disney_bsdf_2015_surface.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/disney_bsdf_2015.html';
LiteGraph.registerNodeType('mtlx/pbr/disney_bsdf_2015_surface',mtlx_pbr_disney_bsdf_2015_surface);

/**
  * @function mtlx_pbr_standard_surface_surfaceshader
  * @description Library: mtlx. Category: disney_bsdf_2015. Type: surfaceshader
  *   LiteGraph id: mtlx/pbr/standard_surface_surfaceshader
  */
function mtlx_pbr_standard_surface_surfaceshader() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_standard_surface_surfaceshader';
  this.nodedef_type = 'surfaceshader';
  this.nodedef_node = 'standard_surface';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/standard_surface.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_standard_surface_surfaceshader_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('base','float');
  this.addProperty('base', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Base","uimin":"0.0","uimax":"1.0","uifolder":"Base","defaultgeomprop":""});
  this.addInput('base_color','color3');
  this.addProperty('base_color', [0.8, 0.8, 0.8], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Base Color","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Base","defaultgeomprop":""});
  this.addInput('diffuse_roughness','float');
  this.addProperty('diffuse_roughness', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Diffuse Roughness","uimin":"0.0","uimax":"1.0","uifolder":"Base","defaultgeomprop":""});
  this.addInput('metalness','float');
  this.addProperty('metalness', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Metalness","uimin":"0.0","uimax":"1.0","uifolder":"Base","defaultgeomprop":""});
  this.addInput('specular','float');
  this.addProperty('specular', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Specular","uimin":"0.0","uimax":"1.0","uifolder":"Specular","defaultgeomprop":""});
  this.addInput('specular_color','color3');
  this.addProperty('specular_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Specular Color","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Specular","defaultgeomprop":""});
  this.addInput('specular_roughness','float');
  this.addProperty('specular_roughness', 0.2, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Specular Roughness","uimin":"0.0","uimax":"1.0","uifolder":"Specular","defaultgeomprop":""});
  this.addInput('specular_IOR','float');
  this.addProperty('specular_IOR', 1.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Index of Refraction","uimin":"1.0","uimax":"3.0","uifolder":"Specular","defaultgeomprop":""});
  this.addInput('specular_anisotropy','float');
  this.addProperty('specular_anisotropy', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Specular Anisotropy","uimin":"0.0","uimax":"1.0","uifolder":"Specular","defaultgeomprop":""});
  this.addInput('specular_rotation','float');
  this.addProperty('specular_rotation', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Specular Rotation","uimin":"0.0","uimax":"1.0","uifolder":"Specular","defaultgeomprop":""});
  this.addInput('transmission','float');
  this.addProperty('transmission', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission","uimin":"0.0","uimax":"1.0","uifolder":"Transmission","defaultgeomprop":""});
  this.addInput('transmission_color','color3');
  this.addProperty('transmission_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission Color","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Transmission","defaultgeomprop":""});
  this.addInput('transmission_depth','float');
  this.addProperty('transmission_depth', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission Depth","uimin":"0.0","uimax":"100.0","uifolder":"Transmission","defaultgeomprop":""});
  this.addInput('transmission_scatter','color3');
  this.addProperty('transmission_scatter', [0, 0, 0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission Scatter","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Transmission","defaultgeomprop":""});
  this.addInput('transmission_scatter_anisotropy','float');
  this.addProperty('transmission_scatter_anisotropy', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission Anisotropy","uimin":"0.0","uimax":"1.0","uifolder":"Transmission","defaultgeomprop":""});
  this.addInput('transmission_dispersion','float');
  this.addProperty('transmission_dispersion', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission Dispersion","uimin":"0.0","uimax":"100.0","uifolder":"Transmission","defaultgeomprop":""});
  this.addInput('transmission_extra_roughness','float');
  this.addProperty('transmission_extra_roughness', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission Roughness","uimin":"0.0","uimax":"1.0","uifolder":"Transmission","defaultgeomprop":""});
  this.addInput('subsurface','float');
  this.addProperty('subsurface', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Subsurface","uimin":"0.0","uimax":"1.0","uifolder":"Subsurface","defaultgeomprop":""});
  this.addInput('subsurface_color','color3');
  this.addProperty('subsurface_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Subsurface Color","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Subsurface","defaultgeomprop":""});
  this.addInput('subsurface_radius','color3');
  this.addProperty('subsurface_radius', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Subsurface Radius","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Subsurface","defaultgeomprop":""});
  this.addInput('subsurface_scale','float');
  this.addProperty('subsurface_scale', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Subsurface Scale","uimin":"0.0","uimax":"10.0","uifolder":"Subsurface","defaultgeomprop":""});
  this.addInput('subsurface_anisotropy','float');
  this.addProperty('subsurface_anisotropy', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Subsurface Anisotropy","uimin":"-1.0","uimax":"1.0","uifolder":"Subsurface","defaultgeomprop":""});
  this.addInput('sheen','float');
  this.addProperty('sheen', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Sheen","uimin":"0.0","uimax":"1.0","uifolder":"Sheen","defaultgeomprop":""});
  this.addInput('sheen_color','color3');
  this.addProperty('sheen_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Sheen Color","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Sheen","defaultgeomprop":""});
  this.addInput('sheen_roughness','float');
  this.addProperty('sheen_roughness', 0.3, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Sheen Roughness","uimin":"0.0","uimax":"1.0","uifolder":"Sheen","defaultgeomprop":""});
  this.addInput('coat','float');
  this.addProperty('coat', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Coat","uimin":"0.0","uimax":"1.0","uifolder":"Coat","defaultgeomprop":""});
  this.addInput('coat_color','color3');
  this.addProperty('coat_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Coat Color","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Coat","defaultgeomprop":""});
  this.addInput('coat_roughness','float');
  this.addProperty('coat_roughness', 0.1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Coat Roughness","uimin":"0.0","uimax":"1.0","uifolder":"Coat","defaultgeomprop":""});
  this.addInput('coat_anisotropy','float');
  this.addProperty('coat_anisotropy', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Coat Anisotropy","uimin":"0.0","uimax":"1.0","uifolder":"Coat","defaultgeomprop":""});
  this.addInput('coat_rotation','float');
  this.addProperty('coat_rotation', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Coat Rotation","uimin":"0.0","uimax":"1.0","uifolder":"Coat","defaultgeomprop":""});
  this.addInput('coat_IOR','float');
  this.addProperty('coat_IOR', 1.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Coat Index of Refraction","uimin":"1.0","uimax":"3.0","uifolder":"Coat","defaultgeomprop":""});
  this.addInput('coat_normal','vector3');
  this.addProperty('coat_normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Coat normal","uimin":null,"uimax":null,"uifolder":"Coat","defaultgeomprop":"Nworld"});
  this.addInput('coat_affect_color','float');
  this.addProperty('coat_affect_color', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Coat Affect Color","uimin":"0","uimax":"1","uifolder":"Coat","defaultgeomprop":""});
  this.addInput('coat_affect_roughness','float');
  this.addProperty('coat_affect_roughness', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Coat Affect Roughness","uimin":"0","uimax":"1","uifolder":"Coat","defaultgeomprop":""});
  this.addInput('thin_film_thickness','float');
  this.addProperty('thin_film_thickness', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Thin Film Thickness","uimin":"0.0","uimax":"2000.0","uifolder":"Thin Film","defaultgeomprop":""});
  this.addInput('thin_film_IOR','float');
  this.addProperty('thin_film_IOR', 1.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Thin Film Index of Refraction","uimin":"1.0","uimax":"3.0","uifolder":"Thin Film","defaultgeomprop":""});
  this.addInput('emission','float');
  this.addProperty('emission', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Emission","uimin":"0.0","uimax":"1.0","uifolder":"Emission","defaultgeomprop":""});
  this.addInput('emission_color','color3');
  this.addProperty('emission_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Emission Color","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Emission","defaultgeomprop":""});
  this.addInput('opacity','color3');
  this.addProperty('opacity', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Opacity","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Geometry","defaultgeomprop":""});
  this.addInput('thin_walled','boolean');
  this.addProperty('thin_walled', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"Thin Walled","uimin":null,"uimax":null,"uifolder":"Geometry","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Normal","uimin":null,"uimax":null,"uifolder":"Geometry","defaultgeomprop":"Nworld"});
  this.addInput('tangent','vector3');
  this.addProperty('tangent', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Tangent Input","uimin":null,"uimax":null,"uifolder":"Geometry","defaultgeomprop":"Tworld"});
  this.addOutput('out','surfaceshader');
  this.title = 'standard_surface_surfaceshader';
  this.desc = "MaterialX:mtlx/pbr/standard_surface_surfaceshader";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#232';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_standard_surface_surfaceshader.nodedef_name = 'ND_standard_surface_surfaceshader';
mtlx_pbr_standard_surface_surfaceshader.nodedef_node = 'standard_surface';
mtlx_pbr_standard_surface_surfaceshader.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/standard_surface.html';
LiteGraph.registerNodeType('mtlx/pbr/standard_surface_surfaceshader',mtlx_pbr_standard_surface_surfaceshader);

/**
  * @function mtlx_pbr_standard_surface_surfaceshader_100
  * @description Library: mtlx. Category: standard_surface. Type: surfaceshader
  *   LiteGraph id: mtlx/pbr/standard_surface_surfaceshader_100
  */
function mtlx_pbr_standard_surface_surfaceshader_100() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_standard_surface_surfaceshader_100';
  this.nodedef_type = 'surfaceshader';
  this.nodedef_node = 'standard_surface';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/standard_surface.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_standard_surface_surfaceshader_100_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('base','float');
  this.addProperty('base', 0.8, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Base","uimin":"0.0","uimax":"1.0","uifolder":"Base","defaultgeomprop":""});
  this.addInput('base_color','color3');
  this.addProperty('base_color', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Base Color","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Base","defaultgeomprop":""});
  this.addInput('diffuse_roughness','float');
  this.addProperty('diffuse_roughness', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Diffuse Roughness","uimin":"0.0","uimax":"1.0","uifolder":"Base","defaultgeomprop":""});
  this.addInput('metalness','float');
  this.addProperty('metalness', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Metalness","uimin":"0.0","uimax":"1.0","uifolder":"Base","defaultgeomprop":""});
  this.addInput('specular','float');
  this.addProperty('specular', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Specular","uimin":"0.0","uimax":"1.0","uifolder":"Specular","defaultgeomprop":""});
  this.addInput('specular_color','color3');
  this.addProperty('specular_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Specular Color","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Specular","defaultgeomprop":""});
  this.addInput('specular_roughness','float');
  this.addProperty('specular_roughness', 0.2, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Specular Roughness","uimin":"0.0","uimax":"1.0","uifolder":"Specular","defaultgeomprop":""});
  this.addInput('specular_IOR','float');
  this.addProperty('specular_IOR', 1.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Index of Refraction","uimin":"1.0","uimax":"3.0","uifolder":"Specular","defaultgeomprop":""});
  this.addInput('specular_anisotropy','float');
  this.addProperty('specular_anisotropy', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Specular Anisotropy","uimin":"0.0","uimax":"1.0","uifolder":"Specular","defaultgeomprop":""});
  this.addInput('specular_rotation','float');
  this.addProperty('specular_rotation', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Specular Rotation","uimin":"0.0","uimax":"1.0","uifolder":"Specular","defaultgeomprop":""});
  this.addInput('transmission','float');
  this.addProperty('transmission', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission","uimin":"0.0","uimax":"1.0","uifolder":"Transmission","defaultgeomprop":""});
  this.addInput('transmission_color','color3');
  this.addProperty('transmission_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission Color","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Transmission","defaultgeomprop":""});
  this.addInput('transmission_depth','float');
  this.addProperty('transmission_depth', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission Depth","uimin":"0.0","uimax":"100.0","uifolder":"Transmission","defaultgeomprop":""});
  this.addInput('transmission_scatter','color3');
  this.addProperty('transmission_scatter', [0, 0, 0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission Scatter","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Transmission","defaultgeomprop":""});
  this.addInput('transmission_scatter_anisotropy','float');
  this.addProperty('transmission_scatter_anisotropy', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission Anisotropy","uimin":"0.0","uimax":"1.0","uifolder":"Transmission","defaultgeomprop":""});
  this.addInput('transmission_dispersion','float');
  this.addProperty('transmission_dispersion', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission Dispersion","uimin":"0.0","uimax":"100.0","uifolder":"Transmission","defaultgeomprop":""});
  this.addInput('transmission_extra_roughness','float');
  this.addProperty('transmission_extra_roughness', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission Roughness","uimin":"0.0","uimax":"1.0","uifolder":"Transmission","defaultgeomprop":""});
  this.addInput('subsurface','float');
  this.addProperty('subsurface', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Subsurface","uimin":"0.0","uimax":"1.0","uifolder":"Subsurface","defaultgeomprop":""});
  this.addInput('subsurface_color','color3');
  this.addProperty('subsurface_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Subsurface Color","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Subsurface","defaultgeomprop":""});
  this.addInput('subsurface_radius','color3');
  this.addProperty('subsurface_radius', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Subsurface Radius","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Subsurface","defaultgeomprop":""});
  this.addInput('subsurface_scale','float');
  this.addProperty('subsurface_scale', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Subsurface Scale","uimin":"0.0","uimax":"10.0","uifolder":"Subsurface","defaultgeomprop":""});
  this.addInput('subsurface_anisotropy','float');
  this.addProperty('subsurface_anisotropy', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Subsurface Anisotropy","uimin":"-1.0","uimax":"1.0","uifolder":"Subsurface","defaultgeomprop":""});
  this.addInput('sheen','float');
  this.addProperty('sheen', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Sheen","uimin":"0.0","uimax":"1.0","uifolder":"Sheen","defaultgeomprop":""});
  this.addInput('sheen_color','color3');
  this.addProperty('sheen_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Sheen Color","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Sheen","defaultgeomprop":""});
  this.addInput('sheen_roughness','float');
  this.addProperty('sheen_roughness', 0.3, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Sheen Roughness","uimin":"0.0","uimax":"1.0","uifolder":"Sheen","defaultgeomprop":""});
  this.addInput('coat','float');
  this.addProperty('coat', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Coat","uimin":"0.0","uimax":"1.0","uifolder":"Coat","defaultgeomprop":""});
  this.addInput('coat_color','color3');
  this.addProperty('coat_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Coat Color","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Coat","defaultgeomprop":""});
  this.addInput('coat_roughness','float');
  this.addProperty('coat_roughness', 0.1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Coat Roughness","uimin":"0.0","uimax":"1.0","uifolder":"Coat","defaultgeomprop":""});
  this.addInput('coat_anisotropy','float');
  this.addProperty('coat_anisotropy', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Coat Anisotropy","uimin":"0.0","uimax":"1.0","uifolder":"Coat","defaultgeomprop":""});
  this.addInput('coat_rotation','float');
  this.addProperty('coat_rotation', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Coat Rotation","uimin":"0.0","uimax":"1.0","uifolder":"Coat","defaultgeomprop":""});
  this.addInput('coat_IOR','float');
  this.addProperty('coat_IOR', 1.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Coat Index of Refraction","uimin":"1.0","uimax":"3.0","uifolder":"Coat","defaultgeomprop":""});
  this.addInput('coat_normal','vector3');
  this.addProperty('coat_normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Coat normal","uimin":null,"uimax":null,"uifolder":"Coat","defaultgeomprop":"Nworld"});
  this.addInput('coat_affect_color','float');
  this.addProperty('coat_affect_color', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Coat Affect Color","uimin":"0","uimax":"1","uifolder":"Coat","defaultgeomprop":""});
  this.addInput('coat_affect_roughness','float');
  this.addProperty('coat_affect_roughness', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Coat Affect Roughness","uimin":"0","uimax":"1","uifolder":"Coat","defaultgeomprop":""});
  this.addInput('thin_film_thickness','float');
  this.addProperty('thin_film_thickness', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Thin Film Thickness","uimin":"0.0","uimax":"2000.0","uifolder":"Thin Film","defaultgeomprop":""});
  this.addInput('thin_film_IOR','float');
  this.addProperty('thin_film_IOR', 1.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Thin Film Index of Refraction","uimin":"1.0","uimax":"3.0","uifolder":"Thin Film","defaultgeomprop":""});
  this.addInput('emission','float');
  this.addProperty('emission', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Emission","uimin":"0.0","uimax":"1.0","uifolder":"Emission","defaultgeomprop":""});
  this.addInput('emission_color','color3');
  this.addProperty('emission_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Emission Color","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Emission","defaultgeomprop":""});
  this.addInput('opacity','color3');
  this.addProperty('opacity', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Opacity","uimin":"0,0,0","uimax":"1,1,1","uifolder":"Geometry","defaultgeomprop":""});
  this.addInput('thin_walled','boolean');
  this.addProperty('thin_walled', true, 'boolean',{"colorspace":"","unit":"","unittype":"","uiname":"Thin Walled","uimin":null,"uimax":null,"uifolder":"Geometry","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Normal","uimin":null,"uimax":null,"uifolder":"Geometry","defaultgeomprop":"Nworld"});
  this.addInput('tangent','vector3');
  this.addProperty('tangent', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Tangent Input","uimin":null,"uimax":null,"uifolder":"Geometry","defaultgeomprop":"Tworld"});
  this.addOutput('out','surfaceshader');
  this.title = 'standard_surface_surfaceshader';
  this.desc = "MaterialX:mtlx/pbr/standard_surface_surfaceshader_100";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#232';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_standard_surface_surfaceshader_100.nodedef_name = 'ND_standard_surface_surfaceshader_100';
mtlx_pbr_standard_surface_surfaceshader_100.nodedef_node = 'standard_surface';
mtlx_pbr_standard_surface_surfaceshader_100.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/standard_surface.html';
LiteGraph.registerNodeType('mtlx/pbr/standard_surface_surfaceshader_100',mtlx_pbr_standard_surface_surfaceshader_100);

/**
  * @function mtlx_pbr_lama_conductor
  * @description Library: mtlx. Category: standard_surface. Type: BSDF
  *   LiteGraph id: mtlx/pbr/lama_conductor
  */
function mtlx_pbr_lama_conductor() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_lama_conductor';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'LamaConductor';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaConductor.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_lama_conductor_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('tint','color3');
  this.addProperty('tint', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Tint","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":""});
  this.addInput('fresnelMode','integer');
  this.addProperty('fresnelMode', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Fresnel Mode","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":"","enum":["Scientific","Artistic"],"enumvalues":["0","1"]});
  this.addInput('IOR','vector3');
  this.addProperty('IOR', [0.180000007153,0.419999986887,1.37000000477], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"IOR","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":""});
  this.addInput('extinction','vector3');
  this.addProperty('extinction', [3.42000007629,2.34999990463,1.76999998093], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Extinction","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":""});
  this.addInput('reflectivity','color3');
  this.addProperty('reflectivity', [0.9450, 0.7772, 0.3737], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Reflectivity","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":""});
  this.addInput('edgeColor','color3');
  this.addProperty('edgeColor', [0.9979, 0.9813, 0.7523], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Edge Color","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":""});
  this.addInput('roughness','float');
  this.addProperty('roughness', 0.1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Roughness","uimin":"0.0","uimax":"1.0","uifolder":"Main","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Normal","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":"Nworld"});
  this.addInput('anisotropy','float');
  this.addProperty('anisotropy', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Anisotropy","uimin":"-1.0","uimax":"1.0","uifolder":"Anisotropy","defaultgeomprop":""});
  this.addInput('anisotropyDirection','vector3');
  this.addProperty('anisotropyDirection', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Direction","uimin":null,"uimax":null,"uifolder":"Anisotropy","defaultgeomprop":"Tworld"});
  this.addInput('anisotropyRotation','float');
  this.addProperty('anisotropyRotation', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Rotation","uimin":null,"uimax":null,"uifolder":"Anisotropy","defaultgeomprop":""});
  this.addOutput('out','BSDF');
  this.title = 'LamaConductor_BSDF';
  this.desc = "MaterialX:mtlx/pbr/lama_conductor";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_lama_conductor.nodedef_name = 'ND_lama_conductor';
mtlx_pbr_lama_conductor.nodedef_node = 'LamaConductor';
mtlx_pbr_lama_conductor.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaConductor.html';
LiteGraph.registerNodeType('mtlx/pbr/lama_conductor',mtlx_pbr_lama_conductor);

/**
  * @function mtlx_pbr_lama_iridescence
  * @description Library: mtlx. Category: LamaConductor. Type: BSDF
  *   LiteGraph id: mtlx/pbr/lama_iridescence
  */
function mtlx_pbr_lama_iridescence() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_lama_iridescence';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'LamaIridescence';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaIridescence.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_lama_iridescence_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('roughness','float');
  this.addProperty('roughness', 0.01, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Roughness","uimin":"0.0","uimax":"1.0","uifolder":"Main","defaultgeomprop":""});
  this.addInput('anisotropy','float');
  this.addProperty('anisotropy', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Anisotropy","uimin":"-1.0","uimax":"1.0","uifolder":"Anisotropy","defaultgeomprop":""});
  this.addInput('relativeFilmThickness','float');
  this.addProperty('relativeFilmThickness', 0.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"relativeFilmThickness","uimin":"0.0","uimax":"1.0","uifolder":"Main","defaultgeomprop":""});
  this.addInput('minFilmThickness','float');
  this.addProperty('minFilmThickness', 400.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"minFilmThickness","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":""});
  this.addInput('maxFilmThickness','float');
  this.addProperty('maxFilmThickness', 800.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"maxFilmThickness","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":""});
  this.addInput('filmIOR','float');
  this.addProperty('filmIOR', 1.3, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"filmIOR","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":""});
  this.addOutput('out','BSDF');
  this.title = 'LamaIridescence_BSDF';
  this.desc = "MaterialX:mtlx/pbr/lama_iridescence";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_lama_iridescence.nodedef_name = 'ND_lama_iridescence';
mtlx_pbr_lama_iridescence.nodedef_node = 'LamaIridescence';
mtlx_pbr_lama_iridescence.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaIridescence.html';
LiteGraph.registerNodeType('mtlx/pbr/lama_iridescence',mtlx_pbr_lama_iridescence);

/**
  * @function mtlx_pbr_lama_diffuse
  * @description Library: mtlx. Category: LamaIridescence. Type: BSDF
  *   LiteGraph id: mtlx/pbr/lama_diffuse
  */
function mtlx_pbr_lama_diffuse() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_lama_diffuse';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'LamaDiffuse';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaDiffuse.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_lama_diffuse_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('color','color3');
  this.addProperty('color', [0.18, 0.18, 0.18], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Color","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('roughness','float');
  this.addProperty('roughness', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Roughness","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Normal","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nworld"});
  this.addInput('energyCompensation','float');
  this.addProperty('energyCompensation', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Energy Compensation","uimin":"0.0","uimax":"1.0","uifolder":"Advanced","defaultgeomprop":""});
  this.addOutput('out','BSDF');
  this.title = 'LamaDiffuse_BSDF';
  this.desc = "MaterialX:mtlx/pbr/lama_diffuse";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_lama_diffuse.nodedef_name = 'ND_lama_diffuse';
mtlx_pbr_lama_diffuse.nodedef_node = 'LamaDiffuse';
mtlx_pbr_lama_diffuse.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaDiffuse.html';
LiteGraph.registerNodeType('mtlx/pbr/lama_diffuse',mtlx_pbr_lama_diffuse);

/**
  * @function mtlx_pbr_lama_emission
  * @description Library: mtlx. Category: LamaDiffuse. Type: EDF
  *   LiteGraph id: mtlx/pbr/lama_emission
  */
function mtlx_pbr_lama_emission() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_lama_emission';
  this.nodedef_type = 'EDF';
  this.nodedef_node = 'LamaEmission';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaEmission.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_lama_emission_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('color','color3');
  this.addProperty('color', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Color","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":""});
  this.addOutput('out','EDF');
  this.title = 'LamaEmission_EDF';
  this.desc = "MaterialX:mtlx/pbr/lama_emission";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_lama_emission.nodedef_name = 'ND_lama_emission';
mtlx_pbr_lama_emission.nodedef_node = 'LamaEmission';
mtlx_pbr_lama_emission.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaEmission.html';
LiteGraph.registerNodeType('mtlx/pbr/lama_emission',mtlx_pbr_lama_emission);

/**
  * @function mtlx_pbr_lama_layer_bsdf
  * @description Library: mtlx. Category: LamaEmission. Type: BSDF
  *   LiteGraph id: mtlx/pbr/lama_layer_bsdf
  */
function mtlx_pbr_lama_layer_bsdf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_lama_layer_bsdf';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'LamaLayer';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaLayer.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_lama_layer_bsdf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('materialTop','BSDF');
  this.addProperty('materialTop', '', 'BSDF',{"colorspace":"","unit":"","unittype":"","uiname":"Material Top","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('materialBase','BSDF');
  this.addProperty('materialBase', '', 'BSDF',{"colorspace":"","unit":"","unittype":"","uiname":"Material Base","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('topMix','float');
  this.addProperty('topMix', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Top Mix","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('topThickness','float');
  this.addProperty('topThickness', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Top Thickness","uimin":"0.0","uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','BSDF');
  this.title = 'LamaLayer_BSDF';
  this.desc = "MaterialX:mtlx/pbr/lama_layer_bsdf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_lama_layer_bsdf.nodedef_name = 'ND_lama_layer_bsdf';
mtlx_pbr_lama_layer_bsdf.nodedef_node = 'LamaLayer';
mtlx_pbr_lama_layer_bsdf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaLayer.html';
LiteGraph.registerNodeType('mtlx/pbr/lama_layer_bsdf',mtlx_pbr_lama_layer_bsdf);

/**
  * @function mtlx_pbr_lama_sheen
  * @description Library: mtlx. Category: LamaLayer. Type: BSDF
  *   LiteGraph id: mtlx/pbr/lama_sheen
  */
function mtlx_pbr_lama_sheen() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_lama_sheen';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'LamaSheen';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaSheen.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_lama_sheen_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('color','color3');
  this.addProperty('color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Color","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":""});
  this.addInput('roughness','float');
  this.addProperty('roughness', 0.1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Roughness","uimin":"0.0","uimax":"1.0","uifolder":"Main","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Normal","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":"Nworld"});
  this.addOutput('out','BSDF');
  this.title = 'LamaSheen_BSDF';
  this.desc = "MaterialX:mtlx/pbr/lama_sheen";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_lama_sheen.nodedef_name = 'ND_lama_sheen';
mtlx_pbr_lama_sheen.nodedef_node = 'LamaSheen';
mtlx_pbr_lama_sheen.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaSheen.html';
LiteGraph.registerNodeType('mtlx/pbr/lama_sheen',mtlx_pbr_lama_sheen);

/**
  * @function mtlx_pbr_lama_add_bsdf
  * @description Library: mtlx. Category: LamaSheen. Type: BSDF
  *   LiteGraph id: mtlx/pbr/lama_add_bsdf
  */
function mtlx_pbr_lama_add_bsdf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_lama_add_bsdf';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'LamaAdd';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaAdd.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_lama_add_bsdf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('material1','BSDF');
  this.addProperty('material1', '', 'BSDF',{"colorspace":"","unit":"","unittype":"","uiname":"Material 1","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('material2','BSDF');
  this.addProperty('material2', '', 'BSDF',{"colorspace":"","unit":"","unittype":"","uiname":"Material 2","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('weight1','float');
  this.addProperty('weight1', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Weight 1","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('weight2','float');
  this.addProperty('weight2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Weight 2","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','BSDF');
  this.title = 'LamaAdd_BSDF';
  this.desc = "MaterialX:mtlx/pbr/lama_add_bsdf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_lama_add_bsdf.nodedef_name = 'ND_lama_add_bsdf';
mtlx_pbr_lama_add_bsdf.nodedef_node = 'LamaAdd';
mtlx_pbr_lama_add_bsdf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaAdd.html';
LiteGraph.registerNodeType('mtlx/pbr/lama_add_bsdf',mtlx_pbr_lama_add_bsdf);

/**
  * @function mtlx_pbr_lama_add_edf
  * @description Library: mtlx. Category: LamaAdd. Type: EDF
  *   LiteGraph id: mtlx/pbr/lama_add_edf
  */
function mtlx_pbr_lama_add_edf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_lama_add_edf';
  this.nodedef_type = 'EDF';
  this.nodedef_node = 'LamaAdd';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaAdd.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_lama_add_edf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('material1','EDF');
  this.addProperty('material1', '', 'EDF',{"colorspace":"","unit":"","unittype":"","uiname":"Material 1","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('material2','EDF');
  this.addProperty('material2', '', 'EDF',{"colorspace":"","unit":"","unittype":"","uiname":"Material 2","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('weight1','float');
  this.addProperty('weight1', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Weight 1","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('weight2','float');
  this.addProperty('weight2', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Weight 2","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','EDF');
  this.title = 'LamaAdd_EDF';
  this.desc = "MaterialX:mtlx/pbr/lama_add_edf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_lama_add_edf.nodedef_name = 'ND_lama_add_edf';
mtlx_pbr_lama_add_edf.nodedef_node = 'LamaAdd';
mtlx_pbr_lama_add_edf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaAdd.html';
LiteGraph.registerNodeType('mtlx/pbr/lama_add_edf',mtlx_pbr_lama_add_edf);

/**
  * @function mtlx_pbr_lama_dielectric
  * @description Library: mtlx. Category: LamaAdd. Type: BSDF
  *   LiteGraph id: mtlx/pbr/lama_dielectric
  */
function mtlx_pbr_lama_dielectric() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_lama_dielectric';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'LamaDielectric';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaDielectric.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_lama_dielectric_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('reflectionTint','color3');
  this.addProperty('reflectionTint', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Reflection Tint","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":""});
  this.addInput('transmissionTint','color3');
  this.addProperty('transmissionTint', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission Tint","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":""});
  this.addInput('fresnelMode','integer');
  this.addProperty('fresnelMode', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Fresnel Mode","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":"","enum":["Scientific","Artistic"],"enumvalues":["0","1"]});
  this.addInput('IOR','float');
  this.addProperty('IOR', 1.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"IOR","uimin":"1.0","uimax":"3.0","uifolder":"Main","defaultgeomprop":""});
  this.addInput('reflectivity','float');
  this.addProperty('reflectivity', 0.04, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Reflectivity","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":""});
  this.addInput('roughness','float');
  this.addProperty('roughness', 0.1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Roughness","uimin":"0.0","uimax":"1.0","uifolder":"Main","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Normal","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":"Nworld"});
  this.addInput('anisotropy','float');
  this.addProperty('anisotropy', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Anisotropy","uimin":"-1.0","uimax":"1.0","uifolder":"Anisotropy","defaultgeomprop":""});
  this.addInput('direction','vector3');
  this.addProperty('direction', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Direction","uimin":null,"uimax":null,"uifolder":"Anisotropy","defaultgeomprop":"Tworld"});
  this.addInput('rotation','float');
  this.addProperty('rotation', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Rotation","uimin":null,"uimax":null,"uifolder":"Anisotropy","defaultgeomprop":""});
  this.addInput('absorptionColor','color3');
  this.addProperty('absorptionColor', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Absorption Color","uimin":null,"uimax":null,"uifolder":"Interior","defaultgeomprop":""});
  this.addInput('absorptionRadius','float');
  this.addProperty('absorptionRadius', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Absorption Radius","uimin":null,"uimax":null,"uifolder":"Interior","defaultgeomprop":""});
  this.addInput('scatterColor','color3');
  this.addProperty('scatterColor', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Scatter Color","uimin":null,"uimax":null,"uifolder":"Interior","defaultgeomprop":""});
  this.addInput('scatterAnisotropy','float');
  this.addProperty('scatterAnisotropy', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Scatter Anisotropy","uimin":"-1.0","uimax":"1.0","uifolder":"Interior","defaultgeomprop":""});
  this.addOutput('out','BSDF');
  this.title = 'LamaDielectric_BSDF';
  this.desc = "MaterialX:mtlx/pbr/lama_dielectric";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_lama_dielectric.nodedef_name = 'ND_lama_dielectric';
mtlx_pbr_lama_dielectric.nodedef_node = 'LamaDielectric';
mtlx_pbr_lama_dielectric.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaDielectric.html';
LiteGraph.registerNodeType('mtlx/pbr/lama_dielectric',mtlx_pbr_lama_dielectric);

/**
  * @function mtlx_pbr_lama_generalized_schlick
  * @description Library: mtlx. Category: LamaDielectric. Type: BSDF
  *   LiteGraph id: mtlx/pbr/lama_generalized_schlick
  */
function mtlx_pbr_lama_generalized_schlick() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_lama_generalized_schlick';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'LamaGeneralizedSchlick';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaGeneralizedSchlick.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_lama_generalized_schlick_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('reflectionTint','color3');
  this.addProperty('reflectionTint', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Reflection Tint","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":""});
  this.addInput('transmissionTint','color3');
  this.addProperty('transmissionTint', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Transmission Tint","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":""});
  this.addInput('fresnelMode','integer');
  this.addProperty('fresnelMode', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Fresnel Mode","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":"","enum":["Scientific","Artistic"],"enumvalues":["0","1"]});
  this.addInput('IOR','vector3');
  this.addProperty('IOR', [1.5,1.5,1.5], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"IOR","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":""});
  this.addInput('reflectivity','color3');
  this.addProperty('reflectivity', [0.04, 0.04, 0.04], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Reflectivity","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":""});
  this.addInput('reflectivity90','color3');
  this.addProperty('reflectivity90', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Reflectivity90","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":""});
  this.addInput('reflectivityProfile','float');
  this.addProperty('reflectivityProfile', 0.2, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"ReflectivityProfile","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":""});
  this.addInput('roughness','float');
  this.addProperty('roughness', 0.1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Roughness","uimin":"0.0","uimax":"1.0","uifolder":"Main","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Normal","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":"Nworld"});
  this.addInput('anisotropy','float');
  this.addProperty('anisotropy', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Anisotropy","uimin":"-1.0","uimax":"1.0","uifolder":"Anisotropy","defaultgeomprop":""});
  this.addInput('anisotropyDirection','vector3');
  this.addProperty('anisotropyDirection', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Direction","uimin":null,"uimax":null,"uifolder":"Anisotropy","defaultgeomprop":"Tworld"});
  this.addInput('anisotropyRotation','float');
  this.addProperty('anisotropyRotation', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Rotation","uimin":null,"uimax":null,"uifolder":"Anisotropy","defaultgeomprop":""});
  this.addInput('absorptionColor','color3');
  this.addProperty('absorptionColor', [1.0, 1.0, 1.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Absorption Color","uimin":null,"uimax":null,"uifolder":"Interior","defaultgeomprop":""});
  this.addInput('absorptionRadius','float');
  this.addProperty('absorptionRadius', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Absorption Radius","uimin":null,"uimax":null,"uifolder":"Interior","defaultgeomprop":""});
  this.addInput('scatterColor','color3');
  this.addProperty('scatterColor', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Scatter Color","uimin":null,"uimax":null,"uifolder":"Interior","defaultgeomprop":""});
  this.addInput('scatterAnisotropy','float');
  this.addProperty('scatterAnisotropy', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Scatter Anisotropy","uimin":"-1.0","uimax":"1.0","uifolder":"Interior","defaultgeomprop":""});
  this.addOutput('out','BSDF');
  this.title = 'LamaGeneralizedSchlick_BSDF';
  this.desc = "MaterialX:mtlx/pbr/lama_generalized_schlick";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_lama_generalized_schlick.nodedef_name = 'ND_lama_generalized_schlick';
mtlx_pbr_lama_generalized_schlick.nodedef_node = 'LamaGeneralizedSchlick';
mtlx_pbr_lama_generalized_schlick.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaGeneralizedSchlick.html';
LiteGraph.registerNodeType('mtlx/pbr/lama_generalized_schlick',mtlx_pbr_lama_generalized_schlick);

/**
  * @function mtlx_pbr_lama_surface
  * @description Library: mtlx. Category: LamaGeneralizedSchlick. Type: material
  *   LiteGraph id: mtlx/pbr/lama_surface
  */
function mtlx_pbr_lama_surface() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_lama_surface';
  this.nodedef_type = 'material';
  this.nodedef_node = 'LamaSurface';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaSurface.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_lama_surface_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('materialFront','BSDF');
  this.addProperty('materialFront', '', 'BSDF',{"colorspace":"","unit":"","unittype":"","uiname":"Material Front","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('materialBack','BSDF');
  this.addProperty('materialBack', '', 'BSDF',{"colorspace":"","unit":"","unittype":"","uiname":"Material Back","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('presence','float');
  this.addProperty('presence', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','material');
  this.title = 'LamaSurface_material';
  this.desc = "MaterialX:mtlx/pbr/lama_surface";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_lama_surface.nodedef_name = 'ND_lama_surface';
mtlx_pbr_lama_surface.nodedef_node = 'LamaSurface';
mtlx_pbr_lama_surface.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaSurface.html';
LiteGraph.registerNodeType('mtlx/pbr/lama_surface',mtlx_pbr_lama_surface);

/**
  * @function mtlx_pbr_lama_mix_bsdf
  * @description Library: mtlx. Category: LamaSurface. Type: BSDF
  *   LiteGraph id: mtlx/pbr/lama_mix_bsdf
  */
function mtlx_pbr_lama_mix_bsdf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_lama_mix_bsdf';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'LamaMix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaMix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_lama_mix_bsdf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('material1','BSDF');
  this.addProperty('material1', '', 'BSDF',{"colorspace":"","unit":"","unittype":"","uiname":"Material 1","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('material2','BSDF');
  this.addProperty('material2', '', 'BSDF',{"colorspace":"","unit":"","unittype":"","uiname":"Material 2","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','BSDF');
  this.title = 'LamaMix_BSDF';
  this.desc = "MaterialX:mtlx/pbr/lama_mix_bsdf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_lama_mix_bsdf.nodedef_name = 'ND_lama_mix_bsdf';
mtlx_pbr_lama_mix_bsdf.nodedef_node = 'LamaMix';
mtlx_pbr_lama_mix_bsdf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaMix.html';
LiteGraph.registerNodeType('mtlx/pbr/lama_mix_bsdf',mtlx_pbr_lama_mix_bsdf);

/**
  * @function mtlx_pbr_lama_mix_edf
  * @description Library: mtlx. Category: LamaMix. Type: EDF
  *   LiteGraph id: mtlx/pbr/lama_mix_edf
  */
function mtlx_pbr_lama_mix_edf() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_lama_mix_edf';
  this.nodedef_type = 'EDF';
  this.nodedef_node = 'LamaMix';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaMix.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_lama_mix_edf_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('material1','EDF');
  this.addProperty('material1', '', 'EDF',{"colorspace":"","unit":"","unittype":"","uiname":"Material 1","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('material2','EDF');
  this.addProperty('material2', '', 'EDF',{"colorspace":"","unit":"","unittype":"","uiname":"Material 2","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('mix','float');
  this.addProperty('mix', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addOutput('out','EDF');
  this.title = 'LamaMix_EDF';
  this.desc = "MaterialX:mtlx/pbr/lama_mix_edf";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_lama_mix_edf.nodedef_name = 'ND_lama_mix_edf';
mtlx_pbr_lama_mix_edf.nodedef_node = 'LamaMix';
mtlx_pbr_lama_mix_edf.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaMix.html';
LiteGraph.registerNodeType('mtlx/pbr/lama_mix_edf',mtlx_pbr_lama_mix_edf);

/**
  * @function mtlx_pbr_lama_sss
  * @description Library: mtlx. Category: LamaMix. Type: BSDF
  *   LiteGraph id: mtlx/pbr/lama_sss
  */
function mtlx_pbr_lama_sss() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_lama_sss';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'LamaSSS';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaSSS.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_lama_sss_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('color','color3');
  this.addProperty('color', [0.18, 0.18, 0.18], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Color","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Normal","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":"Nworld"});
  this.addInput('sssRadius','color3');
  this.addProperty('sssRadius', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Radius","uimin":null,"uimax":null,"uifolder":"SSS","defaultgeomprop":""});
  this.addInput('sssScale','float');
  this.addProperty('sssScale', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Scale","uimin":null,"uimax":null,"uifolder":"SSS","defaultgeomprop":""});
  this.addInput('sssMode','integer');
  this.addProperty('sssMode', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Mode","uimin":null,"uimax":null,"uifolder":"Main","defaultgeomprop":"","enum":["Path-traced Davis","Path-traced exponential","Diffusion Burley","Diffusion Burley (mean free path)"],"enumvalues":["0","1","2","3"]});
  this.addInput('sssIOR','float');
  this.addProperty('sssIOR', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"IOR","uimin":"1.0","uimax":"2.0","uifolder":"SSS","defaultgeomprop":""});
  this.addInput('sssAnisotropy','float');
  this.addProperty('sssAnisotropy', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Anisotropy","uimin":"-1.0","uimax":"1.0","uifolder":"SSS","defaultgeomprop":""});
  this.addInput('sssBleed','float');
  this.addProperty('sssBleed', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Bleed","uimin":"0.0","uimax":"1.0","uifolder":"SSS","defaultgeomprop":""});
  this.addInput('sssFollowTopology','float');
  this.addProperty('sssFollowTopology', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Follow Topology","uimin":"0.0","uimax":"1.0","uifolder":"SSS","defaultgeomprop":""});
  this.addInput('sssSubset','string');
  this.addProperty('sssSubset', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Subset","uimin":null,"uimax":null,"uifolder":"SSS","defaultgeomprop":""});
  this.addInput('sssContinuationRays','integer');
  this.addProperty('sssContinuationRays', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Continuation Rays","uimin":null,"uimax":null,"uifolder":"SSS","defaultgeomprop":""});
  this.addInput('sssUnitLength','float');
  this.addProperty('sssUnitLength', 0.00328, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Unit Length","uimin":null,"uimax":null,"uifolder":"SSS","defaultgeomprop":""});
  this.addInput('mode','integer');
  this.addProperty('mode', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Mode","uimin":null,"uimax":null,"uifolder":"Advanced","defaultgeomprop":"","enum":["Reflection","Transmission","Reflection(with direct illumination)"],"enumvalues":["0","1","2"]});
  this.addInput('albedoInversionMethod','integer');
  this.addProperty('albedoInversionMethod', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"Albedo Inversion Method","uimin":null,"uimax":null,"uifolder":"Advanced","defaultgeomprop":"","enum":["Pixar","Chiang"],"enumvalues":["0","1"]});
  this.addInput('diffuseLobeName','string');
  this.addProperty('diffuseLobeName', 'diffuse', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Diffuse Lobe Name","uimin":null,"uimax":null,"uifolder":"Advanced","defaultgeomprop":""});
  this.addInput('sssEntryLobeName','string');
  this.addProperty('sssEntryLobeName', 'irradiance', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"SSS Entry Lobe Name","uimin":null,"uimax":null,"uifolder":"Advanced","defaultgeomprop":""});
  this.addInput('sssExitLobeName','string');
  this.addProperty('sssExitLobeName', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"SSS Exit Lobe Name","uimin":null,"uimax":null,"uifolder":"Advanced","defaultgeomprop":""});
  this.addInput('sssId','integer');
  this.addProperty('sssId', 0, 'integer',{"colorspace":"","unit":"","unittype":"","uiname":"SSS Id","uimin":null,"uimax":null,"uifolder":"Advanced","defaultgeomprop":"","enum":["0"," 1"],"enumvalues":["0"," 1"]});
  this.addInput('matte','string');
  this.addProperty('matte', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Matte","uimin":null,"uimax":null,"uifolder":"Advanced","defaultgeomprop":""});
  this.addOutput('out','BSDF');
  this.title = 'LamaSSS_BSDF';
  this.desc = "MaterialX:mtlx/pbr/lama_sss";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_lama_sss.nodedef_name = 'ND_lama_sss';
mtlx_pbr_lama_sss.nodedef_node = 'LamaSSS';
mtlx_pbr_lama_sss.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaSSS.html';
LiteGraph.registerNodeType('mtlx/pbr/lama_sss',mtlx_pbr_lama_sss);

/**
  * @function mtlx_pbr_lama_translucent
  * @description Library: mtlx. Category: LamaSSS. Type: BSDF
  *   LiteGraph id: mtlx/pbr/lama_translucent
  */
function mtlx_pbr_lama_translucent() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_lama_translucent';
  this.nodedef_type = 'BSDF';
  this.nodedef_node = 'LamaTranslucent';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaTranslucent.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_lama_translucent_out_genglsl.png';
  this.nodedef_group = 'pbr';
  this.addInput('color','color3');
  this.addProperty('color', [0.18, 0.18, 0.18], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"Color","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('roughness','float');
  this.addProperty('roughness', 0.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Roughness","uimin":"0.0","uimax":"1.0","uifolder":"","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"Normal","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":"Nworld"});
  this.addInput('energyCompensation','float');
  this.addProperty('energyCompensation', 1.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"Energy Compensation","uimin":"0.0","uimax":"1.0","uifolder":"Advanced","defaultgeomprop":""});
  this.addInput('lobeName','string');
  this.addProperty('lobeName', 'diffuse', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Lobe Name","uimin":null,"uimax":null,"uifolder":"Advanced","defaultgeomprop":""});
  this.addInput('matte','string');
  this.addProperty('matte', '', 'string',{"colorspace":"","unit":"","unittype":"","uiname":"Matte","uimin":null,"uimax":null,"uifolder":"Advanced","defaultgeomprop":""});
  this.addOutput('out','BSDF');
  this.title = 'LamaTranslucent_BSDF';
  this.desc = "MaterialX:mtlx/pbr/lama_translucent";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_pbr_lama_translucent.nodedef_name = 'ND_lama_translucent';
mtlx_pbr_lama_translucent.nodedef_node = 'LamaTranslucent';
mtlx_pbr_lama_translucent.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/LamaTranslucent.html';
LiteGraph.registerNodeType('mtlx/pbr/lama_translucent',mtlx_pbr_lama_translucent);

/**
  * @function mtlx_translation_standard_surface_to_gltf_pbr
  * @description Library: mtlx. Category: LamaTranslucent. Type: multioutput
  *   LiteGraph id: mtlx/translation/standard_surface_to_gltf_pbr
  */
function mtlx_translation_standard_surface_to_gltf_pbr() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_standard_surface_to_gltf_pbr';
  this.nodedef_type = 'multioutput';
  this.nodedef_node = 'standard_surface_to_gltf_pbr';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/standard_surface_to_gltf_pbr.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_standard_surface_to_gltf_pbr_base_color_out_genglsl.png';
  this.nodedef_group = 'translation';
  this.addInput('base','float');
  this.addProperty('base', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('base_color','color3');
  this.addProperty('base_color', [0.8, 0.8, 0.8], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('metalness','float');
  this.addProperty('metalness', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('specular_roughness','float');
  this.addProperty('specular_roughness', 0.2, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('transmission','float');
  this.addProperty('transmission', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('transmission_color','color3');
  this.addProperty('transmission_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('transmission_depth','float');
  this.addProperty('transmission_depth', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('sheen','float');
  this.addProperty('sheen', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('sheen_color','color3');
  this.addProperty('sheen_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('sheen_roughness','float');
  this.addProperty('sheen_roughness', 0.3, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('coat','float');
  this.addProperty('coat', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('coat_color','color3');
  this.addProperty('coat_color', [0, 0, 0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('coat_roughness','float');
  this.addProperty('coat_roughness', 0.1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('emission','float');
  this.addProperty('emission', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('emission_color','color3');
  this.addProperty('emission_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('base_color_out','color3');
  this.addOutput('metallic_out','float');
  this.addOutput('roughness_out','float');
  this.addOutput('transmission_out','float');
  this.addOutput('thickness_out','float');
  this.addOutput('attenuation_color_out','color3');
  this.addOutput('sheen_color_out','color3');
  this.addOutput('sheen_roughness_out','float');
  this.addOutput('clearcoat_out','float');
  this.addOutput('clearcoat_roughness_out','float');
  this.addOutput('emissive_out','color3');
  this.title = 'standard_surface_to_gltf_pbr_multioutput';
  this.desc = "MaterialX:mtlx/translation/standard_surface_to_gltf_pbr";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_translation_standard_surface_to_gltf_pbr.nodedef_name = 'ND_standard_surface_to_gltf_pbr';
mtlx_translation_standard_surface_to_gltf_pbr.nodedef_node = 'standard_surface_to_gltf_pbr';
mtlx_translation_standard_surface_to_gltf_pbr.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/standard_surface_to_gltf_pbr.html';
LiteGraph.registerNodeType('mtlx/translation/standard_surface_to_gltf_pbr',mtlx_translation_standard_surface_to_gltf_pbr);

/**
  * @function mtlx_translation_standard_surface_to_UsdPreviewSurface
  * @description Library: mtlx. Category: standard_surface_to_gltf_pbr. Type: multioutput
  *   LiteGraph id: mtlx/translation/standard_surface_to_UsdPreviewSurface
  */
function mtlx_translation_standard_surface_to_UsdPreviewSurface() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_standard_surface_to_UsdPreviewSurface';
  this.nodedef_type = 'multioutput';
  this.nodedef_node = 'standard_surface_to_UsdPreviewSurface';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/standard_surface_to_UsdPreviewSurface.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_standard_surface_to_UsdPreviewSurface_diffuseColor_out_genglsl.png';
  this.nodedef_group = 'translation';
  this.addInput('metalness','float');
  this.addProperty('metalness', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('base','float');
  this.addProperty('base', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('base_color','color3');
  this.addProperty('base_color', [0.8, 0.8, 0.8], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('specular','float');
  this.addProperty('specular', 1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('specular_color','color3');
  this.addProperty('specular_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('specular_IOR','float');
  this.addProperty('specular_IOR', 1.5, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('specular_roughness','float');
  this.addProperty('specular_roughness', 0.2, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('coat','float');
  this.addProperty('coat', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('coat_color','color3');
  this.addProperty('coat_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('coat_roughness','float');
  this.addProperty('coat_roughness', 0.1, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('emission','float');
  this.addProperty('emission', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('emission_color','color3');
  this.addProperty('emission_color', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('opacity','color3');
  this.addProperty('opacity', [1, 1, 1], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('normal','vector3');
  this.addProperty('normal', [0.5, 0.5, 1.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('diffuseColor_out','color3');
  this.addOutput('emissiveColor_out','color3');
  this.addOutput('metallic_out','float');
  this.addOutput('roughness_out','float');
  this.addOutput('clearcoat_out','float');
  this.addOutput('clearcoatRoughness_out','float');
  this.addOutput('opacity_out','float');
  this.addOutput('ior_out','float');
  this.addOutput('normal_out','vector3');
  this.title = 'standard_surface_to_UsdPreviewSurface_multioutput';
  this.desc = "MaterialX:mtlx/translation/standard_surface_to_UsdPreviewSurface";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_translation_standard_surface_to_UsdPreviewSurface.nodedef_name = 'ND_standard_surface_to_UsdPreviewSurface';
mtlx_translation_standard_surface_to_UsdPreviewSurface.nodedef_node = 'standard_surface_to_UsdPreviewSurface';
mtlx_translation_standard_surface_to_UsdPreviewSurface.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/standard_surface_to_UsdPreviewSurface.html';
LiteGraph.registerNodeType('mtlx/translation/standard_surface_to_UsdPreviewSurface',mtlx_translation_standard_surface_to_UsdPreviewSurface);

/**
  * @function mtlx_colortransform_g18_rec709_to_lin_rec709_color3
  * @description Library: mtlx. Category: standard_surface_to_UsdPreviewSurface. Type: color3
  *   LiteGraph id: mtlx/colortransform/g18_rec709_to_lin_rec709_color3
  */
function mtlx_colortransform_g18_rec709_to_lin_rec709_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_g18_rec709_to_lin_rec709_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'g18_rec709_to_lin_rec709';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/g18_rec709_to_lin_rec709.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_g18_rec709_to_lin_rec709_color3_out_genglsl.png';
  this.nodedef_group = 'colortransform';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'g18_rec709_to_lin_rec709_color3';
  this.desc = "MaterialX:mtlx/colortransform/g18_rec709_to_lin_rec709_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_colortransform_g18_rec709_to_lin_rec709_color3.nodedef_name = 'ND_g18_rec709_to_lin_rec709_color3';
mtlx_colortransform_g18_rec709_to_lin_rec709_color3.nodedef_node = 'g18_rec709_to_lin_rec709';
mtlx_colortransform_g18_rec709_to_lin_rec709_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/g18_rec709_to_lin_rec709.html';
LiteGraph.registerNodeType('mtlx/colortransform/g18_rec709_to_lin_rec709_color3',mtlx_colortransform_g18_rec709_to_lin_rec709_color3);

/**
  * @function mtlx_colortransform_g18_rec709_to_lin_rec709_color4
  * @description Library: mtlx. Category: g18_rec709_to_lin_rec709. Type: color4
  *   LiteGraph id: mtlx/colortransform/g18_rec709_to_lin_rec709_color4
  */
function mtlx_colortransform_g18_rec709_to_lin_rec709_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_g18_rec709_to_lin_rec709_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'g18_rec709_to_lin_rec709';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/g18_rec709_to_lin_rec709.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_g18_rec709_to_lin_rec709_color4_out_genglsl.png';
  this.nodedef_group = 'colortransform';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'g18_rec709_to_lin_rec709_color4';
  this.desc = "MaterialX:mtlx/colortransform/g18_rec709_to_lin_rec709_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_colortransform_g18_rec709_to_lin_rec709_color4.nodedef_name = 'ND_g18_rec709_to_lin_rec709_color4';
mtlx_colortransform_g18_rec709_to_lin_rec709_color4.nodedef_node = 'g18_rec709_to_lin_rec709';
mtlx_colortransform_g18_rec709_to_lin_rec709_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/g18_rec709_to_lin_rec709.html';
LiteGraph.registerNodeType('mtlx/colortransform/g18_rec709_to_lin_rec709_color4',mtlx_colortransform_g18_rec709_to_lin_rec709_color4);

/**
  * @function mtlx_colortransform_g22_rec709_to_lin_rec709_color3
  * @description Library: mtlx. Category: g18_rec709_to_lin_rec709. Type: color3
  *   LiteGraph id: mtlx/colortransform/g22_rec709_to_lin_rec709_color3
  */
function mtlx_colortransform_g22_rec709_to_lin_rec709_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_g22_rec709_to_lin_rec709_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'g22_rec709_to_lin_rec709';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/g22_rec709_to_lin_rec709.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_g22_rec709_to_lin_rec709_color3_out_genglsl.png';
  this.nodedef_group = 'colortransform';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'g22_rec709_to_lin_rec709_color3';
  this.desc = "MaterialX:mtlx/colortransform/g22_rec709_to_lin_rec709_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_colortransform_g22_rec709_to_lin_rec709_color3.nodedef_name = 'ND_g22_rec709_to_lin_rec709_color3';
mtlx_colortransform_g22_rec709_to_lin_rec709_color3.nodedef_node = 'g22_rec709_to_lin_rec709';
mtlx_colortransform_g22_rec709_to_lin_rec709_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/g22_rec709_to_lin_rec709.html';
LiteGraph.registerNodeType('mtlx/colortransform/g22_rec709_to_lin_rec709_color3',mtlx_colortransform_g22_rec709_to_lin_rec709_color3);

/**
  * @function mtlx_colortransform_g22_rec709_to_lin_rec709_color4
  * @description Library: mtlx. Category: g22_rec709_to_lin_rec709. Type: color4
  *   LiteGraph id: mtlx/colortransform/g22_rec709_to_lin_rec709_color4
  */
function mtlx_colortransform_g22_rec709_to_lin_rec709_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_g22_rec709_to_lin_rec709_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'g22_rec709_to_lin_rec709';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/g22_rec709_to_lin_rec709.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_g22_rec709_to_lin_rec709_color4_out_genglsl.png';
  this.nodedef_group = 'colortransform';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'g22_rec709_to_lin_rec709_color4';
  this.desc = "MaterialX:mtlx/colortransform/g22_rec709_to_lin_rec709_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_colortransform_g22_rec709_to_lin_rec709_color4.nodedef_name = 'ND_g22_rec709_to_lin_rec709_color4';
mtlx_colortransform_g22_rec709_to_lin_rec709_color4.nodedef_node = 'g22_rec709_to_lin_rec709';
mtlx_colortransform_g22_rec709_to_lin_rec709_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/g22_rec709_to_lin_rec709.html';
LiteGraph.registerNodeType('mtlx/colortransform/g22_rec709_to_lin_rec709_color4',mtlx_colortransform_g22_rec709_to_lin_rec709_color4);

/**
  * @function mtlx_colortransform_rec709_display_to_lin_rec709_color3
  * @description Library: mtlx. Category: g22_rec709_to_lin_rec709. Type: color3
  *   LiteGraph id: mtlx/colortransform/rec709_display_to_lin_rec709_color3
  */
function mtlx_colortransform_rec709_display_to_lin_rec709_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_rec709_display_to_lin_rec709_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'rec709_display_to_lin_rec709';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/rec709_display_to_lin_rec709.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_rec709_display_to_lin_rec709_color3_out_genglsl.png';
  this.nodedef_group = 'colortransform';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'rec709_display_to_lin_rec709_color3';
  this.desc = "MaterialX:mtlx/colortransform/rec709_display_to_lin_rec709_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_colortransform_rec709_display_to_lin_rec709_color3.nodedef_name = 'ND_rec709_display_to_lin_rec709_color3';
mtlx_colortransform_rec709_display_to_lin_rec709_color3.nodedef_node = 'rec709_display_to_lin_rec709';
mtlx_colortransform_rec709_display_to_lin_rec709_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/rec709_display_to_lin_rec709.html';
LiteGraph.registerNodeType('mtlx/colortransform/rec709_display_to_lin_rec709_color3',mtlx_colortransform_rec709_display_to_lin_rec709_color3);

/**
  * @function mtlx_colortransform_rec709_display_to_lin_rec709_color4
  * @description Library: mtlx. Category: rec709_display_to_lin_rec709. Type: color4
  *   LiteGraph id: mtlx/colortransform/rec709_display_to_lin_rec709_color4
  */
function mtlx_colortransform_rec709_display_to_lin_rec709_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_rec709_display_to_lin_rec709_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'rec709_display_to_lin_rec709';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/rec709_display_to_lin_rec709.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_rec709_display_to_lin_rec709_color4_out_genglsl.png';
  this.nodedef_group = 'colortransform';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'rec709_display_to_lin_rec709_color4';
  this.desc = "MaterialX:mtlx/colortransform/rec709_display_to_lin_rec709_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_colortransform_rec709_display_to_lin_rec709_color4.nodedef_name = 'ND_rec709_display_to_lin_rec709_color4';
mtlx_colortransform_rec709_display_to_lin_rec709_color4.nodedef_node = 'rec709_display_to_lin_rec709';
mtlx_colortransform_rec709_display_to_lin_rec709_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/rec709_display_to_lin_rec709.html';
LiteGraph.registerNodeType('mtlx/colortransform/rec709_display_to_lin_rec709_color4',mtlx_colortransform_rec709_display_to_lin_rec709_color4);

/**
  * @function mtlx_colortransform_acescg_to_lin_rec709_color3
  * @description Library: mtlx. Category: rec709_display_to_lin_rec709. Type: color3
  *   LiteGraph id: mtlx/colortransform/acescg_to_lin_rec709_color3
  */
function mtlx_colortransform_acescg_to_lin_rec709_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_acescg_to_lin_rec709_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'acescg_to_lin_rec709';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/acescg_to_lin_rec709.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_acescg_to_lin_rec709_color3_out_genglsl.png';
  this.nodedef_group = 'colortransform';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'acescg_to_lin_rec709_color3';
  this.desc = "MaterialX:mtlx/colortransform/acescg_to_lin_rec709_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_colortransform_acescg_to_lin_rec709_color3.nodedef_name = 'ND_acescg_to_lin_rec709_color3';
mtlx_colortransform_acescg_to_lin_rec709_color3.nodedef_node = 'acescg_to_lin_rec709';
mtlx_colortransform_acescg_to_lin_rec709_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/acescg_to_lin_rec709.html';
LiteGraph.registerNodeType('mtlx/colortransform/acescg_to_lin_rec709_color3',mtlx_colortransform_acescg_to_lin_rec709_color3);

/**
  * @function mtlx_colortransform_acescg_to_lin_rec709_color4
  * @description Library: mtlx. Category: acescg_to_lin_rec709. Type: color4
  *   LiteGraph id: mtlx/colortransform/acescg_to_lin_rec709_color4
  */
function mtlx_colortransform_acescg_to_lin_rec709_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_acescg_to_lin_rec709_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'acescg_to_lin_rec709';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/acescg_to_lin_rec709.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_acescg_to_lin_rec709_color4_out_genglsl.png';
  this.nodedef_group = 'colortransform';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'acescg_to_lin_rec709_color4';
  this.desc = "MaterialX:mtlx/colortransform/acescg_to_lin_rec709_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_colortransform_acescg_to_lin_rec709_color4.nodedef_name = 'ND_acescg_to_lin_rec709_color4';
mtlx_colortransform_acescg_to_lin_rec709_color4.nodedef_node = 'acescg_to_lin_rec709';
mtlx_colortransform_acescg_to_lin_rec709_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/acescg_to_lin_rec709.html';
LiteGraph.registerNodeType('mtlx/colortransform/acescg_to_lin_rec709_color4',mtlx_colortransform_acescg_to_lin_rec709_color4);

/**
  * @function mtlx_colortransform_g22_ap1_to_lin_rec709_color3
  * @description Library: mtlx. Category: acescg_to_lin_rec709. Type: color3
  *   LiteGraph id: mtlx/colortransform/g22_ap1_to_lin_rec709_color3
  */
function mtlx_colortransform_g22_ap1_to_lin_rec709_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_g22_ap1_to_lin_rec709_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'g22_ap1_to_lin_rec709';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/g22_ap1_to_lin_rec709.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_g22_ap1_to_lin_rec709_color3_out_genglsl.png';
  this.nodedef_group = 'colortransform';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'g22_ap1_to_lin_rec709_color3';
  this.desc = "MaterialX:mtlx/colortransform/g22_ap1_to_lin_rec709_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_colortransform_g22_ap1_to_lin_rec709_color3.nodedef_name = 'ND_g22_ap1_to_lin_rec709_color3';
mtlx_colortransform_g22_ap1_to_lin_rec709_color3.nodedef_node = 'g22_ap1_to_lin_rec709';
mtlx_colortransform_g22_ap1_to_lin_rec709_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/g22_ap1_to_lin_rec709.html';
LiteGraph.registerNodeType('mtlx/colortransform/g22_ap1_to_lin_rec709_color3',mtlx_colortransform_g22_ap1_to_lin_rec709_color3);

/**
  * @function mtlx_colortransform_g22_ap1_to_lin_rec709_color4
  * @description Library: mtlx. Category: g22_ap1_to_lin_rec709. Type: color4
  *   LiteGraph id: mtlx/colortransform/g22_ap1_to_lin_rec709_color4
  */
function mtlx_colortransform_g22_ap1_to_lin_rec709_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_g22_ap1_to_lin_rec709_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'g22_ap1_to_lin_rec709';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/g22_ap1_to_lin_rec709.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_g22_ap1_to_lin_rec709_color4_out_genglsl.png';
  this.nodedef_group = 'colortransform';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'g22_ap1_to_lin_rec709_color4';
  this.desc = "MaterialX:mtlx/colortransform/g22_ap1_to_lin_rec709_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_colortransform_g22_ap1_to_lin_rec709_color4.nodedef_name = 'ND_g22_ap1_to_lin_rec709_color4';
mtlx_colortransform_g22_ap1_to_lin_rec709_color4.nodedef_node = 'g22_ap1_to_lin_rec709';
mtlx_colortransform_g22_ap1_to_lin_rec709_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/g22_ap1_to_lin_rec709.html';
LiteGraph.registerNodeType('mtlx/colortransform/g22_ap1_to_lin_rec709_color4',mtlx_colortransform_g22_ap1_to_lin_rec709_color4);

/**
  * @function mtlx_colortransform_srgb_texture_to_lin_rec709_color3
  * @description Library: mtlx. Category: g22_ap1_to_lin_rec709. Type: color3
  *   LiteGraph id: mtlx/colortransform/srgb_texture_to_lin_rec709_color3
  */
function mtlx_colortransform_srgb_texture_to_lin_rec709_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_srgb_texture_to_lin_rec709_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'srgb_texture_to_lin_rec709';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/srgb_texture_to_lin_rec709.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_srgb_texture_to_lin_rec709_color3_out_genglsl.png';
  this.nodedef_group = 'colortransform';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'srgb_texture_to_lin_rec709_color3';
  this.desc = "MaterialX:mtlx/colortransform/srgb_texture_to_lin_rec709_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_colortransform_srgb_texture_to_lin_rec709_color3.nodedef_name = 'ND_srgb_texture_to_lin_rec709_color3';
mtlx_colortransform_srgb_texture_to_lin_rec709_color3.nodedef_node = 'srgb_texture_to_lin_rec709';
mtlx_colortransform_srgb_texture_to_lin_rec709_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/srgb_texture_to_lin_rec709.html';
LiteGraph.registerNodeType('mtlx/colortransform/srgb_texture_to_lin_rec709_color3',mtlx_colortransform_srgb_texture_to_lin_rec709_color3);

/**
  * @function mtlx_colortransform_srgb_texture_to_lin_rec709_color4
  * @description Library: mtlx. Category: srgb_texture_to_lin_rec709. Type: color4
  *   LiteGraph id: mtlx/colortransform/srgb_texture_to_lin_rec709_color4
  */
function mtlx_colortransform_srgb_texture_to_lin_rec709_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_srgb_texture_to_lin_rec709_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'srgb_texture_to_lin_rec709';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/srgb_texture_to_lin_rec709.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_srgb_texture_to_lin_rec709_color4_out_genglsl.png';
  this.nodedef_group = 'colortransform';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'srgb_texture_to_lin_rec709_color4';
  this.desc = "MaterialX:mtlx/colortransform/srgb_texture_to_lin_rec709_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_colortransform_srgb_texture_to_lin_rec709_color4.nodedef_name = 'ND_srgb_texture_to_lin_rec709_color4';
mtlx_colortransform_srgb_texture_to_lin_rec709_color4.nodedef_node = 'srgb_texture_to_lin_rec709';
mtlx_colortransform_srgb_texture_to_lin_rec709_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/srgb_texture_to_lin_rec709.html';
LiteGraph.registerNodeType('mtlx/colortransform/srgb_texture_to_lin_rec709_color4',mtlx_colortransform_srgb_texture_to_lin_rec709_color4);

/**
  * @function mtlx_colortransform_lin_adobergb_to_lin_rec709_color3
  * @description Library: mtlx. Category: srgb_texture_to_lin_rec709. Type: color3
  *   LiteGraph id: mtlx/colortransform/lin_adobergb_to_lin_rec709_color3
  */
function mtlx_colortransform_lin_adobergb_to_lin_rec709_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_lin_adobergb_to_lin_rec709_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'lin_adobergb_to_lin_rec709';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/lin_adobergb_to_lin_rec709.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_lin_adobergb_to_lin_rec709_color3_out_genglsl.png';
  this.nodedef_group = 'colortransform';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'lin_adobergb_to_lin_rec709_color3';
  this.desc = "MaterialX:mtlx/colortransform/lin_adobergb_to_lin_rec709_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_colortransform_lin_adobergb_to_lin_rec709_color3.nodedef_name = 'ND_lin_adobergb_to_lin_rec709_color3';
mtlx_colortransform_lin_adobergb_to_lin_rec709_color3.nodedef_node = 'lin_adobergb_to_lin_rec709';
mtlx_colortransform_lin_adobergb_to_lin_rec709_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/lin_adobergb_to_lin_rec709.html';
LiteGraph.registerNodeType('mtlx/colortransform/lin_adobergb_to_lin_rec709_color3',mtlx_colortransform_lin_adobergb_to_lin_rec709_color3);

/**
  * @function mtlx_colortransform_lin_adobergb_to_lin_rec709_color4
  * @description Library: mtlx. Category: lin_adobergb_to_lin_rec709. Type: color4
  *   LiteGraph id: mtlx/colortransform/lin_adobergb_to_lin_rec709_color4
  */
function mtlx_colortransform_lin_adobergb_to_lin_rec709_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_lin_adobergb_to_lin_rec709_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'lin_adobergb_to_lin_rec709';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/lin_adobergb_to_lin_rec709.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_lin_adobergb_to_lin_rec709_color4_out_genglsl.png';
  this.nodedef_group = 'colortransform';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'lin_adobergb_to_lin_rec709_color4';
  this.desc = "MaterialX:mtlx/colortransform/lin_adobergb_to_lin_rec709_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_colortransform_lin_adobergb_to_lin_rec709_color4.nodedef_name = 'ND_lin_adobergb_to_lin_rec709_color4';
mtlx_colortransform_lin_adobergb_to_lin_rec709_color4.nodedef_node = 'lin_adobergb_to_lin_rec709';
mtlx_colortransform_lin_adobergb_to_lin_rec709_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/lin_adobergb_to_lin_rec709.html';
LiteGraph.registerNodeType('mtlx/colortransform/lin_adobergb_to_lin_rec709_color4',mtlx_colortransform_lin_adobergb_to_lin_rec709_color4);

/**
  * @function mtlx_colortransform_adobergb_to_lin_rec709_color3
  * @description Library: mtlx. Category: lin_adobergb_to_lin_rec709. Type: color3
  *   LiteGraph id: mtlx/colortransform/adobergb_to_lin_rec709_color3
  */
function mtlx_colortransform_adobergb_to_lin_rec709_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_adobergb_to_lin_rec709_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'adobergb_to_lin_rec709';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/adobergb_to_lin_rec709.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_adobergb_to_lin_rec709_color3_out_genglsl.png';
  this.nodedef_group = 'colortransform';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'adobergb_to_lin_rec709_color3';
  this.desc = "MaterialX:mtlx/colortransform/adobergb_to_lin_rec709_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_colortransform_adobergb_to_lin_rec709_color3.nodedef_name = 'ND_adobergb_to_lin_rec709_color3';
mtlx_colortransform_adobergb_to_lin_rec709_color3.nodedef_node = 'adobergb_to_lin_rec709';
mtlx_colortransform_adobergb_to_lin_rec709_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/adobergb_to_lin_rec709.html';
LiteGraph.registerNodeType('mtlx/colortransform/adobergb_to_lin_rec709_color3',mtlx_colortransform_adobergb_to_lin_rec709_color3);

/**
  * @function mtlx_colortransform_adobergb_to_lin_rec709_color4
  * @description Library: mtlx. Category: adobergb_to_lin_rec709. Type: color4
  *   LiteGraph id: mtlx/colortransform/adobergb_to_lin_rec709_color4
  */
function mtlx_colortransform_adobergb_to_lin_rec709_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_adobergb_to_lin_rec709_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'adobergb_to_lin_rec709';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/adobergb_to_lin_rec709.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_adobergb_to_lin_rec709_color4_out_genglsl.png';
  this.nodedef_group = 'colortransform';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'adobergb_to_lin_rec709_color4';
  this.desc = "MaterialX:mtlx/colortransform/adobergb_to_lin_rec709_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_colortransform_adobergb_to_lin_rec709_color4.nodedef_name = 'ND_adobergb_to_lin_rec709_color4';
mtlx_colortransform_adobergb_to_lin_rec709_color4.nodedef_node = 'adobergb_to_lin_rec709';
mtlx_colortransform_adobergb_to_lin_rec709_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/adobergb_to_lin_rec709.html';
LiteGraph.registerNodeType('mtlx/colortransform/adobergb_to_lin_rec709_color4',mtlx_colortransform_adobergb_to_lin_rec709_color4);

/**
  * @function mtlx_colortransform_srgb_displayp3_to_lin_rec709_color3
  * @description Library: mtlx. Category: adobergb_to_lin_rec709. Type: color3
  *   LiteGraph id: mtlx/colortransform/srgb_displayp3_to_lin_rec709_color3
  */
function mtlx_colortransform_srgb_displayp3_to_lin_rec709_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_srgb_displayp3_to_lin_rec709_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'srgb_displayp3_to_lin_rec709';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/srgb_displayp3_to_lin_rec709.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_srgb_displayp3_to_lin_rec709_color3_out_genglsl.png';
  this.nodedef_group = 'colortransform';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'srgb_displayp3_to_lin_rec709_color3';
  this.desc = "MaterialX:mtlx/colortransform/srgb_displayp3_to_lin_rec709_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_colortransform_srgb_displayp3_to_lin_rec709_color3.nodedef_name = 'ND_srgb_displayp3_to_lin_rec709_color3';
mtlx_colortransform_srgb_displayp3_to_lin_rec709_color3.nodedef_node = 'srgb_displayp3_to_lin_rec709';
mtlx_colortransform_srgb_displayp3_to_lin_rec709_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/srgb_displayp3_to_lin_rec709.html';
LiteGraph.registerNodeType('mtlx/colortransform/srgb_displayp3_to_lin_rec709_color3',mtlx_colortransform_srgb_displayp3_to_lin_rec709_color3);

/**
  * @function mtlx_colortransform_srgb_displayp3_to_lin_rec709_color4
  * @description Library: mtlx. Category: srgb_displayp3_to_lin_rec709. Type: color4
  *   LiteGraph id: mtlx/colortransform/srgb_displayp3_to_lin_rec709_color4
  */
function mtlx_colortransform_srgb_displayp3_to_lin_rec709_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_srgb_displayp3_to_lin_rec709_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'srgb_displayp3_to_lin_rec709';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/srgb_displayp3_to_lin_rec709.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_srgb_displayp3_to_lin_rec709_color4_out_genglsl.png';
  this.nodedef_group = 'colortransform';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'srgb_displayp3_to_lin_rec709_color4';
  this.desc = "MaterialX:mtlx/colortransform/srgb_displayp3_to_lin_rec709_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_colortransform_srgb_displayp3_to_lin_rec709_color4.nodedef_name = 'ND_srgb_displayp3_to_lin_rec709_color4';
mtlx_colortransform_srgb_displayp3_to_lin_rec709_color4.nodedef_node = 'srgb_displayp3_to_lin_rec709';
mtlx_colortransform_srgb_displayp3_to_lin_rec709_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/srgb_displayp3_to_lin_rec709.html';
LiteGraph.registerNodeType('mtlx/colortransform/srgb_displayp3_to_lin_rec709_color4',mtlx_colortransform_srgb_displayp3_to_lin_rec709_color4);

/**
  * @function mtlx_colortransform_lin_displayp3_to_lin_rec709_color3
  * @description Library: mtlx. Category: srgb_displayp3_to_lin_rec709. Type: color3
  *   LiteGraph id: mtlx/colortransform/lin_displayp3_to_lin_rec709_color3
  */
function mtlx_colortransform_lin_displayp3_to_lin_rec709_color3() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_lin_displayp3_to_lin_rec709_color3';
  this.nodedef_type = 'color3';
  this.nodedef_node = 'lin_displayp3_to_lin_rec709';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/lin_displayp3_to_lin_rec709.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_lin_displayp3_to_lin_rec709_color3_out_genglsl.png';
  this.nodedef_group = 'colortransform';
  this.addInput('in','color3');
  this.addProperty('in', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color3');
  this.title = 'lin_displayp3_to_lin_rec709_color3';
  this.desc = "MaterialX:mtlx/colortransform/lin_displayp3_to_lin_rec709_color3";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#37A';
}
mtlx_colortransform_lin_displayp3_to_lin_rec709_color3.nodedef_name = 'ND_lin_displayp3_to_lin_rec709_color3';
mtlx_colortransform_lin_displayp3_to_lin_rec709_color3.nodedef_node = 'lin_displayp3_to_lin_rec709';
mtlx_colortransform_lin_displayp3_to_lin_rec709_color3.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/lin_displayp3_to_lin_rec709.html';
LiteGraph.registerNodeType('mtlx/colortransform/lin_displayp3_to_lin_rec709_color3',mtlx_colortransform_lin_displayp3_to_lin_rec709_color3);

/**
  * @function mtlx_colortransform_lin_displayp3_to_lin_rec709_color4
  * @description Library: mtlx. Category: lin_displayp3_to_lin_rec709. Type: color4
  *   LiteGraph id: mtlx/colortransform/lin_displayp3_to_lin_rec709_color4
  */
function mtlx_colortransform_lin_displayp3_to_lin_rec709_color4() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_lin_displayp3_to_lin_rec709_color4';
  this.nodedef_type = 'color4';
  this.nodedef_node = 'lin_displayp3_to_lin_rec709';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/lin_displayp3_to_lin_rec709.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_lin_displayp3_to_lin_rec709_color4_out_genglsl.png';
  this.nodedef_group = 'colortransform';
  this.addInput('in','color4');
  this.addProperty('in', [0.0, 0.0, 0.0, 1.0], 'color4',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','color4');
  this.title = 'lin_displayp3_to_lin_rec709_color4';
  this.desc = "MaterialX:mtlx/colortransform/lin_displayp3_to_lin_rec709_color4";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
  this.boxcolor = '#69A';
}
mtlx_colortransform_lin_displayp3_to_lin_rec709_color4.nodedef_name = 'ND_lin_displayp3_to_lin_rec709_color4';
mtlx_colortransform_lin_displayp3_to_lin_rec709_color4.nodedef_node = 'lin_displayp3_to_lin_rec709';
mtlx_colortransform_lin_displayp3_to_lin_rec709_color4.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/lin_displayp3_to_lin_rec709.html';
LiteGraph.registerNodeType('mtlx/colortransform/lin_displayp3_to_lin_rec709_color4',mtlx_colortransform_lin_displayp3_to_lin_rec709_color4);

/**
  * @function mtlx_light_point_light
  * @description Library: mtlx. Category: lin_displayp3_to_lin_rec709. Type: lightshader
  *   LiteGraph id: mtlx/light/point_light
  */
function mtlx_light_point_light() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_point_light';
  this.nodedef_type = 'lightshader';
  this.nodedef_node = 'point_light';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/point_light.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_point_light_out_genglsl.png';
  this.nodedef_group = 'light';
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('color','color3');
  this.addProperty('color', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('intensity','float');
  this.addProperty('intensity', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('decay_rate','float');
  this.addProperty('decay_rate', 2.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','lightshader');
  this.title = 'point_light_lightshader';
  this.desc = "MaterialX:mtlx/light/point_light";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_light_point_light.nodedef_name = 'ND_point_light';
mtlx_light_point_light.nodedef_node = 'point_light';
mtlx_light_point_light.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/point_light.html';
LiteGraph.registerNodeType('mtlx/light/point_light',mtlx_light_point_light);

/**
  * @function mtlx_light_directional_light
  * @description Library: mtlx. Category: point_light. Type: lightshader
  *   LiteGraph id: mtlx/light/directional_light
  */
function mtlx_light_directional_light() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_directional_light';
  this.nodedef_type = 'lightshader';
  this.nodedef_node = 'directional_light';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/directional_light.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_directional_light_out_genglsl.png';
  this.nodedef_group = 'light';
  this.addInput('direction','vector3');
  this.addProperty('direction', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('color','color3');
  this.addProperty('color', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('intensity','float');
  this.addProperty('intensity', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','lightshader');
  this.title = 'directional_light_lightshader';
  this.desc = "MaterialX:mtlx/light/directional_light";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_light_directional_light.nodedef_name = 'ND_directional_light';
mtlx_light_directional_light.nodedef_node = 'directional_light';
mtlx_light_directional_light.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/directional_light.html';
LiteGraph.registerNodeType('mtlx/light/directional_light',mtlx_light_directional_light);

/**
  * @function mtlx_light_spot_light
  * @description Library: mtlx. Category: directional_light. Type: lightshader
  *   LiteGraph id: mtlx/light/spot_light
  */
function mtlx_light_spot_light() {
  this.nodedef_icon = '';
  this.nodedef_name = 'ND_spot_light';
  this.nodedef_type = 'lightshader';
  this.nodedef_node = 'spot_light';
  this.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/spot_light.html';
  this.nodedef_swatch = 'https://kwokcb.github.io/MaterialX_Learn/resources/mtlx/nodedef_materials/material_spot_light_out_genglsl.png';
  this.nodedef_group = 'light';
  this.addInput('position','vector3');
  this.addProperty('position', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('direction','vector3');
  this.addProperty('direction', [0.0, 0.0, 0.0], 'vector3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('color','color3');
  this.addProperty('color', [0.0, 0.0, 0.0], 'color3',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('intensity','float');
  this.addProperty('intensity', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('decay_rate','float');
  this.addProperty('decay_rate', 2.0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('inner_angle','float');
  this.addProperty('inner_angle', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addInput('outer_angle','float');
  this.addProperty('outer_angle', 0, 'float',{"colorspace":"","unit":"","unittype":"","uiname":"","uimin":null,"uimax":null,"uifolder":"","defaultgeomprop":""});
  this.addOutput('out','lightshader');
  this.title = 'spot_light_lightshader';
  this.desc = "MaterialX:mtlx/light/spot_light";
  this.onNodeCreated = function() {
  //console.log('Node created:', this);
}
  this.onRemoved = function() {
  //console.log('Node removed:', this);
  }
  this.onPropertyChanged = function(name, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyChanged(this.title, name, value, prev_value, this);
  }
  this.onPropertyInfoChanged = function(name, info, value, prev_value) {
 MxShadingGraphEditor.theEditor.monitor.onPropertyInfoChanged(this.title, name, info, value, prev_value, this);
  }
  this.onConnectOutput = function(slot, input_type, input, target_node, target_slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectOutput(slot, input_type, input, target_node, target_slot, this);
  }
  this.onConnectInput = function(target_slot, output_type, output, source, slot) {
 MxShadingGraphEditor.theEditor.monitor.onConnectInput(target_slot, output_type, output, source, slot, this);
  }
  this.bgcolor = '#111';
  this.color = '#222';
  this.shape = LiteGraph.ROUND_SHAPE;
}
mtlx_light_spot_light.nodedef_name = 'ND_spot_light';
mtlx_light_spot_light.nodedef_node = 'spot_light';
mtlx_light_spot_light.nodedef_href = 'https://kwokcb.github.io/MaterialX_Learn/documents/definitions/spot_light.html';
LiteGraph.registerNodeType('mtlx/light/spot_light',mtlx_light_spot_light);
