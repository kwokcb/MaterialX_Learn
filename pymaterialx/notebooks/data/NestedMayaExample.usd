#usda 1.0

def Sphere "Sphere1" (
    prepend apiSchemas = ["MaterialBindingAPI"]
)
{
    uniform bool doubleSided = 0
    rel material:binding = </mtl/MtlxOnlyMaterial>
}

def Scope "mtl"
{
    def Material "MtlxOnlyMaterial" (
        prepend apiSchemas = ["NodeGraphNodeAPI"]
    )
    {
        token outputs:mtlx:surface.connect = </mtl/MtlxOnlyMaterial/MtlxStandardSurfaceShader.outputs:out>
        uniform float2 ui:nodegraph:node:pos = (-1.7227112, -0.7954222)

        def Shader "MtlxStandardSurfaceShader" (
            prepend apiSchemas = ["NodeGraphNodeAPI"]
        )
        {
            uniform token info:id = "ND_standard_surface_surfaceshader"
            color3f inputs:base_color.connect = </mtl/MtlxOnlyMaterial/MyGraph.outputs:out>
            token outputs:out
            uniform float2 ui:nodegraph:node:pos = (-0.5611111, -0.85833335)
        }

        def NodeGraph "MyGraph" (
            prepend apiSchemas = ["NodeGraphNodeAPI"]
        )
        {
            color3f outputs:out.connect = </mtl/MtlxOnlyMaterial/MyGraph/MtlxImage.outputs:out>
            uniform float2 ui:nodegraph:node:pos = (-2.5, -0.15833333)

            def Shader "MtlxImage" (
                prepend apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @D:/Work/materialx/bernard_MaterialX_2/resources/Images/grid.png@
                color3f outputs:out
                uniform float2 ui:nodegraph:node:pos = (-1.0388889, -0.89166665)
            }
        }
    }

    def Material "MtlxMayaMaterial" (
        prepend apiSchemas = ["NodeGraphNodeAPI"]
    )
    {
        token outputs:mtlx:surface.connect = </mtl/MtlxMayaMaterial/MtlxMayaBlinn1.outputs:outColor>
        uniform float2 ui:nodegraph:node:pos = (-1.3220611, -0.10604555)

        def Shader "MtlxMayaBlinn1" (
            prepend apiSchemas = ["NodeGraphNodeAPI"]
        )
        {
            uniform token info:id = "MayaND_blinn_surfaceshader"
            color3f inputs:color.connect = </mtl/MtlxMayaMaterial/MyBlinnGraph.outputs:out>
            token outputs:outColor
            uniform float2 ui:nodegraph:node:pos = (-0.5888889, -0.725)
        }

        def NodeGraph "MyBlinnGraph" (
            prepend apiSchemas = ["NodeGraphNodeAPI"]
        )
        {
            color3f outputs:out.connect = </mtl/MtlxMayaMaterial/MyBlinnGraph/convert2.outputs:out>
            uniform float2 ui:nodegraph:node:pos = (-2.2083333, 0.044444446)

            def Shader "MtlxImage" (
                prepend apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @D:/Work/materialx/bernard_MaterialX_2/resources/Images/grid.png@
                color3f outputs:out
                uniform float2 ui:nodegraph:node:pos = (0.055555556, 0.45555556)
            }

            def Shader "MayaFileTexture" (
                prepend apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                uniform token info:id = "MayaND_fileTexture_color3"
                float inputs:exposure = 0.02325
                color3f inputs:inColor.connect = </mtl/MtlxMayaMaterial/MyBlinnGraph/MtlxImage.outputs:out>
                bool inputs:invert = 0
                color3f outputs:outColor
                uniform float2 ui:nodegraph:node:pos = (1.75, 0.32222223)
            }

            def Shader "LdkColorCorrect1" (
                prepend apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                uniform token info:id = "LdkND_ColorCorrect_color4"
                color3f inputs:inColor.connect = </mtl/MtlxMayaMaterial/MyBlinnGraph/MayaFileTexture.outputs:outColor>
                color4f outputs:outColor
                uniform float2 ui:nodegraph:node:pos = (3.4444444, 0.19444445)
            }

            def Shader "convert2" (
                prepend apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                uniform token info:id = "ND_convert_color4_color3"
                color4f inputs:in.connect = </mtl/MtlxMayaMaterial/MyBlinnGraph/LdkColorCorrect1.outputs:outColor>
                color3f outputs:out
                uniform float2 ui:nodegraph:node:pos = (5.138889, 0.06111111)
            }
        }
    }

    def Material "NestedMaterial" (
        prepend apiSchemas = ["NodeGraphNodeAPI"]
    )
    {
        asset inputs:file = @@ (
            sdrMetadata = {
                string uiname = "Filename"
                string uisoftmax = "1.0"
                string uisoftmin = "0.0"
            }
        )
        token outputs:mtlx:surface.connect = </mtl/NestedMaterial/standard_surface1.outputs:out>
        uniform float2 ui:nodegraph:node:pos = (0.055555556, 0.055555556)

        def NodeGraph "Graph_Level_1" (
            prepend apiSchemas = ["NodeGraphNodeAPI"]
        )
        {
            asset inputs:file = @@ (
                sdrMetadata = {
                    string uiname = "Filename"
                    string uisoftmax = "1.0"
                    string uisoftmin = "0.0"
                }
            )
            asset inputs:file.connect = </mtl/NestedMaterial.inputs:file>
            color3f outputs:out.connect = </mtl/NestedMaterial/Graph_Level_1/Graph_Level_2.outputs:out>
            uniform float2 ui:nodegraph:node:pos = (-1.9111111, -0.46699777)

            def NodeGraph "Graph_Level_2" (
                prepend apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                asset inputs:file = @@ (
                    sdrMetadata = {
                        string uiname = "Filename"
                        string uisoftmax = "1.0"
                        string uisoftmin = "0.0"
                    }
                )
                asset inputs:file.connect = </mtl/NestedMaterial/Graph_Level_1.inputs:file>
                color3f outputs:out.connect = </mtl/NestedMaterial/Graph_Level_1/Graph_Level_2/image1.outputs:out>
                uniform float2 ui:nodegraph:node:pos = (-1.225, -0.8111111)

                def Shader "image1" (
                    prepend apiSchemas = ["NodeGraphNodeAPI"]
                )
                {
                    uniform token info:id = "ND_image_color3"
                    asset inputs:file.connect = </mtl/NestedMaterial/Graph_Level_1/Graph_Level_2.inputs:file>
                    color3f outputs:out
                    uniform float2 ui:nodegraph:node:pos = (-0.3861111, -0.7861111)
                }
            }
        }

        def Shader "standard_surface1" (
            prepend apiSchemas = ["NodeGraphNodeAPI"]
        )
        {
            uniform token info:id = "ND_standard_surface_surfaceshader"
            color3f inputs:base_color.connect = </mtl/NestedMaterial/Graph_Level_1.outputs:out>
            token outputs:out
            uniform float2 ui:nodegraph:node:pos = (-0.31691945, -1.1086111)
        }
    }
}

