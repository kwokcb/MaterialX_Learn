#usda 1.0

def Material "MAT_glassDish"
{
    token outputs:mtlx:surface.connect = </MAT_glassDish/SHD_glassDish.outputs:out>

    def Shader "SHD_glassDish"
    {
        uniform token info:id = "ND_gltf_pbr_surfaceshader"
        float inputs:alpha = 1
        float inputs:alpha_cutoff = 0.5
        int inputs:alpha_mode = 0
        color3f inputs:attenuation_color = (1, 1, 1)
        float inputs:attenuation_distance = 3.40282e38
        color3f inputs:base_color = (1, 1, 1)
        float inputs:clearcoat = 0
        vector3f inputs:clearcoat_normal
        float inputs:clearcoat_roughness = 0
        color3f inputs:emissive = (0, 0, 0)
        float inputs:emissive_strength = 1
        float inputs:ior = 1.5
        float inputs:iridescence = 0
        float inputs:iridescence.connect = </MAT_glassDish/image_iridescence.outputs:out>
        float inputs:iridescence_ior = 1.3
        float inputs:iridescence_thickness = 100
        float inputs:iridescence_thickness.connect = </MAT_glassDish/image_iridescence_thickness.outputs:out>
        float inputs:metallic = 0
        vector3f inputs:normal
        float inputs:occlusion = 1
        float inputs:occlusion.connect = </MAT_glassDish/image_occlusion.outputs:out>
        float inputs:roughness = 0.07
        color3f inputs:sheen_color = (0, 0, 0)
        float inputs:sheen_roughness = 0
        float inputs:specular = 1
        color3f inputs:specular_color = (1, 1, 1)
        vector3f inputs:tangent
        float inputs:thickness = 0.01
        float inputs:transmission = 1
        token outputs:out
    }

    def Shader "image_occlusion"
    {
        uniform token info:id = "ND_gltf_image_float_float_1_0"
        float inputs:default = 0
        float inputs:factor = 1
        asset inputs:file = @goldleaf_orm.png@
        string inputs:filtertype = "linear"
        float2 inputs:offset = (0, 0)
        int inputs:operationorder = 0
        float2 inputs:pivot = (0, 1)
        float inputs:rotate = 0
        float2 inputs:scale = (1, 1)
        float2 inputs:texcoord
        string inputs:uaddressmode = "periodic"
        string inputs:vaddressmode = "periodic"
        float outputs:out
    }

    def Shader "image_iridescence"
    {
        uniform token info:id = "ND_gltf_image_float_float_1_0"
        float inputs:default = 0
        float inputs:factor = 1
        asset inputs:file = @glassdish_irid.png@
        string inputs:filtertype = "linear"
        float2 inputs:offset = (0, 0)
        int inputs:operationorder = 0
        float2 inputs:pivot = (0, 1)
        float inputs:rotate = 0
        float2 inputs:scale = (1, 1)
        float2 inputs:texcoord
        string inputs:uaddressmode = "periodic"
        string inputs:vaddressmode = "periodic"
        float outputs:out
    }

    def Shader "image_iridescence_thickness"
    {
        uniform token info:id = "ND_gltf_iridescence_thickness_float_1_0"
        vector3f inputs:default = (0, 0, 0)
        asset inputs:file = @glassdish_irid.png@
        string inputs:filtertype = "linear"
        float2 inputs:offset = (0, 0)
        float2 inputs:pivot = (0, 0)
        float inputs:rotate = 0
        float2 inputs:scale = (1, 1)
        float2 inputs:texcoord
        float inputs:thicknessMax = 550
        float inputs:thicknessMin = 500
        string inputs:uaddressmode = "periodic"
        string inputs:vaddressmode = "periodic"
        float outputs:out
    }

    def Shader "SHD_olives"
    {
        uniform token info:id = "ND_gltf_pbr_surfaceshader"
        float inputs:alpha = 1
        float inputs:alpha_cutoff = 0.5
        int inputs:alpha_mode = 0
        color3f inputs:attenuation_color = (1, 1, 1)
        float inputs:attenuation_distance
        color3f inputs:base_color = (1, 1, 1)
        color3f inputs:base_color.connect = </MAT_glassDish/image_basecolor.outputs:out>
        float inputs:clearcoat = 0
        vector3f inputs:clearcoat_normal
        float inputs:clearcoat_roughness = 0
        color3f inputs:emissive = (0, 0, 0)
        float inputs:emissive_strength = 1
        float inputs:ior = 1.5
        float inputs:iridescence = 0
        float inputs:iridescence_ior = 1.3
        float inputs:iridescence_thickness = 100
        float inputs:metallic = 1
        float inputs:metallic.connect = </MAT_glassDish/image_orm.outputs:out>
        vector3f inputs:normal.connect = </MAT_glassDish/image_normal.outputs:out>
        float inputs:occlusion = 1
        float inputs:occlusion.connect = </MAT_glassDish/image_orm.outputs:out>
        float inputs:roughness = 1
        float inputs:roughness.connect = </MAT_glassDish/image_orm.outputs:out>
        color3f inputs:sheen_color = (0, 0, 0)
        float inputs:sheen_roughness = 0
        float inputs:specular = 1
        color3f inputs:specular_color = (1, 1, 1)
        vector3f inputs:tangent
        float inputs:thickness = 0
        float inputs:transmission = 0
        token outputs:out
    }

    def Shader "image_basecolor"
    {
        uniform token info:id = "ND_gltf_image_color3_color3_1_0"
        color3f inputs:default = (0, 0, 0)
        color3f inputs:factor = (1, 1, 1)
        asset inputs:file = @olives_col.png@
        string inputs:filtertype = "linear"
        float2 inputs:offset = (0, 0)
        int inputs:operationorder = 0
        float2 inputs:pivot = (0, 1)
        float inputs:rotate = 0
        float2 inputs:scale = (1, 1)
        float2 inputs:texcoord
        string inputs:uaddressmode = "periodic"
        string inputs:vaddressmode = "periodic"
        color3f outputs:out
    }

    def Shader "image_orm"
    {
        uniform token info:id = "ND_gltf_image_vector3_vector3_1_0"
        vector3f inputs:default = (0, 0, 0)
        asset inputs:file = @olives_orm.png@
        string inputs:filtertype = "linear"
        float2 inputs:offset = (0, 0)
        int inputs:operationorder = 0
        float2 inputs:pivot = (0, 1)
        float inputs:rotate = 0
        float2 inputs:scale = (1, 1)
        float2 inputs:texcoord
        string inputs:uaddressmode = "periodic"
        string inputs:vaddressmode = "periodic"
        vector3f outputs:out
    }

    def Shader "image_normal"
    {
        uniform token info:id = "ND_gltf_normalmap_vector3_1_0"
        vector3f inputs:default = (0.5, 0.5, 1)
        asset inputs:file = @olives_nrm.png@
        string inputs:filtertype = "linear"
        float2 inputs:offset = (0, 0)
        int inputs:operationorder = 0
        float2 inputs:pivot = (0, 1)
        float inputs:rotate = 0
        float2 inputs:scale = (1, 1)
        float2 inputs:texcoord
        string inputs:uaddressmode = "periodic"
        string inputs:vaddressmode = "periodic"
        vector3f outputs:out
    }

    def Shader "SHD_glassCover"
    {
        uniform token info:id = "ND_gltf_pbr_surfaceshader"
        float inputs:alpha = 1
        float inputs:alpha_cutoff = 0.5
        int inputs:alpha_mode = 0
        color3f inputs:attenuation_color = (1, 1, 1)
        float inputs:attenuation_distance = 3.40282e38
        color3f inputs:base_color = (1, 1, 1)
        float inputs:clearcoat = 0
        vector3f inputs:clearcoat_normal
        float inputs:clearcoat_roughness = 0
        color3f inputs:emissive = (0, 0, 0)
        float inputs:emissive_strength = 1
        float inputs:ior = 1.5
        float inputs:iridescence = 0
        float inputs:iridescence.connect = </MAT_glassDish/image_iridescence2.outputs:out>
        float inputs:iridescence_ior = 1.3
        float inputs:iridescence_thickness = 100
        float inputs:iridescence_thickness.connect = </MAT_glassDish/image_iridescence_thickness2.outputs:out>
        float inputs:metallic = 1
        float inputs:metallic.connect = </MAT_glassDish/image_orm2.outputs:out>
        vector3f inputs:normal.connect = </MAT_glassDish/image_normal2.outputs:out>
        float inputs:occlusion = 1
        float inputs:occlusion.connect = </MAT_glassDish/image_orm2.outputs:out>
        float inputs:roughness = 1
        float inputs:roughness.connect = </MAT_glassDish/image_orm2.outputs:out>
        color3f inputs:sheen_color = (0, 0, 0)
        float inputs:sheen_roughness = 0
        float inputs:specular = 1
        color3f inputs:specular_color = (1, 1, 1)
        vector3f inputs:tangent
        float inputs:thickness = 0
        float inputs:thickness.connect = </MAT_glassDish/thickness.outputs:out>
        float inputs:transmission = 1
        token outputs:out
    }

    def Shader "image_orm2"
    {
        uniform token info:id = "ND_gltf_image_vector3_vector3_1_0"
        vector3f inputs:default = (0, 0, 0)
        asset inputs:file = @glasscover_orm.png@
        string inputs:filtertype = "linear"
        float2 inputs:offset = (0, 0)
        int inputs:operationorder = 0
        float2 inputs:pivot = (0, 1)
        float inputs:rotate = 0
        float2 inputs:scale = (1, 1)
        float2 inputs:texcoord
        string inputs:uaddressmode = "periodic"
        string inputs:vaddressmode = "periodic"
        vector3f outputs:out
    }

    def Shader "image_normal2"
    {
        uniform token info:id = "ND_gltf_normalmap_vector3_1_0"
        vector3f inputs:default = (0.5, 0.5, 1)
        asset inputs:file = @glasscover_nrm.png@
        string inputs:filtertype = "linear"
        float2 inputs:offset = (0, 0)
        int inputs:operationorder = 0
        float2 inputs:pivot = (0, 1)
        float inputs:rotate = 0
        float2 inputs:scale = (1, 1)
        float2 inputs:texcoord
        string inputs:uaddressmode = "periodic"
        string inputs:vaddressmode = "periodic"
        vector3f outputs:out
    }

    def Shader "image_iridescence2"
    {
        uniform token info:id = "ND_gltf_image_float_float_1_0"
        float inputs:default = 0
        float inputs:factor = 1
        asset inputs:file = @glasscover_irid.png@
        string inputs:filtertype = "linear"
        float2 inputs:offset = (0, 0)
        int inputs:operationorder = 0
        float2 inputs:pivot = (0, 1)
        float inputs:rotate = 0
        float2 inputs:scale = (1, 1)
        float2 inputs:texcoord
        string inputs:uaddressmode = "periodic"
        string inputs:vaddressmode = "periodic"
        float outputs:out
    }

    def Shader "image_iridescence_thickness2"
    {
        uniform token info:id = "ND_gltf_iridescence_thickness_float_1_0"
        vector3f inputs:default = (0, 0, 0)
        asset inputs:file = @glasscover_irid.png@
        string inputs:filtertype = "linear"
        float2 inputs:offset = (0, 0)
        float2 inputs:pivot = (0, 0)
        float inputs:rotate = 0
        float2 inputs:scale = (1, 1)
        float2 inputs:texcoord
        float inputs:thicknessMax = 550
        float inputs:thicknessMin = 500
        string inputs:uaddressmode = "periodic"
        string inputs:vaddressmode = "periodic"
        float outputs:out
    }

    def Shader "thickness"
    {
        uniform token info:id = "ND_gltf_image_float_float_1_0"
        float inputs:default = 0
        float inputs:factor = 1
        asset inputs:file = @glasscover_thick.png@
        string inputs:filtertype = "linear"
        float2 inputs:offset = (0, 0)
        int inputs:operationorder = 0
        float2 inputs:pivot = (0, 1)
        float inputs:rotate = 0
        float2 inputs:scale = (1, 1)
        float2 inputs:texcoord
        string inputs:uaddressmode = "periodic"
        string inputs:vaddressmode = "periodic"
        float outputs:out
    }

    def Shader "SHD_goldLeaf"
    {
        uniform token info:id = "ND_gltf_pbr_surfaceshader"
        float inputs:alpha = 1
        float inputs:alpha_cutoff = 0.5
        int inputs:alpha_mode = 1
        color3f inputs:attenuation_color = (1, 1, 1)
        float inputs:attenuation_distance
        color3f inputs:base_color = (1, 1, 1)
        color3f inputs:base_color.connect = </MAT_glassDish/image_basecolor2.outputs:out>
        float inputs:clearcoat = 0
        vector3f inputs:clearcoat_normal
        float inputs:clearcoat_roughness = 0
        color3f inputs:emissive = (0, 0, 0)
        float inputs:emissive_strength = 1
        float inputs:ior = 1.5
        float inputs:iridescence = 0
        float inputs:iridescence_ior = 1.3
        float inputs:iridescence_thickness = 100
        float inputs:metallic = 1
        float inputs:metallic.connect = </MAT_glassDish/image_orm3.outputs:out>
        vector3f inputs:normal.connect = </MAT_glassDish/image_normal3.outputs:out>
        float inputs:occlusion = 1
        float inputs:occlusion.connect = </MAT_glassDish/image_orm3.outputs:out>
        float inputs:roughness = 1
        float inputs:roughness.connect = </MAT_glassDish/image_orm3.outputs:out>
        color3f inputs:sheen_color = (0, 0, 0)
        float inputs:sheen_roughness = 0
        float inputs:specular = 1
        color3f inputs:specular_color = (1, 1, 1)
        vector3f inputs:tangent
        float inputs:thickness = 0
        float inputs:transmission = 0
        token outputs:out
    }

    def Shader "image_basecolor2"
    {
        uniform token info:id = "ND_gltf_image_color3_color3_1_0"
        color3f inputs:default = (0, 0, 0)
        color3f inputs:factor = (1, 1, 1)
        asset inputs:file = @goldleaf_col.png@
        string inputs:filtertype = "linear"
        float2 inputs:offset = (0, 0)
        int inputs:operationorder = 0
        float2 inputs:pivot = (0, 1)
        float inputs:rotate = 0
        float2 inputs:scale = (1, 1)
        float2 inputs:texcoord
        string inputs:uaddressmode = "periodic"
        string inputs:vaddressmode = "periodic"
        color3f outputs:out
    }

    def Shader "image_orm3"
    {
        uniform token info:id = "ND_gltf_image_vector3_vector3_1_0"
        vector3f inputs:default = (0, 0, 0)
        asset inputs:file = @goldleaf_orm.png@
        string inputs:filtertype = "linear"
        float2 inputs:offset = (0, 0)
        int inputs:operationorder = 0
        float2 inputs:pivot = (0, 1)
        float inputs:rotate = 0
        float2 inputs:scale = (1, 1)
        float2 inputs:texcoord
        string inputs:uaddressmode = "periodic"
        string inputs:vaddressmode = "periodic"
        vector3f outputs:out
    }

    def Shader "image_normal3"
    {
        uniform token info:id = "ND_gltf_normalmap_vector3_1_0"
        vector3f inputs:default = (0.5, 0.5, 1)
        asset inputs:file = @goldleaf_nrm.png@
        string inputs:filtertype = "linear"
        float2 inputs:offset = (0, 0)
        int inputs:operationorder = 0
        float2 inputs:pivot = (0, 1)
        float inputs:rotate = 0
        float2 inputs:scale = (1, 1)
        float2 inputs:texcoord
        string inputs:uaddressmode = "periodic"
        string inputs:vaddressmode = "periodic"
        vector3f outputs:out
    }
}

def Material "MAT_olives"
{
    token outputs:mtlx:surface.connect = </MAT_olives.outputs:out>
    token outputs:out
}

def Material "MAT_glassCover"
{
    token outputs:mtlx:surface.connect = </MAT_glassCover.outputs:out>
    token outputs:out
}

def Material "MAT_goldLeaf"
{
    token outputs:mtlx:surface.connect = </MAT_goldLeaf.outputs:out>
    token outputs:out
}

