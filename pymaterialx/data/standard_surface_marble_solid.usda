#usda 1.0

def NodeGraph "NG_marble1"
{
    color3f inputs:base_color_1 = (0.8, 0.8, 0.8)
    color3f inputs:base_color_2 = (0.1, 0.1, 0.3)
    int inputs:noise_octaves = 3
    float inputs:noise_power = 3
    float inputs:noise_scale_1 = 6
    float inputs:noise_scale_2 = 4
    color3f outputs:out.connect = </NG_marble1/color_mix.outputs:out>

    def Shader "obj_pos"
    {
        vector3f outputs:out
    }

    def Shader "add_xyz"
    {
        vector3f inputs:in1.connect = </NG_marble1/obj_pos.outputs:out>
        vector3f inputs:in2 = (1, 1, 1)
        float outputs:out
    }

    def Shader "scale_xyz"
    {
        float inputs:in1.connect = </NG_marble1/add_xyz.outputs:out>
        float inputs:in2.connect = </NG_marble1.inputs:noise_scale_1>
        float outputs:out
    }

    def Shader "scale_pos"
    {
        vector3f inputs:in1.connect = </NG_marble1/obj_pos.outputs:out>
        float inputs:in2.connect = </NG_marble1.inputs:noise_scale_2>
        vector3f outputs:out
    }

    def Shader "noise"
    {
        int inputs:octaves.connect = </NG_marble1.inputs:noise_octaves>
        vector3f inputs:position.connect = </NG_marble1/scale_pos.outputs:out>
        float outputs:out
    }

    def Shader "scale_noise"
    {
        float inputs:in1.connect = </NG_marble1/noise.outputs:out>
        float inputs:in2 = 3
        float outputs:out
    }

    def Shader "sum"
    {
        float inputs:in1.connect = </NG_marble1/scale_xyz.outputs:out>
        float inputs:in2.connect = </NG_marble1/scale_noise.outputs:out>
        float outputs:out
    }

    def Shader "sin"
    {
        float inputs:in.connect = </NG_marble1/sum.outputs:out>
        float outputs:out
    }

    def Shader "scale"
    {
        float inputs:in1.connect = </NG_marble1/sin.outputs:out>
        float inputs:in2 = 0.5
        float outputs:out
    }

    def Shader "bias"
    {
        float inputs:in1.connect = </NG_marble1/scale.outputs:out>
        float inputs:in2 = 0.5
        float outputs:out
    }

    def Shader "power"
    {
        float inputs:in1.connect = </NG_marble1/bias.outputs:out>
        float inputs:in2.connect = </NG_marble1.inputs:noise_power>
        float outputs:out
    }

    def Shader "color_mix"
    {
        color3f inputs:bg.connect = </NG_marble1.inputs:base_color_1>
        color3f inputs:fg.connect = </NG_marble1.inputs:base_color_2>
        float inputs:mix.connect = </NG_marble1/power.outputs:out>
        color3f outputs:out
    }
}

def Shader "SR_marble1"
{
    float inputs:base = 1
    color3f inputs:base_color.connect = </NG_marble1.outputs:out>
    float inputs:specular_roughness = 0.1
    float inputs:subsurface = 0.4
    color3f inputs:subsurface_color.connect = </NG_marble1.outputs:out>
    token outputs:out
}

def Material "Marble_3D"
{
    token inputs:surfaceshader.connect = </SR_marble1.outputs:out>
}

